/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={272:(e,t,n)=>{"use strict";var r=n(723),a=[],l=[],o=r.makeRequestCallFromTimer((function(){if(l.length)throw l.shift()}));function i(e){var t;(t=a.length?a.pop():new u).task=e,r(t)}function u(){this.task=null}e.exports=i,u.prototype.call=function(){try{this.task.call()}catch(e){i.onerror?i.onerror(e):(l.push(e),o())}finally{this.task=null,a[a.length]=this}}},723:(e,t,n)=>{"use strict";function r(e){l.length||a(),l[l.length]=e}e.exports=r;var a,l=[],o=0;function i(){for(;o<l.length;){var e=o;if(o+=1,l[e].call(),o>1024){for(var t=0,n=l.length-o;t<n;t++)l[t]=l[t+o];l.length-=o,o=0}}l.length=0,o=0}var u,s,c,f=void 0!==n.g?n.g:self,d=f.MutationObserver||f.WebKitMutationObserver;function p(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"==typeof d?(u=1,s=new d(i),c=document.createTextNode(""),s.observe(c,{characterData:!0}),a=function(){u=-u,c.data=u}):a=p(i),r.requestFlush=a,r.makeRequestCallFromTimer=p},342:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(537),a=n.n(r),l=n(645),o=n.n(l)()(a());o.push([e.id,"/* #region FOOTER */\n\n.App-footer p {\n  font-family: 'Galano Grotesque Alt', sans-serif;\n  font-weight: 400;\n  font-size: 1.1rem;\n  font-style: italic;\n}\n\n/* #endregion */\n","",{version:3,sources:["webpack://./src/Footer/Footer.css"],names:[],mappings:"AAAA,mBAAmB;;AAEnB;EACE,+CAA+C;EAC/C,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA,eAAe",sourcesContent:["/* #region FOOTER */\n\n.App-footer p {\n  font-family: 'Galano Grotesque Alt', sans-serif;\n  font-weight: 400;\n  font-size: 1.1rem;\n  font-style: italic;\n}\n\n/* #endregion */\n"],sourceRoot:""}]);const i=o},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,l){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var i=0;i<this.length;i++){var u=this[i][0];null!=u&&(o[u]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);r&&o[c[0]]||(void 0!==l&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=l),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),l="/*# ".concat(a," */");return[t].concat([l]).join("\n")}return[t].join("\n")}},703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function l(){}l.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,l,o){if(o!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:l,resetWarningCache:a};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),a=n(840);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function u(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},m={};function h(e,t,n,r,a,l,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=l,this.removeEmptyString=o}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new h(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new h(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new h(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new h(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new h(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new h(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new h(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new h(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new h(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function b(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!f.call(m,e)||!f.call(p,e)&&(d.test(e)?m[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,v);y[t]=new h(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,v);y[t]=new h(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,v);y[t]=new h(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new h(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new h("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new h(e,1,!1,e.toLowerCase(),null,!0,!0)}));var w=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,k=Symbol.for("react.element"),S=Symbol.for("react.portal"),x=Symbol.for("react.fragment"),E=Symbol.for("react.strict_mode"),C=Symbol.for("react.profiler"),_=Symbol.for("react.provider"),P=Symbol.for("react.context"),O=Symbol.for("react.forward_ref"),N=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),z=Symbol.for("react.memo"),R=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var M=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var j=Symbol.iterator;function L(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=j&&e[j]||e["@@iterator"])?e:null}var F,I=Object.assign;function A(e){if(void 0===F)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);F=t&&t[1]||""}return"\n"+F+e}var D=!1;function B(e,t){if(!e||D)return"";D=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),l=r.stack.split("\n"),o=a.length-1,i=l.length-1;1<=o&&0<=i&&a[o]!==l[i];)i--;for(;1<=o&&0<=i;o--,i--)if(a[o]!==l[i]){if(1!==o||1!==i)do{if(o--,0>--i||a[o]!==l[i]){var u="\n"+a[o].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=o&&0<=i);break}}}finally{D=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?A(e):""}function W(e){switch(e.tag){case 5:return A(e.type);case 16:return A("Lazy");case 13:return A("Suspense");case 19:return A("SuspenseList");case 0:case 2:case 15:return B(e.type,!1);case 11:return B(e.type.render,!1);case 1:return B(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case S:return"Portal";case C:return"Profiler";case E:return"StrictMode";case N:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case _:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case z:return null!==(t=e.displayName||null)?t:U(e.type)||"Memo";case R:t=e._payload,e=e._init;try{return U(e(t))}catch(e){}}return null}function H(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(t);case 8:return t===E?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function $(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Q(e){e._valueTracker||(e._valueTracker=function(e){var t=$(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,l=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,l.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=$(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function G(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function K(e,t){var n=t.checked;return I({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=V(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function X(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function Z(e,t){X(e,t);var n=V(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&G(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+V(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return I({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(te(n)){if(1<n.length)throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:V(n)}}function le(e,t){var n=V(t.value),r=V(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var se,ce,fe=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((se=se||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=se.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},me=["Webkit","ms","Moz","O"];function he(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ye(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=he(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(pe).forEach((function(e){me.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ge=I({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,t){if(t){if(ge[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var we=null;function ke(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Se=null,xe=null,Ee=null;function Ce(e){if(e=ba(e)){if("function"!=typeof Se)throw Error(l(280));var t=e.stateNode;t&&(t=ka(t),Se(e.stateNode,e.type,t))}}function _e(e){xe?Ee?Ee.push(e):Ee=[e]:xe=e}function Pe(){if(xe){var e=xe,t=Ee;if(Ee=xe=null,Ce(e),t)for(e=0;e<t.length;e++)Ce(t[e])}}function Oe(e,t){return e(t)}function Ne(){}var Te=!1;function ze(e,t,n){if(Te)return e(t,n);Te=!0;try{return Oe(e,t,n)}finally{Te=!1,(null!==xe||null!==Ee)&&(Ne(),Pe())}}function Re(e,t){var n=e.stateNode;if(null===n)return null;var r=ka(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var Me=!1;if(c)try{var je={};Object.defineProperty(je,"passive",{get:function(){Me=!0}}),window.addEventListener("test",je,je),window.removeEventListener("test",je,je)}catch(ce){Me=!1}function Le(e,t,n,r,a,l,o,i,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Fe=!1,Ie=null,Ae=!1,De=null,Be={onError:function(e){Fe=!0,Ie=e}};function We(e,t,n,r,a,l,o,i,u){Fe=!1,Ie=null,Le.apply(Be,arguments)}function Ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function He(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ve(e){if(Ue(e)!==e)throw Error(l(188))}function $e(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ue(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Ve(a),e;if(o===r)return Ve(a),t;o=o.sibling}throw Error(l(188))}if(n.return!==r.return)n=a,r=o;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=o;break}if(u===r){i=!0,r=a,n=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===n){i=!0,n=o,r=a;break}if(u===r){i=!0,r=o,n=a;break}u=u.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e))?Qe(e):null}function Qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Qe(e);if(null!==t)return t;e=e.sibling}return null}var qe=a.unstable_scheduleCallback,Ge=a.unstable_cancelCallback,Ke=a.unstable_shouldYield,Ye=a.unstable_requestPaint,Xe=a.unstable_now,Ze=a.unstable_getCurrentPriorityLevel,Je=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,lt=null,ot=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(it(e)/ut|0)|0},it=Math.log,ut=Math.LN2,st=64,ct=4194304;function ft(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,l=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~a;0!==i?r=ft(i):0!=(l&=o)&&(r=ft(l))}else 0!=(o=n&~a)?r=ft(o):0!==l&&(r=ft(l));if(0===r)return 0;if(0!==t&&t!==r&&0==(t&a)&&((a=r&-r)>=(l=t&-t)||16===a&&0!=(4194240&l)))return t;if(0!=(4&r)&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-ot(t)),r|=e[n],t&=~a;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function mt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function ht(){var e=st;return 0==(4194240&(st<<=1))&&(st=64),e}function yt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function gt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function vt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-ot(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var bt=0;function wt(e){return 1<(e&=-e)?4<e?0!=(268435455&e)?16:536870912:4:1}var kt,St,xt,Et,Ct,_t=!1,Pt=[],Ot=null,Nt=null,Tt=null,zt=new Map,Rt=new Map,Mt=[],jt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Lt(e,t){switch(e){case"focusin":case"focusout":Ot=null;break;case"dragenter":case"dragleave":Nt=null;break;case"mouseover":case"mouseout":Tt=null;break;case"pointerover":case"pointerout":zt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Rt.delete(t.pointerId)}}function Ft(e,t,n,r,a,l){return null===e||e.nativeEvent!==l?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:l,targetContainers:[a]},null!==t&&null!==(t=ba(t))&&St(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function It(e){var t=va(e.target);if(null!==t){var n=Ue(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=He(n)))return e.blockedOn=t,void Ct(e.priority,(function(){xt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function At(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Kt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ba(n))&&St(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);we=r,n.target.dispatchEvent(r),we=null,t.shift()}return!0}function Dt(e,t,n){At(e)&&n.delete(t)}function Bt(){_t=!1,null!==Ot&&At(Ot)&&(Ot=null),null!==Nt&&At(Nt)&&(Nt=null),null!==Tt&&At(Tt)&&(Tt=null),zt.forEach(Dt),Rt.forEach(Dt)}function Wt(e,t){e.blockedOn===t&&(e.blockedOn=null,_t||(_t=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Bt)))}function Ut(e){function t(t){return Wt(t,e)}if(0<Pt.length){Wt(Pt[0],e);for(var n=1;n<Pt.length;n++){var r=Pt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Ot&&Wt(Ot,e),null!==Nt&&Wt(Nt,e),null!==Tt&&Wt(Tt,e),zt.forEach(t),Rt.forEach(t),n=0;n<Mt.length;n++)(r=Mt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Mt.length&&null===(n=Mt[0]).blockedOn;)It(n),null===n.blockedOn&&Mt.shift()}var Ht=w.ReactCurrentBatchConfig,Vt=!0;function $t(e,t,n,r){var a=bt,l=Ht.transition;Ht.transition=null;try{bt=1,qt(e,t,n,r)}finally{bt=a,Ht.transition=l}}function Qt(e,t,n,r){var a=bt,l=Ht.transition;Ht.transition=null;try{bt=4,qt(e,t,n,r)}finally{bt=a,Ht.transition=l}}function qt(e,t,n,r){if(Vt){var a=Kt(e,t,n,r);if(null===a)Vr(e,t,r,Gt,n),Lt(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return Ot=Ft(Ot,e,t,n,r,a),!0;case"dragenter":return Nt=Ft(Nt,e,t,n,r,a),!0;case"mouseover":return Tt=Ft(Tt,e,t,n,r,a),!0;case"pointerover":var l=a.pointerId;return zt.set(l,Ft(zt.get(l)||null,e,t,n,r,a)),!0;case"gotpointercapture":return l=a.pointerId,Rt.set(l,Ft(Rt.get(l)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Lt(e,r),4&t&&-1<jt.indexOf(e)){for(;null!==a;){var l=ba(a);if(null!==l&&kt(l),null===(l=Kt(e,t,n,r))&&Vr(e,t,r,Gt,n),l===a)break;a=l}null!==a&&r.stopPropagation()}else Vr(e,t,r,null,n)}}var Gt=null;function Kt(e,t,n,r){if(Gt=null,null!==(e=va(e=ke(r))))if(null===(t=Ue(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=He(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Gt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Xt=null,Zt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Zt,r=n.length,a="value"in Xt?Xt.value:Xt.textContent,l=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[l-t];t++);return Jt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,l){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=l,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return I(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var ln,on,un,sn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(sn),fn=I({},sn,{view:0,detail:0}),dn=an(fn),pn=I({},fn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(ln=e.screenX-un.screenX,on=e.screenY-un.screenY):on=ln=0,un=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:on}}),mn=an(pn),hn=an(I({},pn,{dataTransfer:0})),yn=an(I({},fn,{relatedTarget:0})),gn=an(I({},sn,{animationName:0,elapsedTime:0,pseudoElement:0})),vn=I({},sn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=an(vn),wn=an(I({},sn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function En(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function Cn(){return En}var _n=I({},fn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Sn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Pn=an(_n),On=an(I({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Nn=an(I({},fn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Tn=an(I({},sn,{propertyName:0,elapsedTime:0,pseudoElement:0})),zn=I({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Rn=an(zn),Mn=[9,13,27,32],jn=c&&"CompositionEvent"in window,Ln=null;c&&"documentMode"in document&&(Ln=document.documentMode);var Fn=c&&"TextEvent"in window&&!Ln,In=c&&(!jn||Ln&&8<Ln&&11>=Ln),An=String.fromCharCode(32),Dn=!1;function Bn(e,t){switch(e){case"keyup":return-1!==Mn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1,Hn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hn[e.type]:"textarea"===t}function $n(e,t,n,r){_e(r),0<(t=Qr(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Qn=null,qn=null;function Gn(e){Ar(e,0)}function Kn(e){if(q(wa(e)))return e}function Yn(e,t){if("change"===e)return t}var Xn=!1;if(c){var Zn;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}Zn=Jn}else Zn=!1;Xn=Zn&&(!document.documentMode||9<document.documentMode)}function tr(){Qn&&(Qn.detachEvent("onpropertychange",nr),qn=Qn=null)}function nr(e){if("value"===e.propertyName&&Kn(qn)){var t=[];$n(t,qn,e,ke(e)),ze(Gn,t)}}function rr(e,t,n){"focusin"===e?(tr(),qn=n,(Qn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(qn)}function lr(e,t){if("click"===e)return Kn(t)}function or(e,t){if("input"===e||"change"===e)return Kn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ur(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!f.call(t,a)||!ir(e[a],t[a]))return!1}return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=G();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=G((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function mr(e){var t=dr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&fr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,l=Math.min(r.start,a);r=void 0===r.end?l:Math.min(r.end,a),!e.extend&&l>r&&(a=r,r=l,l=a),a=cr(n,l);var o=cr(n,r);a&&o&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),l>r?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var hr=c&&"documentMode"in document&&11>=document.documentMode,yr=null,gr=null,vr=null,br=!1;function wr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==yr||yr!==G(r)||(r="selectionStart"in(r=yr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&ur(vr,r)||(vr=r,0<(r=Qr(gr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=yr)))}function kr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Sr={animationend:kr("Animation","AnimationEnd"),animationiteration:kr("Animation","AnimationIteration"),animationstart:kr("Animation","AnimationStart"),transitionend:kr("Transition","TransitionEnd")},xr={},Er={};function Cr(e){if(xr[e])return xr[e];if(!Sr[e])return e;var t,n=Sr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Er)return xr[e]=n[t];return e}c&&(Er=document.createElement("div").style,"AnimationEvent"in window||(delete Sr.animationend.animation,delete Sr.animationiteration.animation,delete Sr.animationstart.animation),"TransitionEvent"in window||delete Sr.transitionend.transition);var _r=Cr("animationend"),Pr=Cr("animationiteration"),Or=Cr("animationstart"),Nr=Cr("transitionend"),Tr=new Map,zr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Rr(e,t){Tr.set(e,t),u(t,[e])}for(var Mr=0;Mr<zr.length;Mr++){var jr=zr[Mr];Rr(jr.toLowerCase(),"on"+(jr[0].toUpperCase()+jr.slice(1)))}Rr(_r,"onAnimationEnd"),Rr(Pr,"onAnimationIteration"),Rr(Or,"onAnimationStart"),Rr("dblclick","onDoubleClick"),Rr("focusin","onFocus"),Rr("focusout","onBlur"),Rr(Nr,"onTransitionEnd"),s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Lr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Fr=new Set("cancel close invalid load scroll toggle".split(" ").concat(Lr));function Ir(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,i,u,s){if(We.apply(this,arguments),Fe){if(!Fe)throw Error(l(198));var c=Ie;Fe=!1,Ie=null,Ae||(Ae=!0,De=c)}}(r,t,void 0,e),e.currentTarget=null}function Ar(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var l=void 0;if(t)for(var o=r.length-1;0<=o;o--){var i=r[o],u=i.instance,s=i.currentTarget;if(i=i.listener,u!==l&&a.isPropagationStopped())break e;Ir(a,i,s),l=u}else for(o=0;o<r.length;o++){if(u=(i=r[o]).instance,s=i.currentTarget,i=i.listener,u!==l&&a.isPropagationStopped())break e;Ir(a,i,s),l=u}}}if(Ae)throw e=De,Ae=!1,De=null,e}function Dr(e,t){var n=t[ha];void 0===n&&(n=t[ha]=new Set);var r=e+"__bubble";n.has(r)||(Hr(t,e,2,!1),n.add(r))}function Br(e,t,n){var r=0;t&&(r|=4),Hr(n,e,r,t)}var Wr="_reactListening"+Math.random().toString(36).slice(2);function Ur(e){if(!e[Wr]){e[Wr]=!0,o.forEach((function(t){"selectionchange"!==t&&(Fr.has(t)||Br(t,!1,e),Br(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Wr]||(t[Wr]=!0,Br("selectionchange",!1,t))}}function Hr(e,t,n,r){switch(Yt(t)){case 1:var a=$t;break;case 4:a=Qt;break;default:a=qt}n=a.bind(null,t,n,e),a=void 0,!Me||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Vr(e,t,n,r,a){var l=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var u=o.tag;if((3===u||4===u)&&((u=o.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;o=o.return}for(;null!==i;){if(null===(o=va(i)))return;if(5===(u=o.tag)||6===u){r=l=o;continue e}i=i.parentNode}}r=r.return}ze((function(){var r=l,a=ke(n),o=[];e:{var i=Tr.get(e);if(void 0!==i){var u=cn,s=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=Pn;break;case"focusin":s="focus",u=yn;break;case"focusout":s="blur",u=yn;break;case"beforeblur":case"afterblur":u=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=hn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Nn;break;case _r:case Pr:case Or:u=gn;break;case Nr:u=Tn;break;case"scroll":u=dn;break;case"wheel":u=Rn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=On}var c=0!=(4&t),f=!c&&"scroll"===e,d=c?null!==i?i+"Capture":null:i;c=[];for(var p,m=r;null!==m;){var h=(p=m).stateNode;if(5===p.tag&&null!==h&&(p=h,null!==d&&null!=(h=Re(m,d))&&c.push($r(m,h,p))),f)break;m=m.return}0<c.length&&(i=new u(i,s,null,n,a),o.push({event:i,listeners:c}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===we||!(s=n.relatedTarget||n.fromElement)||!va(s)&&!s[ma])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?va(s):null)&&(s!==(f=Ue(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=mn,h="onMouseLeave",d="onMouseEnter",m="mouse","pointerout"!==e&&"pointerover"!==e||(c=On,h="onPointerLeave",d="onPointerEnter",m="pointer"),f=null==u?i:wa(u),p=null==s?i:wa(s),(i=new c(h,m+"leave",u,n,a)).target=f,i.relatedTarget=p,h=null,va(a)===r&&((c=new c(d,m+"enter",s,n,a)).target=p,c.relatedTarget=f,h=c),f=h,u&&s)e:{for(d=s,m=0,p=c=u;p;p=qr(p))m++;for(p=0,h=d;h;h=qr(h))p++;for(;0<m-p;)c=qr(c),m--;for(;0<p-m;)d=qr(d),p--;for(;m--;){if(c===d||null!==d&&c===d.alternate)break e;c=qr(c),d=qr(d)}c=null}else c=null;null!==u&&Gr(o,i,u,c,!1),null!==s&&null!==f&&Gr(o,f,s,c,!0)}if("select"===(u=(i=r?wa(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var y=Yn;else if(Vn(i))if(Xn)y=or;else{y=ar;var g=rr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(y=lr);switch(y&&(y=y(e,r))?$n(o,y,n,a):(g&&g(e,i,r),"focusout"===e&&(g=i._wrapperState)&&g.controlled&&"number"===i.type&&ee(i,"number",i.value)),g=r?wa(r):window,e){case"focusin":(Vn(g)||"true"===g.contentEditable)&&(yr=g,gr=r,vr=null);break;case"focusout":vr=gr=yr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,wr(o,n,a);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":wr(o,n,a)}var v;if(jn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Un?Bn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(In&&"ko"!==n.locale&&(Un||"onCompositionStart"!==b?"onCompositionEnd"===b&&Un&&(v=en()):(Zt="value"in(Xt=a)?Xt.value:Xt.textContent,Un=!0)),0<(g=Qr(r,b)).length&&(b=new wn(b,e,null,n,a),o.push({event:b,listeners:g}),(v||null!==(v=Wn(n)))&&(b.data=v))),(v=Fn?function(e,t){switch(e){case"compositionend":return Wn(t);case"keypress":return 32!==t.which?null:(Dn=!0,An);case"textInput":return(e=t.data)===An&&Dn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!jn&&Bn(e,t)?(e=en(),Jt=Zt=Xt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return In&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Qr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:r}),a.data=v)}Ar(o,t)}))}function $r(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Qr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,l=a.stateNode;5===a.tag&&null!==l&&(a=l,null!=(l=Re(e,n))&&r.unshift($r(e,l,a)),null!=(l=Re(e,t))&&r.push($r(e,l,a))),e=e.return}return r}function qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Gr(e,t,n,r,a){for(var l=t._reactName,o=[];null!==n&&n!==r;){var i=n,u=i.alternate,s=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==s&&(i=s,a?null!=(u=Re(n,l))&&o.unshift($r(n,u,i)):a||null!=(u=Re(n,l))&&o.push($r(n,u,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Kr=/\r\n?/g,Yr=/\u0000|\uFFFD/g;function Xr(e){return("string"==typeof e?e:""+e).replace(Kr,"\n").replace(Yr,"")}function Zr(e,t,n){if(t=Xr(t),Xr(e)!==t&&n)throw Error(l(425))}function Jr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,la="function"==typeof Promise?Promise:void 0,oa="function"==typeof queueMicrotask?queueMicrotask:void 0!==la?function(e){return la.resolve(null).then(e).catch(ia)}:ra;function ia(e){setTimeout((function(){throw e}))}function ua(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Ut(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Ut(t)}function sa(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ca(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var fa=Math.random().toString(36).slice(2),da="__reactFiber$"+fa,pa="__reactProps$"+fa,ma="__reactContainer$"+fa,ha="__reactEvents$"+fa,ya="__reactListeners$"+fa,ga="__reactHandles$"+fa;function va(e){var t=e[da];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ma]||n[da]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ca(e);null!==e;){if(n=e[da])return n;e=ca(e)}return t}n=(e=n).parentNode}return null}function ba(e){return!(e=e[da]||e[ma])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function wa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function ka(e){return e[pa]||null}var Sa=[],xa=-1;function Ea(e){return{current:e}}function Ca(e){0>xa||(e.current=Sa[xa],Sa[xa]=null,xa--)}function _a(e,t){xa++,Sa[xa]=e.current,e.current=t}var Pa={},Oa=Ea(Pa),Na=Ea(!1),Ta=Pa;function za(e,t){var n=e.type.contextTypes;if(!n)return Pa;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,l={};for(a in n)l[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=l),l}function Ra(e){return null!=e.childContextTypes}function Ma(){Ca(Na),Ca(Oa)}function ja(e,t,n){if(Oa.current!==Pa)throw Error(l(168));_a(Oa,t),_a(Na,n)}function La(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(l(108,H(e)||"Unknown",a));return I({},n,r)}function Fa(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Pa,Ta=Oa.current,_a(Oa,e),_a(Na,Na.current),!0}function Ia(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=La(e,t,Ta),r.__reactInternalMemoizedMergedChildContext=e,Ca(Na),Ca(Oa),_a(Oa,e)):Ca(Na),_a(Na,n)}var Aa=null,Da=!1,Ba=!1;function Wa(e){null===Aa?Aa=[e]:Aa.push(e)}function Ua(){if(!Ba&&null!==Aa){Ba=!0;var e=0,t=bt;try{var n=Aa;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Aa=null,Da=!1}catch(t){throw null!==Aa&&(Aa=Aa.slice(e+1)),qe(Je,Ua),t}finally{bt=t,Ba=!1}}return null}var Ha=[],Va=0,$a=null,Qa=0,qa=[],Ga=0,Ka=null,Ya=1,Xa="";function Za(e,t){Ha[Va++]=Qa,Ha[Va++]=$a,$a=e,Qa=t}function Ja(e,t,n){qa[Ga++]=Ya,qa[Ga++]=Xa,qa[Ga++]=Ka,Ka=e;var r=Ya;e=Xa;var a=32-ot(r)-1;r&=~(1<<a),n+=1;var l=32-ot(t)+a;if(30<l){var o=a-a%5;l=(r&(1<<o)-1).toString(32),r>>=o,a-=o,Ya=1<<32-ot(t)+a|n<<a|r,Xa=l+e}else Ya=1<<l|n<<a|r,Xa=e}function el(e){null!==e.return&&(Za(e,1),Ja(e,1,0))}function tl(e){for(;e===$a;)$a=Ha[--Va],Ha[Va]=null,Qa=Ha[--Va],Ha[Va]=null;for(;e===Ka;)Ka=qa[--Ga],qa[Ga]=null,Xa=qa[--Ga],qa[Ga]=null,Ya=qa[--Ga],qa[Ga]=null}var nl=null,rl=null,al=!1,ll=null;function ol(e,t){var n=Rs(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function il(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,nl=e,rl=sa(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,nl=e,rl=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ka?{id:Ya,overflow:Xa}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Rs(18,null,null,0)).stateNode=t,n.return=e,e.child=n,nl=e,rl=null,!0);default:return!1}}function ul(e){return 0!=(1&e.mode)&&0==(128&e.flags)}function sl(e){if(al){var t=rl;if(t){var n=t;if(!il(e,t)){if(ul(e))throw Error(l(418));t=sa(n.nextSibling);var r=nl;t&&il(e,t)?ol(r,n):(e.flags=-4097&e.flags|2,al=!1,nl=e)}}else{if(ul(e))throw Error(l(418));e.flags=-4097&e.flags|2,al=!1,nl=e}}}function cl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;nl=e}function fl(e){if(e!==nl)return!1;if(!al)return cl(e),al=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=rl)){if(ul(e))throw dl(),Error(l(418));for(;t;)ol(e,t),t=sa(t.nextSibling)}if(cl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){rl=sa(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}rl=null}}else rl=nl?sa(e.stateNode.nextSibling):null;return!0}function dl(){for(var e=rl;e;)e=sa(e.nextSibling)}function pl(){rl=nl=null,al=!1}function ml(e){null===ll?ll=[e]:ll.push(e)}var hl=w.ReactCurrentBatchConfig;function yl(e,t){if(e&&e.defaultProps){for(var n in t=I({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var gl=Ea(null),vl=null,bl=null,wl=null;function kl(){wl=bl=vl=null}function Sl(e){var t=gl.current;Ca(gl),e._currentValue=t}function xl(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function El(e,t){vl=e,wl=bl=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(wi=!0),e.firstContext=null)}function Cl(e){var t=e._currentValue;if(wl!==e)if(e={context:e,memoizedValue:t,next:null},null===bl){if(null===vl)throw Error(l(308));bl=e,vl.dependencies={lanes:0,firstContext:e}}else bl=bl.next=e;return t}var _l=null;function Pl(e){null===_l?_l=[e]:_l.push(e)}function Ol(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Pl(t)):(n.next=a.next,a.next=n),t.interleaved=n,Nl(e,r)}function Nl(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Tl=!1;function zl(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Rl(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ml(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function jl(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,0!=(2&Nu)){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Nl(e,n)}return null===(a=r.interleaved)?(t.next=t,Pl(r)):(t.next=a.next,a.next=t),r.interleaved=t,Nl(e,n)}function Ll(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!=(4194240&n))){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,vt(e,n)}}function Fl(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,l=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===l?a=l=o:l=l.next=o,n=n.next}while(null!==n);null===l?a=l=t:l=l.next=t}else a=l=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:l,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Il(e,t,n,r){var a=e.updateQueue;Tl=!1;var l=a.firstBaseUpdate,o=a.lastBaseUpdate,i=a.shared.pending;if(null!==i){a.shared.pending=null;var u=i,s=u.next;u.next=null,null===o?l=s:o.next=s,o=u;var c=e.alternate;null!==c&&(i=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===i?c.firstBaseUpdate=s:i.next=s,c.lastBaseUpdate=u)}if(null!==l){var f=a.baseState;for(o=0,c=s=u=null,i=l;;){var d=i.lane,p=i.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var m=e,h=i;switch(d=t,p=n,h.tag){case 1:if("function"==typeof(m=h.payload)){f=m.call(p,f,d);break e}f=m;break e;case 3:m.flags=-65537&m.flags|128;case 0:if(null==(d="function"==typeof(m=h.payload)?m.call(p,f,d):m))break e;f=I({},f,d);break e;case 2:Tl=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=a.effects)?a.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===c?(s=c=p,u=f):c=c.next=p,o|=d;if(null===(i=i.next)){if(null===(i=a.shared.pending))break;i=(d=i).next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}if(null===c&&(u=f),a.baseState=u,a.firstBaseUpdate=s,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{o|=a.lane,a=a.next}while(a!==t)}else null===l&&(a.shared.lanes=0);Iu|=o,e.lanes=o,e.memoizedState=f}}function Al(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(l(191,a));a.call(r)}}}var Dl=(new r.Component).refs;function Bl(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:I({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Wl={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ts(),a=ns(e),l=Ml(r,a);l.payload=t,null!=n&&(l.callback=n),null!==(t=jl(e,l,a))&&(rs(t,e,a,r),Ll(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ts(),a=ns(e),l=Ml(r,a);l.tag=1,l.payload=t,null!=n&&(l.callback=n),null!==(t=jl(e,l,a))&&(rs(t,e,a,r),Ll(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ts(),r=ns(e),a=Ml(n,r);a.tag=2,null!=t&&(a.callback=t),null!==(t=jl(e,a,r))&&(rs(t,e,r,n),Ll(t,e,r))}};function Ul(e,t,n,r,a,l,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,l,o):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(a,l))}function Hl(e,t,n){var r=!1,a=Pa,l=t.contextType;return"object"==typeof l&&null!==l?l=Cl(l):(a=Ra(t)?Ta:Oa.current,l=(r=null!=(r=t.contextTypes))?za(e,a):Pa),t=new t(n,l),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Wl,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=l),t}function Vl(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Wl.enqueueReplaceState(t,t.state,null)}function $l(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=Dl,zl(e);var l=t.contextType;"object"==typeof l&&null!==l?a.context=Cl(l):(l=Ra(t)?Ta:Oa.current,a.context=za(e,l)),a.state=e.memoizedState,"function"==typeof(l=t.getDerivedStateFromProps)&&(Bl(e,t,l,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&Wl.enqueueReplaceState(a,a.state,null),Il(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function Ql(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var a=r,o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=a.refs;t===Dl&&(t=a.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function ql(e,t){throw e=Object.prototype.toString.call(t),Error(l(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Gl(e){return(0,e._init)(e._payload)}function Kl(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=js(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=As(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){var l=n.type;return l===x?f(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===l||"object"==typeof l&&null!==l&&l.$$typeof===R&&Gl(l)===t.type)?((r=a(t,n.props)).ref=Ql(e,t,n),r.return=e,r):((r=Ls(n.type,n.key,n.props,null,e.mode,r)).ref=Ql(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Ds(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,l){return null===t||7!==t.tag?((t=Fs(n,e.mode,r,l)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=As(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case k:return(n=Ls(t.type,t.key,t.props,null,e.mode,n)).ref=Ql(e,null,t),n.return=e,n;case S:return(t=Ds(t,e.mode,n)).return=e,t;case R:return d(e,(0,t._init)(t._payload),n)}if(te(t)||L(t))return(t=Fs(t,e.mode,n,null)).return=e,t;ql(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case k:return n.key===a?s(e,t,n,r):null;case S:return n.key===a?c(e,t,n,r):null;case R:return p(e,t,(a=n._init)(n._payload),r)}if(te(n)||L(n))return null!==a?null:f(e,t,n,r,null);ql(e,n)}return null}function m(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case k:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a);case S:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case R:return m(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||L(r))return f(t,e=e.get(n)||null,r,a,null);ql(t,r)}return null}function h(a,l,i,u){for(var s=null,c=null,f=l,h=l=0,y=null;null!==f&&h<i.length;h++){f.index>h?(y=f,f=null):y=f.sibling;var g=p(a,f,i[h],u);if(null===g){null===f&&(f=y);break}e&&f&&null===g.alternate&&t(a,f),l=o(g,l,h),null===c?s=g:c.sibling=g,c=g,f=y}if(h===i.length)return n(a,f),al&&Za(a,h),s;if(null===f){for(;h<i.length;h++)null!==(f=d(a,i[h],u))&&(l=o(f,l,h),null===c?s=f:c.sibling=f,c=f);return al&&Za(a,h),s}for(f=r(a,f);h<i.length;h++)null!==(y=m(f,a,h,i[h],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?h:y.key),l=o(y,l,h),null===c?s=y:c.sibling=y,c=y);return e&&f.forEach((function(e){return t(a,e)})),al&&Za(a,h),s}function y(a,i,u,s){var c=L(u);if("function"!=typeof c)throw Error(l(150));if(null==(u=c.call(u)))throw Error(l(151));for(var f=c=null,h=i,y=i=0,g=null,v=u.next();null!==h&&!v.done;y++,v=u.next()){h.index>y?(g=h,h=null):g=h.sibling;var b=p(a,h,v.value,s);if(null===b){null===h&&(h=g);break}e&&h&&null===b.alternate&&t(a,h),i=o(b,i,y),null===f?c=b:f.sibling=b,f=b,h=g}if(v.done)return n(a,h),al&&Za(a,y),c;if(null===h){for(;!v.done;y++,v=u.next())null!==(v=d(a,v.value,s))&&(i=o(v,i,y),null===f?c=v:f.sibling=v,f=v);return al&&Za(a,y),c}for(h=r(a,h);!v.done;y++,v=u.next())null!==(v=m(h,a,y,v.value,s))&&(e&&null!==v.alternate&&h.delete(null===v.key?y:v.key),i=o(v,i,y),null===f?c=v:f.sibling=v,f=v);return e&&h.forEach((function(e){return t(a,e)})),al&&Za(a,y),c}return function e(r,l,o,u){if("object"==typeof o&&null!==o&&o.type===x&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case k:e:{for(var s=o.key,c=l;null!==c;){if(c.key===s){if((s=o.type)===x){if(7===c.tag){n(r,c.sibling),(l=a(c,o.props.children)).return=r,r=l;break e}}else if(c.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===R&&Gl(s)===c.type){n(r,c.sibling),(l=a(c,o.props)).ref=Ql(r,c,o),l.return=r,r=l;break e}n(r,c);break}t(r,c),c=c.sibling}o.type===x?((l=Fs(o.props.children,r.mode,u,o.key)).return=r,r=l):((u=Ls(o.type,o.key,o.props,null,r.mode,u)).ref=Ql(r,l,o),u.return=r,r=u)}return i(r);case S:e:{for(c=o.key;null!==l;){if(l.key===c){if(4===l.tag&&l.stateNode.containerInfo===o.containerInfo&&l.stateNode.implementation===o.implementation){n(r,l.sibling),(l=a(l,o.children||[])).return=r,r=l;break e}n(r,l);break}t(r,l),l=l.sibling}(l=Ds(o,r.mode,u)).return=r,r=l}return i(r);case R:return e(r,l,(c=o._init)(o._payload),u)}if(te(o))return h(r,l,o,u);if(L(o))return y(r,l,o,u);ql(r,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==l&&6===l.tag?(n(r,l.sibling),(l=a(l,o)).return=r,r=l):(n(r,l),(l=As(o,r.mode,u)).return=r,r=l),i(r)):n(r,l)}}var Yl=Kl(!0),Xl=Kl(!1),Zl={},Jl=Ea(Zl),eo=Ea(Zl),to=Ea(Zl);function no(e){if(e===Zl)throw Error(l(174));return e}function ro(e,t){switch(_a(to,t),_a(eo,e),_a(Jl,Zl),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ca(Jl),_a(Jl,t)}function ao(){Ca(Jl),Ca(eo),Ca(to)}function lo(e){no(to.current);var t=no(Jl.current),n=ue(t,e.type);t!==n&&(_a(eo,e),_a(Jl,n))}function oo(e){eo.current===e&&(Ca(Jl),Ca(eo))}var io=Ea(0);function uo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var so=[];function co(){for(var e=0;e<so.length;e++)so[e]._workInProgressVersionPrimary=null;so.length=0}var fo=w.ReactCurrentDispatcher,po=w.ReactCurrentBatchConfig,mo=0,ho=null,yo=null,go=null,vo=!1,bo=!1,wo=0,ko=0;function So(){throw Error(l(321))}function xo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function Eo(e,t,n,r,a,o){if(mo=o,ho=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,fo.current=null===e||null===e.memoizedState?ii:ui,e=n(r,a),bo){o=0;do{if(bo=!1,wo=0,25<=o)throw Error(l(301));o+=1,go=yo=null,t.updateQueue=null,fo.current=si,e=n(r,a)}while(bo)}if(fo.current=oi,t=null!==yo&&null!==yo.next,mo=0,go=yo=ho=null,vo=!1,t)throw Error(l(300));return e}function Co(){var e=0!==wo;return wo=0,e}function _o(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===go?ho.memoizedState=go=e:go=go.next=e,go}function Po(){if(null===yo){var e=ho.alternate;e=null!==e?e.memoizedState:null}else e=yo.next;var t=null===go?ho.memoizedState:go.next;if(null!==t)go=t,yo=e;else{if(null===e)throw Error(l(310));e={memoizedState:(yo=e).memoizedState,baseState:yo.baseState,baseQueue:yo.baseQueue,queue:yo.queue,next:null},null===go?ho.memoizedState=go=e:go=go.next=e}return go}function Oo(e,t){return"function"==typeof t?t(e):t}function No(e){var t=Po(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=yo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,n.pending=null}if(null!==a){o=a.next,r=r.baseState;var u=i=null,s=null,c=o;do{var f=c.lane;if((mo&f)===f)null!==s&&(s=s.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:f,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===s?(u=s=d,i=r):s=s.next=d,ho.lanes|=f,Iu|=f}c=c.next}while(null!==c&&c!==o);null===s?i=r:s.next=u,ir(r,t.memoizedState)||(wi=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=s,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{o=a.lane,ho.lanes|=o,Iu|=o,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function To(e){var t=Po(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);ir(o,t.memoizedState)||(wi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function zo(){}function Ro(e,t){var n=ho,r=Po(),a=t(),o=!ir(r.memoizedState,a);if(o&&(r.memoizedState=a,wi=!0),r=r.queue,Vo(Lo.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||null!==go&&1&go.memoizedState.tag){if(n.flags|=2048,Do(9,jo.bind(null,n,r,a,t),void 0,null),null===Tu)throw Error(l(349));0!=(30&mo)||Mo(n,t,a)}return a}function Mo(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ho.updateQueue)?(t={lastEffect:null,stores:null},ho.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function jo(e,t,n,r){t.value=n,t.getSnapshot=r,Fo(t)&&Io(e)}function Lo(e,t,n){return n((function(){Fo(t)&&Io(e)}))}function Fo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ir(e,n)}catch(e){return!0}}function Io(e){var t=Nl(e,1);null!==t&&rs(t,e,1,-1)}function Ao(e){var t=_o();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Oo,lastRenderedState:e},t.queue=e,e=e.dispatch=ni.bind(null,ho,e),[t.memoizedState,e]}function Do(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=ho.updateQueue)?(t={lastEffect:null,stores:null},ho.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Bo(){return Po().memoizedState}function Wo(e,t,n,r){var a=_o();ho.flags|=e,a.memoizedState=Do(1|t,n,void 0,void 0===r?null:r)}function Uo(e,t,n,r){var a=Po();r=void 0===r?null:r;var l=void 0;if(null!==yo){var o=yo.memoizedState;if(l=o.destroy,null!==r&&xo(r,o.deps))return void(a.memoizedState=Do(t,n,l,r))}ho.flags|=e,a.memoizedState=Do(1|t,n,l,r)}function Ho(e,t){return Wo(8390656,8,e,t)}function Vo(e,t){return Uo(2048,8,e,t)}function $o(e,t){return Uo(4,2,e,t)}function Qo(e,t){return Uo(4,4,e,t)}function qo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Go(e,t,n){return n=null!=n?n.concat([e]):null,Uo(4,4,qo.bind(null,t,e),n)}function Ko(){}function Yo(e,t){var n=Po();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&xo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Xo(e,t){var n=Po();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&xo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Zo(e,t,n){return 0==(21&mo)?(e.baseState&&(e.baseState=!1,wi=!0),e.memoizedState=n):(ir(n,t)||(n=ht(),ho.lanes|=n,Iu|=n,e.baseState=!0),t)}function Jo(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=po.transition;po.transition={};try{e(!1),t()}finally{bt=n,po.transition=r}}function ei(){return Po().memoizedState}function ti(e,t,n){var r=ns(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},ri(e)?ai(t,n):null!==(n=Ol(e,t,n,r))&&(rs(n,e,r,ts()),li(n,t,r))}function ni(e,t,n){var r=ns(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(ri(e))ai(t,a);else{var l=e.alternate;if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=l(o,n);if(a.hasEagerState=!0,a.eagerState=i,ir(i,o)){var u=t.interleaved;return null===u?(a.next=a,Pl(t)):(a.next=u.next,u.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Ol(e,t,a,r))&&(rs(n,e,r,a=ts()),li(n,t,r))}}function ri(e){var t=e.alternate;return e===ho||null!==t&&t===ho}function ai(e,t){bo=vo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function li(e,t,n){if(0!=(4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,vt(e,n)}}var oi={readContext:Cl,useCallback:So,useContext:So,useEffect:So,useImperativeHandle:So,useInsertionEffect:So,useLayoutEffect:So,useMemo:So,useReducer:So,useRef:So,useState:So,useDebugValue:So,useDeferredValue:So,useTransition:So,useMutableSource:So,useSyncExternalStore:So,useId:So,unstable_isNewReconciler:!1},ii={readContext:Cl,useCallback:function(e,t){return _o().memoizedState=[e,void 0===t?null:t],e},useContext:Cl,useEffect:Ho,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Wo(4194308,4,qo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Wo(4194308,4,e,t)},useInsertionEffect:function(e,t){return Wo(4,2,e,t)},useMemo:function(e,t){var n=_o();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=_o();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=ti.bind(null,ho,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},_o().memoizedState=e},useState:Ao,useDebugValue:Ko,useDeferredValue:function(e){return _o().memoizedState=e},useTransition:function(){var e=Ao(!1),t=e[0];return e=Jo.bind(null,e[1]),_o().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ho,a=_o();if(al){if(void 0===n)throw Error(l(407));n=n()}else{if(n=t(),null===Tu)throw Error(l(349));0!=(30&mo)||Mo(r,t,n)}a.memoizedState=n;var o={value:n,getSnapshot:t};return a.queue=o,Ho(Lo.bind(null,r,o,e),[e]),r.flags|=2048,Do(9,jo.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=_o(),t=Tu.identifierPrefix;if(al){var n=Xa;t=":"+t+"R"+(n=(Ya&~(1<<32-ot(Ya)-1)).toString(32)+n),0<(n=wo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=ko++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ui={readContext:Cl,useCallback:Yo,useContext:Cl,useEffect:Vo,useImperativeHandle:Go,useInsertionEffect:$o,useLayoutEffect:Qo,useMemo:Xo,useReducer:No,useRef:Bo,useState:function(){return No(Oo)},useDebugValue:Ko,useDeferredValue:function(e){return Zo(Po(),yo.memoizedState,e)},useTransition:function(){return[No(Oo)[0],Po().memoizedState]},useMutableSource:zo,useSyncExternalStore:Ro,useId:ei,unstable_isNewReconciler:!1},si={readContext:Cl,useCallback:Yo,useContext:Cl,useEffect:Vo,useImperativeHandle:Go,useInsertionEffect:$o,useLayoutEffect:Qo,useMemo:Xo,useReducer:To,useRef:Bo,useState:function(){return To(Oo)},useDebugValue:Ko,useDeferredValue:function(e){var t=Po();return null===yo?t.memoizedState=e:Zo(t,yo.memoizedState,e)},useTransition:function(){return[To(Oo)[0],Po().memoizedState]},useMutableSource:zo,useSyncExternalStore:Ro,useId:ei,unstable_isNewReconciler:!1};function ci(e,t){try{var n="",r=t;do{n+=W(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function fi(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function di(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var pi="function"==typeof WeakMap?WeakMap:Map;function mi(e,t,n){(n=Ml(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){$u||($u=!0,Qu=r),di(0,t)},n}function hi(e,t,n){(n=Ml(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){di(0,t)}}var l=e.stateNode;return null!==l&&"function"==typeof l.componentDidCatch&&(n.callback=function(){di(0,t),"function"!=typeof r&&(null===qu?qu=new Set([this]):qu.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function yi(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new pi;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=_s.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function vi(e,t,n,r,a){return 0==(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ml(-1,1)).tag=2,jl(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=a,e)}var bi=w.ReactCurrentOwner,wi=!1;function ki(e,t,n,r){t.child=null===e?Xl(t,null,n,r):Yl(t,e.child,n,r)}function Si(e,t,n,r,a){n=n.render;var l=t.ref;return El(t,a),r=Eo(e,t,n,r,l,a),n=Co(),null===e||wi?(al&&n&&el(t),t.flags|=1,ki(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,$i(e,t,a))}function xi(e,t,n,r,a){if(null===e){var l=n.type;return"function"!=typeof l||Ms(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ls(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Ei(e,t,l,r,a))}if(l=e.child,0==(e.lanes&a)){var o=l.memoizedProps;if((n=null!==(n=n.compare)?n:ur)(o,r)&&e.ref===t.ref)return $i(e,t,a)}return t.flags|=1,(e=js(l,r)).ref=t.ref,e.return=t,t.child=e}function Ei(e,t,n,r,a){if(null!==e){var l=e.memoizedProps;if(ur(l,r)&&e.ref===t.ref){if(wi=!1,t.pendingProps=r=l,0==(e.lanes&a))return t.lanes=e.lanes,$i(e,t,a);0!=(131072&e.flags)&&(wi=!0)}}return Pi(e,t,n,r,a)}function Ci(e,t,n){var r=t.pendingProps,a=r.children,l=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(0==(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},_a(ju,Mu),Mu|=n;else{if(0==(1073741824&n))return e=null!==l?l.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,_a(ju,Mu),Mu|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==l?l.baseLanes:n,_a(ju,Mu),Mu|=r}else null!==l?(r=l.baseLanes|n,t.memoizedState=null):r=n,_a(ju,Mu),Mu|=r;return ki(e,t,a,n),t.child}function _i(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Pi(e,t,n,r,a){var l=Ra(n)?Ta:Oa.current;return l=za(t,l),El(t,a),n=Eo(e,t,n,r,l,a),r=Co(),null===e||wi?(al&&r&&el(t),t.flags|=1,ki(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,$i(e,t,a))}function Oi(e,t,n,r,a){if(Ra(n)){var l=!0;Fa(t)}else l=!1;if(El(t,a),null===t.stateNode)Vi(e,t),Hl(t,n,r),$l(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var u=o.context,s=n.contextType;s="object"==typeof s&&null!==s?Cl(s):za(t,s=Ra(n)?Ta:Oa.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==r||u!==s)&&Vl(t,o,r,s),Tl=!1;var d=t.memoizedState;o.state=d,Il(t,r,o,a),u=t.memoizedState,i!==r||d!==u||Na.current||Tl?("function"==typeof c&&(Bl(t,n,c,r),u=t.memoizedState),(i=Tl||Ul(t,n,i,r,d,u,s))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4194308)):("function"==typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),o.props=r,o.state=u,o.context=s,r=i):("function"==typeof o.componentDidMount&&(t.flags|=4194308),r=!1)}else{o=t.stateNode,Rl(e,t),i=t.memoizedProps,s=t.type===t.elementType?i:yl(t.type,i),o.props=s,f=t.pendingProps,d=o.context,u="object"==typeof(u=n.contextType)&&null!==u?Cl(u):za(t,u=Ra(n)?Ta:Oa.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==f||d!==u)&&Vl(t,o,r,u),Tl=!1,d=t.memoizedState,o.state=d,Il(t,r,o,a);var m=t.memoizedState;i!==f||d!==m||Na.current||Tl?("function"==typeof p&&(Bl(t,n,p,r),m=t.memoizedState),(s=Tl||Ul(t,n,s,r,d,m,u)||!1)?(c||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,m,u),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,m,u)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=m),o.props=r,o.state=m,o.context=u,r=s):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return Ni(e,t,n,r,l,a)}function Ni(e,t,n,r,a,l){_i(e,t);var o=0!=(128&t.flags);if(!r&&!o)return a&&Ia(t,n,!1),$i(e,t,l);r=t.stateNode,bi.current=t;var i=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=Yl(t,e.child,null,l),t.child=Yl(t,null,i,l)):ki(e,t,i,l),t.memoizedState=r.state,a&&Ia(t,n,!0),t.child}function Ti(e){var t=e.stateNode;t.pendingContext?ja(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ja(0,t.context,!1),ro(e,t.containerInfo)}function zi(e,t,n,r,a){return pl(),ml(a),t.flags|=256,ki(e,t,n,r),t.child}var Ri,Mi,ji,Li,Fi={dehydrated:null,treeContext:null,retryLane:0};function Ii(e){return{baseLanes:e,cachePool:null,transitions:null}}function Ai(e,t,n){var r,a=t.pendingProps,o=io.current,i=!1,u=0!=(128&t.flags);if((r=u)||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),_a(io,1&o),null===e)return sl(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0==(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(u=a.children,e=a.fallback,i?(a=t.mode,i=t.child,u={mode:"hidden",children:u},0==(1&a)&&null!==i?(i.childLanes=0,i.pendingProps=u):i=Is(u,a,0,null),e=Fs(e,a,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Ii(n),t.memoizedState=Fi,e):Di(t,u));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,t,n,r,a,o,i){if(n)return 256&t.flags?(t.flags&=-257,Bi(e,t,i,r=fi(Error(l(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=r.fallback,a=t.mode,r=Is({mode:"visible",children:r.children},a,0,null),(o=Fs(o,a,i,null)).flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,0!=(1&t.mode)&&Yl(t,e.child,null,i),t.child.memoizedState=Ii(i),t.memoizedState=Fi,o);if(0==(1&t.mode))return Bi(e,t,i,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var u=r.dgst;return r=u,Bi(e,t,i,r=fi(o=Error(l(419)),r,void 0))}if(u=0!=(i&e.childLanes),wi||u){if(null!==(r=Tu)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!=(a&(r.suspendedLanes|i))?0:a)&&a!==o.retryLane&&(o.retryLane=a,Nl(e,a),rs(r,e,a,-1))}return ys(),Bi(e,t,i,r=fi(Error(l(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Os.bind(null,e),a._reactRetry=t,null):(e=o.treeContext,rl=sa(a.nextSibling),nl=t,al=!0,ll=null,null!==e&&(qa[Ga++]=Ya,qa[Ga++]=Xa,qa[Ga++]=Ka,Ya=e.id,Xa=e.overflow,Ka=t),(t=Di(t,r.children)).flags|=4096,t)}(e,t,u,a,r,o,n);if(i){i=a.fallback,u=t.mode,r=(o=e.child).sibling;var s={mode:"hidden",children:a.children};return 0==(1&u)&&t.child!==o?((a=t.child).childLanes=0,a.pendingProps=s,t.deletions=null):(a=js(o,s)).subtreeFlags=14680064&o.subtreeFlags,null!==r?i=js(r,i):(i=Fs(i,u,n,null)).flags|=2,i.return=t,a.return=t,a.sibling=i,t.child=a,a=i,i=t.child,u=null===(u=e.child.memoizedState)?Ii(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},i.memoizedState=u,i.childLanes=e.childLanes&~n,t.memoizedState=Fi,a}return e=(i=e.child).sibling,a=js(i,{mode:"visible",children:a.children}),0==(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Di(e,t){return(t=Is({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Bi(e,t,n,r){return null!==r&&ml(r),Yl(t,e.child,null,n),(e=Di(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Wi(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),xl(e.return,t,n)}function Ui(e,t,n,r,a){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=a)}function Hi(e,t,n){var r=t.pendingProps,a=r.revealOrder,l=r.tail;if(ki(e,t,r.children,n),0!=(2&(r=io.current)))r=1&r|2,t.flags|=128;else{if(null!==e&&0!=(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Wi(e,n,t);else if(19===e.tag)Wi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(_a(io,r),0==(1&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===uo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Ui(t,!1,a,n,l);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===uo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Ui(t,!0,n,null,l);break;case"together":Ui(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Vi(e,t){0==(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function $i(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Iu|=t.lanes,0==(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=js(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=js(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Qi(e,t){if(!al)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function qi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Gi(e,t,n){var r=t.pendingProps;switch(tl(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(t),null;case 1:case 17:return Ra(t.type)&&Ma(),qi(t),null;case 3:return r=t.stateNode,ao(),Ca(Na),Ca(Oa),co(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fl(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0==(256&t.flags)||(t.flags|=1024,null!==ll&&(is(ll),ll=null))),Mi(e,t),qi(t),null;case 5:oo(t);var a=no(to.current);if(n=t.type,null!==e&&null!=t.stateNode)ji(e,t,n,r,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(l(166));return qi(t),null}if(e=no(Jl.current),fl(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[da]=t,r[pa]=o,e=0!=(1&t.mode),n){case"dialog":Dr("cancel",r),Dr("close",r);break;case"iframe":case"object":case"embed":Dr("load",r);break;case"video":case"audio":for(a=0;a<Lr.length;a++)Dr(Lr[a],r);break;case"source":Dr("error",r);break;case"img":case"image":case"link":Dr("error",r),Dr("load",r);break;case"details":Dr("toggle",r);break;case"input":Y(r,o),Dr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Dr("invalid",r);break;case"textarea":ae(r,o),Dr("invalid",r)}for(var u in ve(n,o),a=null,o)if(o.hasOwnProperty(u)){var s=o[u];"children"===u?"string"==typeof s?r.textContent!==s&&(!0!==o.suppressHydrationWarning&&Zr(r.textContent,s,e),a=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(!0!==o.suppressHydrationWarning&&Zr(r.textContent,s,e),a=["children",""+s]):i.hasOwnProperty(u)&&null!=s&&"onScroll"===u&&Dr("scroll",r)}switch(n){case"input":Q(r),J(r,o,!0);break;case"textarea":Q(r),oe(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=Jr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{u=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[da]=t,e[pa]=r,Ri(e,t,!1,!1),t.stateNode=e;e:{switch(u=be(n,r),n){case"dialog":Dr("cancel",e),Dr("close",e),a=r;break;case"iframe":case"object":case"embed":Dr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Lr.length;a++)Dr(Lr[a],e);a=r;break;case"source":Dr("error",e),a=r;break;case"img":case"image":case"link":Dr("error",e),Dr("load",e),a=r;break;case"details":Dr("toggle",e),a=r;break;case"input":Y(e,r),a=K(e,r),Dr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=I({},r,{value:void 0}),Dr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Dr("invalid",e)}for(o in ve(n,a),s=a)if(s.hasOwnProperty(o)){var c=s[o];"style"===o?ye(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&fe(e,c):"children"===o?"string"==typeof c?("textarea"!==n||""!==c)&&de(e,c):"number"==typeof c&&de(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=c&&"onScroll"===o&&Dr("scroll",e):null!=c&&b(e,o,c,u))}switch(n){case"input":Q(e),J(e,r,!1);break;case"textarea":Q(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+V(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?ne(e,!!r.multiple,o,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qi(t),null;case 6:if(e&&null!=t.stateNode)Li(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));if(n=no(to.current),no(Jl.current),fl(t)){if(r=t.stateNode,n=t.memoizedProps,r[da]=t,(o=r.nodeValue!==n)&&null!==(e=nl))switch(e.tag){case 3:Zr(r.nodeValue,n,0!=(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,n,0!=(1&e.mode))}o&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[da]=t,t.stateNode=r}return qi(t),null;case 13:if(Ca(io),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(al&&null!==rl&&0!=(1&t.mode)&&0==(128&t.flags))dl(),pl(),t.flags|=98560,o=!1;else if(o=fl(t),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(l(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(l(317));o[da]=t}else pl(),0==(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qi(t),o=!1}else null!==ll&&(is(ll),ll=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!=(128&t.flags)?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,0!=(1&t.mode)&&(null===e||0!=(1&io.current)?0===Lu&&(Lu=3):ys())),null!==t.updateQueue&&(t.flags|=4),qi(t),null);case 4:return ao(),Mi(e,t),null===e&&Ur(t.stateNode.containerInfo),qi(t),null;case 10:return Sl(t.type._context),qi(t),null;case 19:if(Ca(io),null===(o=t.memoizedState))return qi(t),null;if(r=0!=(128&t.flags),null===(u=o.rendering))if(r)Qi(o,!1);else{if(0!==Lu||null!==e&&0!=(128&e.flags))for(e=t.child;null!==e;){if(null!==(u=uo(e))){for(t.flags|=128,Qi(o,!1),null!==(r=u.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(o=n).flags&=14680066,null===(u=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=u.childLanes,o.lanes=u.lanes,o.child=u.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=u.memoizedProps,o.memoizedState=u.memoizedState,o.updateQueue=u.updateQueue,o.type=u.type,e=u.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return _a(io,1&io.current|2),t.child}e=e.sibling}null!==o.tail&&Xe()>Hu&&(t.flags|=128,r=!0,Qi(o,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=uo(u))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Qi(o,!0),null===o.tail&&"hidden"===o.tailMode&&!u.alternate&&!al)return qi(t),null}else 2*Xe()-o.renderingStartTime>Hu&&1073741824!==n&&(t.flags|=128,r=!0,Qi(o,!1),t.lanes=4194304);o.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=o.last)?n.sibling=u:t.child=u,o.last=u)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Xe(),t.sibling=null,n=io.current,_a(io,r?1&n|2:1&n),t):(qi(t),null);case 22:case 23:return ds(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&0!=(1&t.mode)?0!=(1073741824&Mu)&&(qi(t),6&t.subtreeFlags&&(t.flags|=8192)):qi(t),null;case 24:case 25:return null}throw Error(l(156,t.tag))}function Ki(e,t){switch(tl(t),t.tag){case 1:return Ra(t.type)&&Ma(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ao(),Ca(Na),Ca(Oa),co(),0!=(65536&(e=t.flags))&&0==(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(Ca(io),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(l(340));pl()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ca(io),null;case 4:return ao(),null;case 10:return Sl(t.type._context),null;case 22:case 23:return ds(),null;default:return null}}Ri=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Mi=function(){},ji=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,no(Jl.current);var l,o=null;switch(n){case"input":a=K(e,a),r=K(e,r),o=[];break;case"select":a=I({},a,{value:void 0}),r=I({},r,{value:void 0}),o=[];break;case"textarea":a=re(e,a),r=re(e,r),o=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(c in ve(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var u=a[c];for(l in u)u.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(i.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in r){var s=r[c];if(u=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&s!==u&&(null!=s||null!=u))if("style"===c)if(u){for(l in u)!u.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in s)s.hasOwnProperty(l)&&u[l]!==s[l]&&(n||(n={}),n[l]=s[l])}else n||(o||(o=[]),o.push(c,n)),n=s;else"dangerouslySetInnerHTML"===c?(s=s?s.__html:void 0,u=u?u.__html:void 0,null!=s&&u!==s&&(o=o||[]).push(c,s)):"children"===c?"string"!=typeof s&&"number"!=typeof s||(o=o||[]).push(c,""+s):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(i.hasOwnProperty(c)?(null!=s&&"onScroll"===c&&Dr("scroll",e),o||u===s||(o=[])):(o=o||[]).push(c,s))}n&&(o=o||[]).push("style",n);var c=o;(t.updateQueue=c)&&(t.flags|=4)}},Li=function(e,t,n,r){n!==r&&(t.flags|=4)};var Yi=!1,Xi=!1,Zi="function"==typeof WeakSet?WeakSet:Set,Ji=null;function eu(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Cs(e,t,n)}else n.current=null}function tu(e,t,n){try{n()}catch(n){Cs(e,t,n)}}var nu=!1;function ru(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var l=a.destroy;a.destroy=void 0,void 0!==l&&tu(t,n,l)}a=a.next}while(a!==r)}}function au(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function lu(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ou(e){var t=e.alternate;null!==t&&(e.alternate=null,ou(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[da],delete t[pa],delete t[ha],delete t[ya],delete t[ga]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function iu(e){return 5===e.tag||3===e.tag||4===e.tag}function uu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||iu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function su(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(su(e,t,n),e=e.sibling;null!==e;)su(e,t,n),e=e.sibling}function cu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cu(e,t,n),e=e.sibling;null!==e;)cu(e,t,n),e=e.sibling}var fu=null,du=!1;function pu(e,t,n){for(n=n.child;null!==n;)mu(e,t,n),n=n.sibling}function mu(e,t,n){if(lt&&"function"==typeof lt.onCommitFiberUnmount)try{lt.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:Xi||eu(n,t);case 6:var r=fu,a=du;fu=null,pu(e,t,n),du=a,null!==(fu=r)&&(du?(e=fu,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):fu.removeChild(n.stateNode));break;case 18:null!==fu&&(du?(e=fu,n=n.stateNode,8===e.nodeType?ua(e.parentNode,n):1===e.nodeType&&ua(e,n),Ut(e)):ua(fu,n.stateNode));break;case 4:r=fu,a=du,fu=n.stateNode.containerInfo,du=!0,pu(e,t,n),fu=r,du=a;break;case 0:case 11:case 14:case 15:if(!Xi&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var l=a,o=l.destroy;l=l.tag,void 0!==o&&(0!=(2&l)||0!=(4&l))&&tu(n,t,o),a=a.next}while(a!==r)}pu(e,t,n);break;case 1:if(!Xi&&(eu(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Cs(n,t,e)}pu(e,t,n);break;case 21:pu(e,t,n);break;case 22:1&n.mode?(Xi=(r=Xi)||null!==n.memoizedState,pu(e,t,n),Xi=r):pu(e,t,n);break;default:pu(e,t,n)}}function hu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var r=Ns.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function yu(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var o=e,i=t,u=i;e:for(;null!==u;){switch(u.tag){case 5:fu=u.stateNode,du=!1;break e;case 3:case 4:fu=u.stateNode.containerInfo,du=!0;break e}u=u.return}if(null===fu)throw Error(l(160));mu(o,i,a),fu=null,du=!1;var s=a.alternate;null!==s&&(s.return=null),a.return=null}catch(e){Cs(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gu(t,e),t=t.sibling}function gu(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(yu(t,e),vu(e),4&r){try{ru(3,e,e.return),au(3,e)}catch(t){Cs(e,e.return,t)}try{ru(5,e,e.return)}catch(t){Cs(e,e.return,t)}}break;case 1:yu(t,e),vu(e),512&r&&null!==n&&eu(n,n.return);break;case 5:if(yu(t,e),vu(e),512&r&&null!==n&&eu(n,n.return),32&e.flags){var a=e.stateNode;try{de(a,"")}catch(t){Cs(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,u=e.type,s=e.updateQueue;if(e.updateQueue=null,null!==s)try{"input"===u&&"radio"===o.type&&null!=o.name&&X(a,o),be(u,i);var c=be(u,o);for(i=0;i<s.length;i+=2){var f=s[i],d=s[i+1];"style"===f?ye(a,d):"dangerouslySetInnerHTML"===f?fe(a,d):"children"===f?de(a,d):b(a,f,d,c)}switch(u){case"input":Z(a,o);break;case"textarea":le(a,o);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var m=o.value;null!=m?ne(a,!!o.multiple,m,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(a,!!o.multiple,o.defaultValue,!0):ne(a,!!o.multiple,o.multiple?[]:"",!1))}a[pa]=o}catch(t){Cs(e,e.return,t)}}break;case 6:if(yu(t,e),vu(e),4&r){if(null===e.stateNode)throw Error(l(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(t){Cs(e,e.return,t)}}break;case 3:if(yu(t,e),vu(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Ut(t.containerInfo)}catch(t){Cs(e,e.return,t)}break;case 4:default:yu(t,e),vu(e);break;case 13:yu(t,e),vu(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Uu=Xe())),4&r&&hu(e);break;case 22:if(f=null!==n&&null!==n.memoizedState,1&e.mode?(Xi=(c=Xi)||f,yu(t,e),Xi=c):yu(t,e),vu(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!f&&0!=(1&e.mode))for(Ji=e,f=e.child;null!==f;){for(d=Ji=f;null!==Ji;){switch(m=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:ru(4,p,p.return);break;case 1:eu(p,p.return);var h=p.stateNode;if("function"==typeof h.componentWillUnmount){r=p,n=p.return;try{t=r,h.props=t.memoizedProps,h.state=t.memoizedState,h.componentWillUnmount()}catch(e){Cs(r,n,e)}}break;case 5:eu(p,p.return);break;case 22:if(null!==p.memoizedState){Su(d);continue}}null!==m?(m.return=p,Ji=m):Su(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{a=d.stateNode,c?"function"==typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(u=d.stateNode,i=null!=(s=d.memoizedProps.style)&&s.hasOwnProperty("display")?s.display:null,u.style.display=he("display",i))}catch(t){Cs(e,e.return,t)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(t){Cs(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:yu(t,e),vu(e),4&r&&hu(e);case 21:}}function vu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(iu(n)){var r=n;break e}n=n.return}throw Error(l(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(de(a,""),r.flags&=-33),cu(e,uu(e),a);break;case 3:case 4:var o=r.stateNode.containerInfo;su(e,uu(e),o);break;default:throw Error(l(161))}}catch(t){Cs(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bu(e,t,n){Ji=e,wu(e,t,n)}function wu(e,t,n){for(var r=0!=(1&e.mode);null!==Ji;){var a=Ji,l=a.child;if(22===a.tag&&r){var o=null!==a.memoizedState||Yi;if(!o){var i=a.alternate,u=null!==i&&null!==i.memoizedState||Xi;i=Yi;var s=Xi;if(Yi=o,(Xi=u)&&!s)for(Ji=a;null!==Ji;)u=(o=Ji).child,22===o.tag&&null!==o.memoizedState?xu(a):null!==u?(u.return=o,Ji=u):xu(a);for(;null!==l;)Ji=l,wu(l,t,n),l=l.sibling;Ji=a,Yi=i,Xi=s}ku(e)}else 0!=(8772&a.subtreeFlags)&&null!==l?(l.return=a,Ji=l):ku(e)}}function ku(e){for(;null!==Ji;){var t=Ji;if(0!=(8772&t.flags)){var n=t.alternate;try{if(0!=(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Xi||au(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Xi)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:yl(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Al(t,o,r);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Al(t,i,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var s=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":s.autoFocus&&n.focus();break;case"img":s.src&&(n.src=s.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var f=c.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&Ut(d)}}}break;default:throw Error(l(163))}Xi||512&t.flags&&lu(t)}catch(e){Cs(t,t.return,e)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function Su(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function xu(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{au(4,t)}catch(e){Cs(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){Cs(t,a,e)}}var l=t.return;try{lu(t)}catch(e){Cs(t,l,e)}break;case 5:var o=t.return;try{lu(t)}catch(e){Cs(t,o,e)}}}catch(e){Cs(t,t.return,e)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var Eu,Cu=Math.ceil,_u=w.ReactCurrentDispatcher,Pu=w.ReactCurrentOwner,Ou=w.ReactCurrentBatchConfig,Nu=0,Tu=null,zu=null,Ru=0,Mu=0,ju=Ea(0),Lu=0,Fu=null,Iu=0,Au=0,Du=0,Bu=null,Wu=null,Uu=0,Hu=1/0,Vu=null,$u=!1,Qu=null,qu=null,Gu=!1,Ku=null,Yu=0,Xu=0,Zu=null,Ju=-1,es=0;function ts(){return 0!=(6&Nu)?Xe():-1!==Ju?Ju:Ju=Xe()}function ns(e){return 0==(1&e.mode)?1:0!=(2&Nu)&&0!==Ru?Ru&-Ru:null!==hl.transition?(0===es&&(es=ht()),es):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function rs(e,t,n,r){if(50<Xu)throw Xu=0,Zu=null,Error(l(185));gt(e,n,r),0!=(2&Nu)&&e===Tu||(e===Tu&&(0==(2&Nu)&&(Au|=n),4===Lu&&us(e,Ru)),as(e,r),1===n&&0===Nu&&0==(1&t.mode)&&(Hu=Xe()+500,Da&&Ua()))}function as(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var o=31-ot(l),i=1<<o,u=a[o];-1===u?0!=(i&n)&&0==(i&r)||(a[o]=pt(i,t)):u<=t&&(e.expiredLanes|=i),l&=~i}}(e,t);var r=dt(e,e===Tu?Ru:0);if(0===r)null!==n&&Ge(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ge(n),1===t)0===e.tag?function(e){Da=!0,Wa(e)}(ss.bind(null,e)):Wa(ss.bind(null,e)),oa((function(){0==(6&Nu)&&Ua()})),n=null;else{switch(wt(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Ts(n,ls.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ls(e,t){if(Ju=-1,es=0,0!=(6&Nu))throw Error(l(327));var n=e.callbackNode;if(xs()&&e.callbackNode!==n)return null;var r=dt(e,e===Tu?Ru:0);if(0===r)return null;if(0!=(30&r)||0!=(r&e.expiredLanes)||t)t=gs(e,r);else{t=r;var a=Nu;Nu|=2;var o=hs();for(Tu===e&&Ru===t||(Vu=null,Hu=Xe()+500,ps(e,t));;)try{bs();break}catch(t){ms(e,t)}kl(),_u.current=o,Nu=a,null!==zu?t=0:(Tu=null,Ru=0,t=Lu)}if(0!==t){if(2===t&&0!==(a=mt(e))&&(r=a,t=os(e,a)),1===t)throw n=Fu,ps(e,0),us(e,r),as(e,Xe()),n;if(6===t)us(e,r);else{if(a=e.current.alternate,0==(30&r)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],l=a.getSnapshot;a=a.value;try{if(!ir(l(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)&&(2===(t=gs(e,r))&&0!==(o=mt(e))&&(r=o,t=os(e,o)),1===t))throw n=Fu,ps(e,0),us(e,r),as(e,Xe()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(l(345));case 2:case 5:Ss(e,Wu,Vu);break;case 3:if(us(e,r),(130023424&r)===r&&10<(t=Uu+500-Xe())){if(0!==dt(e,0))break;if(((a=e.suspendedLanes)&r)!==r){ts(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(Ss.bind(null,e,Wu,Vu),t);break}Ss(e,Wu,Vu);break;case 4:if(us(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var i=31-ot(r);o=1<<i,(i=t[i])>a&&(a=i),r&=~o}if(r=a,10<(r=(120>(r=Xe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Cu(r/1960))-r)){e.timeoutHandle=ra(Ss.bind(null,e,Wu,Vu),r);break}Ss(e,Wu,Vu);break;default:throw Error(l(329))}}}return as(e,Xe()),e.callbackNode===n?ls.bind(null,e):null}function os(e,t){var n=Bu;return e.current.memoizedState.isDehydrated&&(ps(e,t).flags|=256),2!==(e=gs(e,t))&&(t=Wu,Wu=n,null!==t&&is(t)),e}function is(e){null===Wu?Wu=e:Wu.push.apply(Wu,e)}function us(e,t){for(t&=~Du,t&=~Au,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),r=1<<n;e[n]=-1,t&=~r}}function ss(e){if(0!=(6&Nu))throw Error(l(327));xs();var t=dt(e,0);if(0==(1&t))return as(e,Xe()),null;var n=gs(e,t);if(0!==e.tag&&2===n){var r=mt(e);0!==r&&(t=r,n=os(e,r))}if(1===n)throw n=Fu,ps(e,0),us(e,t),as(e,Xe()),n;if(6===n)throw Error(l(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ss(e,Wu,Vu),as(e,Xe()),null}function cs(e,t){var n=Nu;Nu|=1;try{return e(t)}finally{0===(Nu=n)&&(Hu=Xe()+500,Da&&Ua())}}function fs(e){null!==Ku&&0===Ku.tag&&0==(6&Nu)&&xs();var t=Nu;Nu|=1;var n=Ou.transition,r=bt;try{if(Ou.transition=null,bt=1,e)return e()}finally{bt=r,Ou.transition=n,0==(6&(Nu=t))&&Ua()}}function ds(){Mu=ju.current,Ca(ju)}function ps(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==zu)for(n=zu.return;null!==n;){var r=n;switch(tl(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Ma();break;case 3:ao(),Ca(Na),Ca(Oa),co();break;case 5:oo(r);break;case 4:ao();break;case 13:case 19:Ca(io);break;case 10:Sl(r.type._context);break;case 22:case 23:ds()}n=n.return}if(Tu=e,zu=e=js(e.current,null),Ru=Mu=t,Lu=0,Fu=null,Du=Au=Iu=0,Wu=Bu=null,null!==_l){for(t=0;t<_l.length;t++)if(null!==(r=(n=_l[t]).interleaved)){n.interleaved=null;var a=r.next,l=n.pending;if(null!==l){var o=l.next;l.next=a,r.next=o}n.pending=r}_l=null}return e}function ms(e,t){for(;;){var n=zu;try{if(kl(),fo.current=oi,vo){for(var r=ho.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}vo=!1}if(mo=0,go=yo=ho=null,bo=!1,wo=0,Pu.current=null,null===n||null===n.return){Lu=1,Fu=t,zu=null;break}e:{var o=e,i=n.return,u=n,s=t;if(t=Ru,u.flags|=32768,null!==s&&"object"==typeof s&&"function"==typeof s.then){var c=s,f=u,d=f.tag;if(0==(1&f.mode)&&(0===d||11===d||15===d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var m=gi(i);if(null!==m){m.flags&=-257,vi(m,i,u,0,t),1&m.mode&&yi(o,c,t),s=c;var h=(t=m).updateQueue;if(null===h){var y=new Set;y.add(s),t.updateQueue=y}else h.add(s);break e}if(0==(1&t)){yi(o,c,t),ys();break e}s=Error(l(426))}else if(al&&1&u.mode){var g=gi(i);if(null!==g){0==(65536&g.flags)&&(g.flags|=256),vi(g,i,u,0,t),ml(ci(s,u));break e}}o=s=ci(s,u),4!==Lu&&(Lu=2),null===Bu?Bu=[o]:Bu.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Fl(o,mi(0,s,t));break e;case 1:u=s;var v=o.type,b=o.stateNode;if(0==(128&o.flags)&&("function"==typeof v.getDerivedStateFromError||null!==b&&"function"==typeof b.componentDidCatch&&(null===qu||!qu.has(b)))){o.flags|=65536,t&=-t,o.lanes|=t,Fl(o,hi(o,u,t));break e}}o=o.return}while(null!==o)}ks(n)}catch(e){t=e,zu===n&&null!==n&&(zu=n=n.return);continue}break}}function hs(){var e=_u.current;return _u.current=oi,null===e?oi:e}function ys(){0!==Lu&&3!==Lu&&2!==Lu||(Lu=4),null===Tu||0==(268435455&Iu)&&0==(268435455&Au)||us(Tu,Ru)}function gs(e,t){var n=Nu;Nu|=2;var r=hs();for(Tu===e&&Ru===t||(Vu=null,ps(e,t));;)try{vs();break}catch(t){ms(e,t)}if(kl(),Nu=n,_u.current=r,null!==zu)throw Error(l(261));return Tu=null,Ru=0,Lu}function vs(){for(;null!==zu;)ws(zu)}function bs(){for(;null!==zu&&!Ke();)ws(zu)}function ws(e){var t=Eu(e.alternate,e,Mu);e.memoizedProps=e.pendingProps,null===t?ks(e):zu=t,Pu.current=null}function ks(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(32768&t.flags)){if(null!==(n=Gi(n,t,Mu)))return void(zu=n)}else{if(null!==(n=Ki(n,t)))return n.flags&=32767,void(zu=n);if(null===e)return Lu=6,void(zu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(zu=t);zu=t=e}while(null!==t);0===Lu&&(Lu=5)}function Ss(e,t,n){var r=bt,a=Ou.transition;try{Ou.transition=null,bt=1,function(e,t,n,r){do{xs()}while(null!==Ku);if(0!=(6&Nu))throw Error(l(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-ot(n),l=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~l}}(e,o),e===Tu&&(zu=Tu=null,Ru=0),0==(2064&n.subtreeFlags)&&0==(2064&n.flags)||Gu||(Gu=!0,Ts(tt,(function(){return xs(),null}))),o=0!=(15990&n.flags),0!=(15990&n.subtreeFlags)||o){o=Ou.transition,Ou.transition=null;var i=bt;bt=1;var u=Nu;Nu|=4,Pu.current=null,function(e,t){if(ea=Vt,pr(e=dr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch(e){n=null;break e}var i=0,u=-1,s=-1,c=0,f=0,d=e,p=null;t:for(;;){for(var m;d!==n||0!==a&&3!==d.nodeType||(u=i+a),d!==o||0!==r&&3!==d.nodeType||(s=i+r),3===d.nodeType&&(i+=d.nodeValue.length),null!==(m=d.firstChild);)p=d,d=m;for(;;){if(d===e)break t;if(p===n&&++c===a&&(u=i),p===o&&++f===r&&(s=i),null!==(m=d.nextSibling))break;p=(d=p).parentNode}d=m}n=-1===u||-1===s?null:{start:u,end:s}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Vt=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!=(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var h=t.alternate;if(0!=(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==h){var y=h.memoizedProps,g=h.memoizedState,v=t.stateNode,b=v.getSnapshotBeforeUpdate(t.elementType===t.type?y:yl(t.type,y),g);v.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var w=t.stateNode.containerInfo;1===w.nodeType?w.textContent="":9===w.nodeType&&w.documentElement&&w.removeChild(w.documentElement);break;default:throw Error(l(163))}}catch(e){Cs(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}h=nu,nu=!1}(e,n),gu(n,e),mr(ta),Vt=!!ea,ta=ea=null,e.current=n,bu(n,e,a),Ye(),Nu=u,bt=i,Ou.transition=o}else e.current=n;if(Gu&&(Gu=!1,Ku=e,Yu=a),0===(o=e.pendingLanes)&&(qu=null),function(e){if(lt&&"function"==typeof lt.onCommitFiberRoot)try{lt.onCommitFiberRoot(at,e,void 0,128==(128&e.current.flags))}catch(e){}}(n.stateNode),as(e,Xe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((a=t[n]).value,{componentStack:a.stack,digest:a.digest});if($u)throw $u=!1,e=Qu,Qu=null,e;0!=(1&Yu)&&0!==e.tag&&xs(),0!=(1&(o=e.pendingLanes))?e===Zu?Xu++:(Xu=0,Zu=e):Xu=0,Ua()}(e,t,n,r)}finally{Ou.transition=a,bt=r}return null}function xs(){if(null!==Ku){var e=wt(Yu),t=Ou.transition,n=bt;try{if(Ou.transition=null,bt=16>e?16:e,null===Ku)var r=!1;else{if(e=Ku,Ku=null,Yu=0,0!=(6&Nu))throw Error(l(331));var a=Nu;for(Nu|=4,Ji=e.current;null!==Ji;){var o=Ji,i=o.child;if(0!=(16&Ji.flags)){var u=o.deletions;if(null!==u){for(var s=0;s<u.length;s++){var c=u[s];for(Ji=c;null!==Ji;){var f=Ji;switch(f.tag){case 0:case 11:case 15:ru(8,f,o)}var d=f.child;if(null!==d)d.return=f,Ji=d;else for(;null!==Ji;){var p=(f=Ji).sibling,m=f.return;if(ou(f),f===c){Ji=null;break}if(null!==p){p.return=m,Ji=p;break}Ji=m}}}var h=o.alternate;if(null!==h){var y=h.child;if(null!==y){h.child=null;do{var g=y.sibling;y.sibling=null,y=g}while(null!==y)}}Ji=o}}if(0!=(2064&o.subtreeFlags)&&null!==i)i.return=o,Ji=i;else e:for(;null!==Ji;){if(0!=(2048&(o=Ji).flags))switch(o.tag){case 0:case 11:case 15:ru(9,o,o.return)}var v=o.sibling;if(null!==v){v.return=o.return,Ji=v;break e}Ji=o.return}}var b=e.current;for(Ji=b;null!==Ji;){var w=(i=Ji).child;if(0!=(2064&i.subtreeFlags)&&null!==w)w.return=i,Ji=w;else e:for(i=b;null!==Ji;){if(0!=(2048&(u=Ji).flags))try{switch(u.tag){case 0:case 11:case 15:au(9,u)}}catch(e){Cs(u,u.return,e)}if(u===i){Ji=null;break e}var k=u.sibling;if(null!==k){k.return=u.return,Ji=k;break e}Ji=u.return}}if(Nu=a,Ua(),lt&&"function"==typeof lt.onPostCommitFiberRoot)try{lt.onPostCommitFiberRoot(at,e)}catch(e){}r=!0}return r}finally{bt=n,Ou.transition=t}}return!1}function Es(e,t,n){e=jl(e,t=mi(0,t=ci(n,t),1),1),t=ts(),null!==e&&(gt(e,1,t),as(e,t))}function Cs(e,t,n){if(3===e.tag)Es(e,e,n);else for(;null!==t;){if(3===t.tag){Es(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===qu||!qu.has(r))){t=jl(t,e=hi(t,e=ci(n,e),1),1),e=ts(),null!==t&&(gt(t,1,e),as(t,e));break}}t=t.return}}function _s(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ts(),e.pingedLanes|=e.suspendedLanes&n,Tu===e&&(Ru&n)===n&&(4===Lu||3===Lu&&(130023424&Ru)===Ru&&500>Xe()-Uu?ps(e,0):Du|=n),as(e,t)}function Ps(e,t){0===t&&(0==(1&e.mode)?t=1:(t=ct,0==(130023424&(ct<<=1))&&(ct=4194304)));var n=ts();null!==(e=Nl(e,t))&&(gt(e,t,n),as(e,n))}function Os(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Ps(e,n)}function Ns(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(l(314))}null!==r&&r.delete(t),Ps(e,n)}function Ts(e,t){return qe(e,t)}function zs(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Rs(e,t,n,r){return new zs(e,t,n,r)}function Ms(e){return!(!(e=e.prototype)||!e.isReactComponent)}function js(e,t){var n=e.alternate;return null===n?((n=Rs(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ls(e,t,n,r,a,o){var i=2;if(r=e,"function"==typeof e)Ms(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Fs(n.children,a,o,t);case E:i=8,a|=8;break;case C:return(e=Rs(12,n,t,2|a)).elementType=C,e.lanes=o,e;case N:return(e=Rs(13,n,t,a)).elementType=N,e.lanes=o,e;case T:return(e=Rs(19,n,t,a)).elementType=T,e.lanes=o,e;case M:return Is(n,a,o,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case _:i=10;break e;case P:i=9;break e;case O:i=11;break e;case z:i=14;break e;case R:i=16,r=null;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Rs(i,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Fs(e,t,n,r){return(e=Rs(7,e,r,t)).lanes=n,e}function Is(e,t,n,r){return(e=Rs(22,e,r,t)).elementType=M,e.lanes=n,e.stateNode={isHidden:!1},e}function As(e,t,n){return(e=Rs(6,e,null,t)).lanes=n,e}function Ds(e,t,n){return(t=Rs(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Bs(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=yt(0),this.expirationTimes=yt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=yt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Ws(e,t,n,r,a,l,o,i,u){return e=new Bs(e,t,n,i,u),1===t?(t=1,!0===l&&(t|=8)):t=0,l=Rs(3,null,null,t),e.current=l,l.stateNode=e,l.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},zl(l),e}function Us(e){if(!e)return Pa;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(l(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ra(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(l(171))}if(1===e.tag){var n=e.type;if(Ra(n))return La(e,n,t)}return t}function Hs(e,t,n,r,a,l,o,i,u){return(e=Ws(n,r,!0,e,0,l,0,i,u)).context=Us(null),n=e.current,(l=Ml(r=ts(),a=ns(n))).callback=null!=t?t:null,jl(n,l,a),e.current.lanes=a,gt(e,a,r),as(e,r),e}function Vs(e,t,n,r){var a=t.current,l=ts(),o=ns(a);return n=Us(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ml(l,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=jl(a,t,o))&&(rs(e,a,o,l),Ll(e,a,o)),o}function $s(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Qs(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function qs(e,t){Qs(e,t),(e=e.alternate)&&Qs(e,t)}Eu=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Na.current)wi=!0;else{if(0==(e.lanes&n)&&0==(128&t.flags))return wi=!1,function(e,t,n){switch(t.tag){case 3:Ti(t),pl();break;case 5:lo(t);break;case 1:Ra(t.type)&&Fa(t);break;case 4:ro(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;_a(gl,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(_a(io,1&io.current),t.flags|=128,null):0!=(n&t.child.childLanes)?Ai(e,t,n):(_a(io,1&io.current),null!==(e=$i(e,t,n))?e.sibling:null);_a(io,1&io.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(128&e.flags)){if(r)return Hi(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),_a(io,io.current),r)break;return null;case 22:case 23:return t.lanes=0,Ci(e,t,n)}return $i(e,t,n)}(e,t,n);wi=0!=(131072&e.flags)}else wi=!1,al&&0!=(1048576&t.flags)&&Ja(t,Qa,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Vi(e,t),e=t.pendingProps;var a=za(t,Oa.current);El(t,n),a=Eo(null,t,r,e,a,n);var o=Co();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ra(r)?(o=!0,Fa(t)):o=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,zl(t),a.updater=Wl,t.stateNode=a,a._reactInternals=t,$l(t,r,e,n),t=Ni(null,t,r,!0,o,n)):(t.tag=0,al&&o&&el(t),ki(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Vi(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return Ms(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===z)return 14}return 2}(r),e=yl(r,e),a){case 0:t=Pi(null,t,r,e,n);break e;case 1:t=Oi(null,t,r,e,n);break e;case 11:t=Si(null,t,r,e,n);break e;case 14:t=xi(null,t,r,yl(r.type,e),n);break e}throw Error(l(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,Pi(e,t,r,a=t.elementType===r?a:yl(r,a),n);case 1:return r=t.type,a=t.pendingProps,Oi(e,t,r,a=t.elementType===r?a:yl(r,a),n);case 3:e:{if(Ti(t),null===e)throw Error(l(387));r=t.pendingProps,a=(o=t.memoizedState).element,Rl(e,t),Il(t,r,null,n);var i=t.memoizedState;if(r=i.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=zi(e,t,r,n,a=ci(Error(l(423)),t));break e}if(r!==a){t=zi(e,t,r,n,a=ci(Error(l(424)),t));break e}for(rl=sa(t.stateNode.containerInfo.firstChild),nl=t,al=!0,ll=null,n=Xl(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(pl(),r===a){t=$i(e,t,n);break e}ki(e,t,r,n)}t=t.child}return t;case 5:return lo(t),null===e&&sl(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,na(r,a)?i=null:null!==o&&na(r,o)&&(t.flags|=32),_i(e,t),ki(e,t,i,n),t.child;case 6:return null===e&&sl(t),null;case 13:return Ai(e,t,n);case 4:return ro(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Yl(t,null,r,n):ki(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Si(e,t,r,a=t.elementType===r?a:yl(r,a),n);case 7:return ki(e,t,t.pendingProps,n),t.child;case 8:case 12:return ki(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,o=t.memoizedProps,i=a.value,_a(gl,r._currentValue),r._currentValue=i,null!==o)if(ir(o.value,i)){if(o.children===a.children&&!Na.current){t=$i(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var u=o.dependencies;if(null!==u){i=o.child;for(var s=u.firstContext;null!==s;){if(s.context===r){if(1===o.tag){(s=Ml(-1,n&-n)).tag=2;var c=o.updateQueue;if(null!==c){var f=(c=c.shared).pending;null===f?s.next=s:(s.next=f.next,f.next=s),c.pending=s}}o.lanes|=n,null!==(s=o.alternate)&&(s.lanes|=n),xl(o.return,n,t),u.lanes|=n;break}s=s.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(l(341));i.lanes|=n,null!==(u=i.alternate)&&(u.lanes|=n),xl(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}ki(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,El(t,n),r=r(a=Cl(a)),t.flags|=1,ki(e,t,r,n),t.child;case 14:return a=yl(r=t.type,t.pendingProps),xi(e,t,r,a=yl(r.type,a),n);case 15:return Ei(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:yl(r,a),Vi(e,t),t.tag=1,Ra(r)?(e=!0,Fa(t)):e=!1,El(t,n),Hl(t,r,a),$l(t,r,a,n),Ni(null,t,r,!0,e,n);case 19:return Hi(e,t,n);case 22:return Ci(e,t,n)}throw Error(l(156,t.tag))};var Gs="function"==typeof reportError?reportError:function(e){console.error(e)};function Ks(e){this._internalRoot=e}function Ys(e){this._internalRoot=e}function Xs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Js(){}function ec(e,t,n,r,a){var l=n._reactRootContainer;if(l){var o=l;if("function"==typeof a){var i=a;a=function(){var e=$s(o);i.call(e)}}Vs(t,o,e,a)}else o=function(e,t,n,r,a){if(a){if("function"==typeof r){var l=r;r=function(){var e=$s(o);l.call(e)}}var o=Hs(t,r,e,0,null,!1,0,"",Js);return e._reactRootContainer=o,e[ma]=o.current,Ur(8===e.nodeType?e.parentNode:e),fs(),o}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var i=r;r=function(){var e=$s(u);i.call(e)}}var u=Ws(e,0,!1,null,0,!1,0,"",Js);return e._reactRootContainer=u,e[ma]=u.current,Ur(8===e.nodeType?e.parentNode:e),fs((function(){Vs(t,u,n,r)})),u}(n,t,e,a,r);return $s(o)}Ys.prototype.render=Ks.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(l(409));Vs(e,t,null,null)},Ys.prototype.unmount=Ks.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;fs((function(){Vs(null,e,null,null)})),t[ma]=null}},Ys.prototype.unstable_scheduleHydration=function(e){if(e){var t=Et();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Mt.length&&0!==t&&t<Mt[n].priority;n++);Mt.splice(n,0,e),0===n&&It(e)}},kt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ft(t.pendingLanes);0!==n&&(vt(t,1|n),as(t,Xe()),0==(6&Nu)&&(Hu=Xe()+500,Ua()))}break;case 13:fs((function(){var t=Nl(e,1);if(null!==t){var n=ts();rs(t,e,1,n)}})),qs(e,1)}},St=function(e){if(13===e.tag){var t=Nl(e,134217728);null!==t&&rs(t,e,134217728,ts()),qs(e,134217728)}},xt=function(e){if(13===e.tag){var t=ns(e),n=Nl(e,t);null!==n&&rs(n,e,t,ts()),qs(e,t)}},Et=function(){return bt},Ct=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},Se=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ka(r);if(!a)throw Error(l(90));q(r),Z(r,a)}}}break;case"textarea":le(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Oe=cs,Ne=fs;var tc={usingClientEntryPoint:!1,Events:[ba,wa,ka,_e,Pe,cs]},nc={findFiberByHostInstance:va,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},rc={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:w.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=$e(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ac=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ac.isDisabled&&ac.supportsFiber)try{at=ac.inject(rc),lt=ac}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tc,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xs(t))throw Error(l(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:S,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Xs(e))throw Error(l(299));var n=!1,r="",a=Gs;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Ws(e,1,!1,null,0,n,0,r,a),e[ma]=t.current,Ur(8===e.nodeType?e.parentNode:e),new Ks(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw e=Object.keys(e).join(","),Error(l(268,e))}return null===(e=$e(t))?null:e.stateNode},t.flushSync=function(e){return fs(e)},t.hydrate=function(e,t,n){if(!Zs(t))throw Error(l(200));return ec(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Xs(e))throw Error(l(405));var r=null!=n&&n.hydratedSources||null,a=!1,o="",i=Gs;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Hs(t,null,e,1,null!=n?n:null,a,0,o,i),e[ma]=t.current,Ur(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Ys(t)},t.render=function(e,t,n){if(!Zs(t))throw Error(l(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zs(e))throw Error(l(40));return!!e._reactRootContainer&&(fs((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[ma]=null}))})),!0)},t.unstable_batchedUpdates=cs,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zs(n))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return ec(e,t,n,!1,r)},t.version="18.2.0-next-9e3b772b8-20220608"},745:(e,t,n)=>{"use strict";var r=n(935);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),l=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),u=Symbol.for("react.context"),s=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h=Object.assign,y={};function g(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||m}function v(){}function b(e,t,n){this.props=e,this.context=t,this.refs=y,this.updater=n||m}g.prototype.isReactComponent={},g.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=g.prototype;var w=b.prototype=new v;w.constructor=b,h(w,g.prototype),w.isPureReactComponent=!0;var k=Array.isArray,S=Object.prototype.hasOwnProperty,x={current:null},E={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,r){var a,l={},o=null,i=null;if(null!=t)for(a in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)S.call(t,a)&&!E.hasOwnProperty(a)&&(l[a]=t[a]);var u=arguments.length-2;if(1===u)l.children=r;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];l.children=s}if(e&&e.defaultProps)for(a in u=e.defaultProps)void 0===l[a]&&(l[a]=u[a]);return{$$typeof:n,type:e,key:o,ref:i,props:l,_owner:x.current}}function _(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var P=/\/+/g;function O(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function N(e,t,a,l,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case r:u=!0}}if(u)return o=o(u=e),e=""===l?"."+O(u,0):l,k(o)?(a="",null!=e&&(a=e.replace(P,"$&/")+"/"),N(o,t,a,"",(function(e){return e}))):null!=o&&(_(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,a+(!o.key||u&&u.key===o.key?"":(""+o.key).replace(P,"$&/")+"/")+e)),t.push(o)),1;if(u=0,l=""===l?".":l+":",k(e))for(var s=0;s<e.length;s++){var c=l+O(i=e[s],s);u+=N(i,t,a,c,o)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),s=0;!(i=e.next()).done;)u+=N(i=i.value,t,a,c=l+O(i,s++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function T(e,t,n){if(null==e)return e;var r=[],a=0;return N(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function z(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R={current:null},M={transition:null},j={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:M,ReactCurrentOwner:x};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!_(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=g,t.Fragment=a,t.Profiler=o,t.PureComponent=b,t.StrictMode=l,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=j,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=h({},e.props),l=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=x.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(s in t)S.call(t,s)&&!E.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==u?u[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){u=Array(s);for(var c=0;c<s;c++)u[c]=arguments[c+2];a.children=u}return{$$typeof:n,type:e.type,key:l,ref:o,props:a,_owner:i}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:s,render:e}},t.isValidElement=_,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:z}},t.memo=function(e,t){return{$$typeof:f,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=M.transition;M.transition={};try{e()}finally{M.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return R.current.useCallback(e,t)},t.useContext=function(e){return R.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return R.current.useDeferredValue(e)},t.useEffect=function(e,t){return R.current.useEffect(e,t)},t.useId=function(){return R.current.useId()},t.useImperativeHandle=function(e,t,n){return R.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return R.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return R.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return R.current.useMemo(e,t)},t.useReducer=function(e,t,n){return R.current.useReducer(e,t,n)},t.useRef=function(e){return R.current.useRef(e)},t.useState=function(e){return R.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return R.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return R.current.useTransition()},t.version="18.2.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<l(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var i=2*(r+1)-1,u=e[i],s=i+1,c=e[s];if(0>l(u,n))s<a&&0>l(c,u)?(e[r]=c,e[s]=n,r=s):(e[r]=u,e[i]=n,r=i);else{if(!(s<a&&0>l(c,n)))break e;e[r]=c,e[s]=n,r=s}}}return t}function l(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}var s=[],c=[],f=1,d=null,p=3,m=!1,h=!1,y=!1,g="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function w(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(s,t)}t=r(c)}}function k(e){if(y=!1,w(e),!h)if(null!==r(s))h=!0,M(S);else{var t=r(c);null!==t&&j(k,t.startTime-e)}}function S(e,n){h=!1,y&&(y=!1,v(_),_=-1),m=!0;var l=p;try{for(w(n),d=r(s);null!==d&&(!(d.expirationTime>n)||e&&!N());){var o=d.callback;if("function"==typeof o){d.callback=null,p=d.priorityLevel;var i=o(d.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?d.callback=i:d===r(s)&&a(s),w(n)}else a(s);d=r(s)}if(null!==d)var u=!0;else{var f=r(c);null!==f&&j(k,f.startTime-n),u=!1}return u}finally{d=null,p=l,m=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var x,E=!1,C=null,_=-1,P=5,O=-1;function N(){return!(t.unstable_now()-O<P)}function T(){if(null!==C){var e=t.unstable_now();O=e;var n=!0;try{n=C(!0,e)}finally{n?x():(E=!1,C=null)}}else E=!1}if("function"==typeof b)x=function(){b(T)};else if("undefined"!=typeof MessageChannel){var z=new MessageChannel,R=z.port2;z.port1.onmessage=T,x=function(){R.postMessage(null)}}else x=function(){g(T,0)};function M(e){C=e,E||(E=!0,x())}function j(e,n){_=g((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){h||m||(h=!0,M(S))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):P=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(s)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,l){var o=t.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?o+l:o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:f++,callback:a,priorityLevel:e,startTime:l,expirationTime:i=l+i,sortIndex:-1},l>o?(e.sortIndex=l,n(c,e),null===r(s)&&e===r(c)&&(y?(v(_),_=-1):y=!0,j(k,l-o))):(e.sortIndex=i,n(s,e),h||m||(h=!0,M(S))),e},t.unstable_shouldYield=N,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},887:e=>{"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var l={},o=[],i=0;i<e.length;i++){var u=e[i],s=r.base?u[0]+r.base:u[0],c=l[s]||0,f="".concat(s," ").concat(c);l[s]=c+1;var d=n(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var m=a(p,r);r.byIndex=i,t.splice(i,0,{identifier:f,updater:m,references:1})}o.push(f)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var l=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<l.length;o++){var i=n(l[o]);t[i].references--}for(var u=r(e,a),s=0;s<l.length;s++){var c=n(l[s]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}l=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var l=n.sourceMap;l&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var l=t[r]={id:r,exports:{}};return e[r](l,l.exports,n),l.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!e;)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{"use strict";var e=n(294),t=n(745),r=n(697),a=n.n(r),l=n(887),o=n.n(l),i=n(272),u=n.n(i);function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){c(e,t,n[t])}))}return e}function d(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var p=/([A-Z])/g,m=function(e){return"-".concat(e.toLowerCase())},h={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},y=["Webkit","ms","Moz","O"];Object.keys(h).forEach((function(e){y.forEach((function(t){h[function(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}(t,e)]=h[e]}))}));var g=function(e,t){return"number"==typeof t?h[e]?""+t:t+"px":""+t},v=function(e,t){return w(g(e,t))},b=function(e,t){return o()(e).toString(36)},w=function(e){return"!"===e[e.length-10]&&" !important"===e.slice(-11)?e:"".concat(e," !important")},k="undefined"!=typeof Map,S=function(){function e(){this.elements={},this.keyOrder=[]}var t=e.prototype;return t.forEach=function(e){for(var t=0;t<this.keyOrder.length;t++)e(this.elements[this.keyOrder[t]],this.keyOrder[t])},t.set=function(t,n,r){if(this.elements.hasOwnProperty(t)){if(r){var a=this.keyOrder.indexOf(t);this.keyOrder.splice(a,1),this.keyOrder.push(t)}}else this.keyOrder.push(t);if(null!=n){if(k&&n instanceof Map||n instanceof e){var l=this.elements.hasOwnProperty(t)?this.elements[t]:new e;return n.forEach((function(e,t){l.set(t,e,r)})),void(this.elements[t]=l)}if(Array.isArray(n)||"object"!==s(n))this.elements[t]=n;else{for(var o=this.elements.hasOwnProperty(t)?this.elements[t]:new e,i=Object.keys(n),u=0;u<i.length;u+=1)o.set(i[u],n[i[u]],r);this.elements[t]=o}}else this.elements[t]=n},t.get=function(e){return this.elements[e]},t.has=function(e){return this.elements.hasOwnProperty(e)},t.addStyleType=function(t){var n=this;if(k&&t instanceof Map||t instanceof e)t.forEach((function(e,t){n.set(t,e,!0)}));else for(var r=Object.keys(t),a=0;a<r.length;a++)this.set(r[a],t[r[a]],!0)},e}();function x(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function E(e,t){return e(t={exports:{}},t.exports),t.exports}var C=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}));x(C);var _=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t)){for(var a={},l=e[t],o=(0,r.default)(t),i=Object.keys(n),u=0;u<i.length;u++){var s=i[u];if(s===t)for(var c=0;c<l.length;c++)a[l[c]+o]=n[t];a[s]=n[s]}return a}return n};var n,r=(n=C)&&n.__esModule?n:{default:n}}));x(_);var P=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,a){for(var l=0,o=e.length;l<o;++l){var i=e[l](t,n,r,a);if(i)return i}}}));x(P);var O=E((function(e,t){function n(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var r=0,a=t.length;r<a;++r)n(e,t[r]);else n(e,t)}}));x(O);var N=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)}}));x(N);var T=x(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,o=e.plugins;return function e(i){for(var u in i){var s=i[u];if((0,l.default)(s))i[u]=e(s);else if(Array.isArray(s)){for(var c=[],f=0,d=s.length;f<d;++f){var p=(0,r.default)(o,u,s[f],i,t);(0,a.default)(c,p||s[f])}c.length>0&&(i[u]=c)}else{var m=(0,r.default)(o,u,s,i,t);m&&(i[u]=m),i=(0,n.default)(t,u,i)}}return i}};var n=o(_),r=o(P),a=o(O),l=o(N);function o(e){return e&&e.__esModule?e:{default:e}}}))),z=x(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&"text"===t)return["-webkit-text","text"]}}))),R=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&n.test(e)};var n=/-webkit-|-moz-|-ms-/;e.exports=t.default}));x(R);var M=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("calc(")>-1)return a.map((function(e){return t.replace(/calc\(/g,e+"calc(")}))};var n,r=(n=R)&&n.__esModule?n:{default:n},a=["-webkit-","-moz-",""]})),j=x(M),L=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("cross-fade(")>-1)return a.map((function(e){return t.replace(/cross-fade\(/g,e+"cross-fade(")}))};var n,r=(n=R)&&n.__esModule?n:{default:n},a=["-webkit-",""]})),F=x(L),I=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("cursor"===e&&r.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0}})),A=x(I),D=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("filter(")>-1)return a.map((function(e){return t.replace(/filter\(/g,e+"filter(")}))};var n,r=(n=R)&&n.__esModule?n:{default:n},a=["-webkit-",""]})),B=x(D),W=x(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&n.hasOwnProperty(t))return n[t]};var n={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]}}))),U=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){if(Object.prototype.hasOwnProperty.call(r,e)&&(o[r[e]]=n[t]||t),"flex"===e){if(Object.prototype.hasOwnProperty.call(a,t))return void(o.msFlex=a[t]);if(l.test(t))return void(o.msFlex=t+" 1 0%");var i=t.split(/\s/);switch(i.length){case 1:return void(o.msFlex="1 1 "+t);case 2:return void(l.test(i[1])?o.msFlex=i[0]+" "+i[1]+" 0%":o.msFlex=i[0]+" 1 "+i[1]);default:o.msFlex=t}}};var n={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},r={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"},a={auto:"1 1 auto",inherit:"inherit",initial:"0 1 auto",none:"0 0 auto",unset:"unset"},l=/^\d+(\.\d+)?$/})),H=x(U),V=x(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,a){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?a.WebkitBoxOrient="vertical":a.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?a.WebkitBoxDirection="reverse":a.WebkitBoxDirection="normal"),r.hasOwnProperty(e)&&(a[r[e]]=n[t]||t)};var n={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},r={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines",flexGrow:"WebkitBoxFlex"}}))),$=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&l.test(t))return a.map((function(e){return t.replace(l,(function(t){return e+t}))}))};var n,r=(n=R)&&n.__esModule?n:{default:n},a=["-webkit-","-moz-",""],l=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi})),Q=x($),q=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,a=!1,l=void 0;try{for(var o,i=e[Symbol.iterator]();!(r=(o=i.next()).done)&&(n.push(o.value),!t||n.length!==t);r=!0);}catch(e){a=!0,l=e}finally{try{!r&&i.return&&i.return()}finally{if(a)throw l}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function r(e){return"number"==typeof e&&!isNaN(e)}t.default=function(e,t,n){if("display"===e&&t in l)return l[t];e in o&&(0,o[e])(t,n)};var a=["center","end","start","stretch"],l={"inline-grid":["-ms-inline-grid","inline-grid"],grid:["-ms-grid","grid"]},o={alignSelf:function(e,t){a.indexOf(e)>-1&&(t.msGridRowAlign=e)},gridColumn:function(e,t){if(r(e))t.msGridColumn=e;else{var a=e.split("/").map((function(e){return+e})),l=n(a,2),i=l[0],u=l[1];o.gridColumnStart(i,t),o.gridColumnEnd(u,t)}},gridColumnEnd:function(e,t){var n=t.msGridColumn;r(e)&&r(n)&&(t.msGridColumnSpan=e-n)},gridColumnStart:function(e,t){r(e)&&(t.msGridColumn=e)},gridRow:function(e,t){if(r(e))t.msGridRow=e;else{var a=e.split("/").map((function(e){return+e})),l=n(a,2),i=l[0],u=l[1];o.gridRowStart(i,t),o.gridRowEnd(u,t)}},gridRowEnd:function(e,t){var n=t.msGridRow;r(e)&&r(n)&&(t.msGridRowSpan=e-n)},gridRowStart:function(e,t){r(e)&&(t.msGridRow=e)},gridTemplateColumns:function(e,t){t.msGridColumns=e},gridTemplateRows:function(e,t){t.msGridRows=e},justifySelf:function(e,t){a.indexOf(e)>-1&&(t.msGridColumnAlign=e)}}})),G=x(q),K=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("image-set(")>-1)return a.map((function(e){return t.replace(/image-set\(/g,e+"image-set(")}))};var n,r=(n=R)&&n.__esModule?n:{default:n},a=["-webkit-",""]})),Y=x(K),X=x(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){if(Object.prototype.hasOwnProperty.call(n,e))for(var a=n[e],l=0,o=a.length;l<o;++l)r[a[l]]=t};var n={marginBlockStart:["WebkitMarginBefore"],marginBlockEnd:["WebkitMarginAfter"],marginInlineStart:["WebkitMarginStart","MozMarginStart"],marginInlineEnd:["WebkitMarginEnd","MozMarginEnd"],paddingBlockStart:["WebkitPaddingBefore"],paddingBlockEnd:["WebkitPaddingAfter"],paddingInlineStart:["WebkitPaddingStart","MozPaddingStart"],paddingInlineEnd:["WebkitPaddingEnd","MozPaddingEnd"],borderBlockStart:["WebkitBorderBefore"],borderBlockStartColor:["WebkitBorderBeforeColor"],borderBlockStartStyle:["WebkitBorderBeforeStyle"],borderBlockStartWidth:["WebkitBorderBeforeWidth"],borderBlockEnd:["WebkitBorderAfter"],borderBlockEndColor:["WebkitBorderAfterColor"],borderBlockEndStyle:["WebkitBorderAfterStyle"],borderBlockEndWidth:["WebkitBorderAfterWidth"],borderInlineStart:["WebkitBorderStart","MozBorderStart"],borderInlineStartColor:["WebkitBorderStartColor","MozBorderStartColor"],borderInlineStartStyle:["WebkitBorderStartStyle","MozBorderStartStyle"],borderInlineStartWidth:["WebkitBorderStartWidth","MozBorderStartWidth"],borderInlineEnd:["WebkitBorderEnd","MozBorderEnd"],borderInlineEndColor:["WebkitBorderEndColor","MozBorderEndColor"],borderInlineEndStyle:["WebkitBorderEndStyle","MozBorderEndStyle"],borderInlineEndWidth:["WebkitBorderEndWidth","MozBorderEndWidth"]}}))),Z=x(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("position"===e&&"sticky"===t)return["-webkit-sticky","sticky"]}}))),J=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(r.hasOwnProperty(e)&&a.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},a={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0}})),ee=x(J),te=/[A-Z]/g,ne=/^ms-/,re={};function ae(e){return"-"+e.toLowerCase()}var le,oe=(le=Object.freeze({default:function(e){if(re.hasOwnProperty(e))return re[e];var t=e.replace(te,ae);return re[e]=ne.test(t)?"-"+t:t}}))&&le.default||le,ie=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e)};var n,r=(n=oe)&&n.__esModule?n:{default:n};e.exports=t.default}));x(ie);var ue=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,l,u){if("string"==typeof t&&o.hasOwnProperty(e)){var s=function(e,t){if((0,r.default)(e))return e;for(var a=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),l=0,o=a.length;l<o;++l){var u=a[l],s=[u];for(var c in t){var f=(0,n.default)(c);if(u.indexOf(f)>-1&&"order"!==f)for(var d=t[c],p=0,m=d.length;p<m;++p)s.unshift(u.replace(f,i[d[p]]+f))}a[l]=s.join(",")}return a.join(",")}(t,u),c=s.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-moz-|-ms-/.test(e)})).join(",");if(e.indexOf("Webkit")>-1)return c;var f=s.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-webkit-|-ms-/.test(e)})).join(",");return e.indexOf("Moz")>-1?f:(l["Webkit"+(0,a.default)(e)]=c,l["Moz"+(0,a.default)(e)]=f,s)}};var n=l(ie),r=l(R),a=l(C);function l(e){return e&&e.__esModule?e:{default:e}}var o={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},i={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"}})),se=["Webkit"],ce=["Moz"],fe=["ms"],de=["Webkit","Moz"],pe=["Webkit","ms"],me=["Webkit","Moz","ms"],he=T({plugins:[z,j,F,A,B,W,H,V,Q,G,Y,X,Z,ee,x(ue)],prefixMap:{transform:pe,transformOrigin:pe,transformOriginX:pe,transformOriginY:pe,backfaceVisibility:se,perspective:se,perspectiveOrigin:se,transformStyle:se,transformOriginZ:se,animation:se,animationDelay:se,animationDirection:se,animationFillMode:se,animationDuration:se,animationIterationCount:se,animationName:se,animationPlayState:se,animationTimingFunction:se,appearance:de,userSelect:me,fontKerning:se,textEmphasisPosition:se,textEmphasis:se,textEmphasisStyle:se,textEmphasisColor:se,boxDecorationBreak:se,clipPath:se,maskImage:se,maskMode:se,maskRepeat:se,maskPosition:se,maskClip:se,maskOrigin:se,maskSize:se,maskComposite:se,mask:se,maskBorderSource:se,maskBorderMode:se,maskBorderSlice:se,maskBorderWidth:se,maskBorderOutset:se,maskBorderRepeat:se,maskBorder:se,maskType:se,textDecorationStyle:de,textDecorationSkip:de,textDecorationLine:de,textDecorationColor:de,filter:se,fontFeatureSettings:de,breakAfter:me,breakBefore:me,breakInside:me,columnCount:de,columnFill:de,columnGap:de,columnRule:de,columnRuleColor:de,columnRuleStyle:de,columnRuleWidth:de,columns:de,columnSpan:de,columnWidth:de,writingMode:pe,flex:pe,flexBasis:se,flexDirection:pe,flexGrow:se,flexFlow:pe,flexShrink:se,flexWrap:pe,alignContent:se,alignItems:se,alignSelf:se,justifyContent:se,order:se,transitionDelay:se,transitionDuration:se,transitionProperty:se,transitionTimingFunction:se,backdropFilter:se,scrollSnapType:pe,scrollSnapPointsX:pe,scrollSnapPointsY:pe,scrollSnapDestination:pe,scrollSnapCoordinate:pe,shapeImageThreshold:se,shapeImageMargin:se,shapeImageOutside:se,hyphens:me,flowInto:pe,flowFrom:pe,regionFragment:pe,textOrientation:se,boxSizing:ce,textAlignLast:ce,tabSize:ce,wrapFlow:fe,wrapThrough:fe,wrapMargin:fe,touchAction:fe,textSizeAdjust:pe,borderImage:se,borderImageOutset:se,borderImageRepeat:se,borderImageSlice:se,borderImageSource:se,borderImageWidth:se}}),ye=[function(e,t,n){return":"!==e[0]?null:n(t+e)},function(e,t,n){if("@"!==e[0])return null;var r=n(t);return["".concat(e,"{").concat(r.join(""),"}")]}],ge=function e(t,n,r,a,l){for(var o=new S,i=0;i<n.length;i++)o.addStyleType(n[i]);var u=new S,s=[];o.forEach((function(n,o){r.some((function(i){var u=i(o,t,(function(t){return e(t,[n],r,a,l)}));if(null!=u)return Array.isArray(u)?s.push.apply(s,d(u)):(console.warn("WARNING: Selector handlers should return an array of rules.Returning a string containing multiple rules is deprecated.",i),s.push("@media all {".concat(u,"}"))),!0}))||u.set(o,n,!0)}));var c=we(t,u,a,l,r);return c&&s.unshift(c),s},ve=function(e,t,n){return"".concat((r=e,a=r.replace(p,m),"m"===a[0]&&"s"===a[1]&&"-"===a[2]?"-".concat(a):a),":").concat(n(e,t),";");var r,a},be=function(e,t){return e[t]=!0,e},we=function(e,t,n,r,a){!function(e,t,n){if(t)for(var r=Object.keys(t),a=0;a<r.length;a++){var l=r[a];e.has(l)&&e.set(l,t[l](e.get(l),n),!1)}}(t,n,a);var l=Object.keys(t.elements).reduce(be,Object.create(null)),o=he(t.elements),i=Object.keys(o);if(i.length!==t.keyOrder.length)for(var u=0;u<i.length;u++)if(!l[i[u]]){var s;if((s="W"===i[u][0]?i[u][6].toLowerCase()+i[u].slice(7):"o"===i[u][1]?i[u][3].toLowerCase()+i[u].slice(4):i[u][2].toLowerCase()+i[u].slice(3))&&l[s]){var c=t.keyOrder.indexOf(s);t.keyOrder.splice(c,0,i[u])}else t.keyOrder.unshift(i[u])}for(var f=!1===r?g:v,d=[],p=0;p<t.keyOrder.length;p++){var m=t.keyOrder[p],h=o[m];if(Array.isArray(h))for(var y=0;y<h.length;y++)d.push(ve(m,h[y],f));else d.push(ve(m,h,f))}return d.length?"".concat(e,"{").concat(d.join(""),"}"):""},ke=null,Se={fontFamily:function e(t){if(Array.isArray(t)){var n={};return t.forEach((function(t){n[e(t)]=!0})),Object.keys(n).join(",")}return"object"===s(t)?(Pe(t.src,"@font-face",[t],!1),'"'.concat(t.fontFamily,'"')):t},animationName:function e(t,n){if(Array.isArray(t))return t.map((function(t){return e(t,n)})).join(",");if("object"===s(t)){var r="keyframe_".concat((l=t,b(JSON.stringify(l)))),a="@keyframes ".concat(r,"{");return t instanceof S?t.forEach((function(e,t){a+=ge(t,[e],n,Se,!1).join("")})):Object.keys(t).forEach((function(e){a+=ge(e,[t[e]],n,Se,!1).join("")})),_e(r,[a+="}"]),r}return t;var l}},xe={},Ee=[],Ce=!1,_e=function(e,t){var n;if(!xe[e]){if(!Ce){if("undefined"==typeof document)throw new Error("Cannot automatically buffer without a document");Ce=!0,u()(ze)}(n=Ee).push.apply(n,d(t)),xe[e]=!0}},Pe=function(e,t,n,r){var a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(!xe[e]){var l=ge(t,n,a,Se,r);_e(e,l)}},Oe=function(){Ee=[],xe={},Ce=!1,ke=null},Ne=function(e){delete xe[e]},Te=function(){Ce=!1;var e=Ee;return Ee=[],e},ze=function(){var e=Te();e.length>0&&function(e){if(null==ke&&null==(ke=document.querySelector("style[data-aphrodite]"))){var t=document.head||document.getElementsByTagName("head")[0];(ke=document.createElement("style")).type="text/css",ke.setAttribute("data-aphrodite",""),t.appendChild(ke)}var n=ke.styleSheet||ke.sheet;if(n.insertRule){var r=n.cssRules.length;e.forEach((function(e){try{n.insertRule(e,r),r+=1}catch(e){}}))}else ke.innerText=(ke.innerText||"")+e.join("")}(e)},Re=function e(t,n,r,a){for(var l=0;l<t.length;l+=1)if(t[l])if(Array.isArray(t[l]))a+=e(t[l],n,r,a);else{if(!("_definition"in(o=t[l])&&"_name"in o&&"_len"in o))throw new Error("Invalid Style Definition: Styles should be defined using the StyleSheet.create method.");n.push(t[l]._name),r.push(t[l]._definition),a+=t[l]._len}var o;return a},Me=function(e,t,n){var r,a=[],l=[],o=Re(t,a,l,0);return 0===a.length?"":(r=1===a.length?"_".concat(a[0]):"_".concat(b(a.join())).concat((o%36).toString(36)),Pe(r,".".concat(r),l,e,n),r)},je=function(e,t){return"".concat(t,"_").concat(b(e))},Le=b,Fe={create:function(e){for(var t={},n=Object.keys(e),r=0;r<n.length;r+=1){var a=n[r],l=e[a],o=JSON.stringify(l);t[a]={_len:o.length,_name:Le(o,a),_definition:l}}return t},rehydrate:function(){(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).forEach((function(e){xe[e]=!0}))}},Ie="undefined"!=typeof window?null:{renderStatic:function(e){return Oe(),function(){if(Ce)throw new Error("Cannot buffer while already buffering");Ce=!0}(),{html:e(),css:{content:Te().join(""),renderedClassNames:Object.keys(xe)}}}},Ae=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ye;return{StyleSheet:f({},Fe,{extend:function(r){var a=r.map((function(e){return e.selectorHandler})).filter((function(e){return e}));return e(t,n.concat(a))}}),StyleSheetServer:Ie,StyleSheetTestUtils:null,minify:function(e){Le=e?b:je},css:function(){for(var e=arguments.length,r=new Array(e),a=0;a<e;a++)r[a]=arguments[a];return Me(t,r,n)},flushToStyleTag:ze,injectAndGetClassName:Me,defaultSelectorHandlers:ye,reset:Oe,resetInjectedStyle:Ne}}(!0),De=Ae.StyleSheet,Be=(Ae.StyleSheetServer,Ae.StyleSheetTestUtils,Ae.css);Ae.minify,Ae.flushToStyleTag,Ae.injectAndGetClassName,Ae.defaultSelectorHandlers,Ae.reset,Ae.resetInjectedStyle;const We=n.p+"b4957f44e15d8167f73b489787ae897d.png";function Ue(e){return Ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Ue(e)}function He(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Ve(r.key),r)}}function Ve(e){var t=function(e,t){if("object"!=Ue(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Ue(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Ue(t)?t:String(t)}function $e(e,t,n){return t=qe(t),function(e,t){if(t&&("object"===Ue(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,Qe()?Reflect.construct(t,n||[],qe(e).constructor):t.apply(e,n))}function Qe(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Qe=function(){return!!e})()}function qe(e){return qe=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},qe(e)}function Ge(e,t){return Ge=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ge(e,t)}var Ke=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),$e(this,n,arguments)}var r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ge(e,t)}(n,t),r=n,(a=[{key:"render",value:function(){var t=this.props,n=t.id,r=t.type,a=t.value,l=t.html,o=t.markAsRead,i="urgent"===r?Ye.urgent:Ye.default;return e.createElement("li",{onClick:function(){return o(n)},className:Be(i),"data-notification-type":r,dangerouslySetInnerHTML:l},a)}}])&&He(r.prototype,a),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.PureComponent),Ye=De.create({default:{fontFamily:"'Galano Grotesque Alt', sans-serif",fontWeight:"400",fontSize:"0.8rem",color:"blue"},urgent:{fontFamily:"'Galano Grotesque Alt', sans-serif",fontWeight:"400",fontSize:"0.8rem",color:"red"}});Ke.propTypes={id:a().number.isRequired,type:a().string,value:a().string,html:a().shape({__html:a().string}),markAsRead:a().func.isRequired},Ke.defaultProps={type:"default",value:"",html:null,markAsRead:function(){}};const Xe=Ke,Ze=a().shape({id:a().number.isRequired,type:a().string.isRequired,value:a().string});function Je(e){return Je="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Je(e)}function et(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,ot(r.key),r)}}function tt(e,t,n){return t=rt(t),function(e,t){if(t&&("object"===Je(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return at(e)}(e,nt()?Reflect.construct(t,n||[],rt(e).constructor):t.apply(e,n))}function nt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(nt=function(){return!!e})()}function rt(e){return rt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},rt(e)}function at(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function lt(e,t){return lt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},lt(e,t)}function ot(e){var t=function(e,t){if("object"!=Je(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Je(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Je(t)?t:String(t)}var it=De.create({notifications:{display:"flex",justifyContent:"space-between",alignItems:"flex-start",border:"3px dotted #00003C",marginRight:".5rem"},notificationsParagraph:{fontFamily:"'Galano Grotesque Alt', sans-serif",fontWeight:"400",padding:"1.5rem 0 .3rem .8rem",margin:"0",fontSize:".8rem"},menuItem:{fontFamily:"'Galano Grotesque Alt', sans-serif",fontWeight:"400",fontSize:"0.8rem",marginRight:"1rem"},notificationsUnorderedList:{paddingLeft:"2.3rem"}}),ut=function(t){function n(e){var t,r,a,l;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),r=at(t=tt(this,n,[e])),l=function(){console.log("Close button has been clicked")},(a=ot(a="handleButtonClick"))in r?Object.defineProperty(r,a,{value:l,enumerable:!0,configurable:!0,writable:!0}):r[a]=l,t.markAsRead=t.markAsRead.bind(at(t)),t}var r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&lt(e,t)}(n,t),r=n,(a=[{key:"markAsRead",value:function(e){console.log("Notification ".concat(e," has been marked as read"))}},{key:"shouldComponentUpdate",value:function(e){return e.listNotifications.length>this.props.listNotifications.length}},{key:"render",value:function(){var t=this,n=this.props,r=n.displayDrawer,a=n.listNotifications;return e.createElement(e.Fragment,null,e.createElement("div",{className:Be(it.menuItem),"data-testid":"menuItem"},e.createElement("p",null,"Your Notifications")),r&&e.createElement("div",{className:Be(it.notifications),"data-testid":"notifications"},e.createElement("div",{className:"Notifications-content"},a.length>0&&e.createElement("p",{className:Be(it.notificationsParagraph)},"Here is the list of notifications"),e.createElement("ul",{className:Be(it.notificationsUnorderedList)},0===a.length?e.createElement(Xe,{value:"No new notification for now"}):a.map((function(n){return e.createElement(Xe,{key:n.id,type:n.type,value:n.value,html:n.html,markAsRead:function(){return t.markAsRead(n.id)}})})))),e.createElement("button",{"aria-label":"Close",style:{position:"absolute",background:"transparent",padding:"0",cursor:"pointer"},onClick:handleButtonClick},e.createElement("img",{src:We,alt:"Close",style:{width:"15px",height:"15px"}}))))}}])&&et(r.prototype,a),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component);ut.propTypes={displayDrawer:a().bool,listNotifications:a().arrayOf(Ze)},ut.defaultProps={displayDrawer:!1,listNotifications:[]};const st=ut,ct=n.p+"a58e539672755ba15fdf6c93552ad079.png";var ft=De.create({logo:{height:"12rem",pointerEvents:"none"},headerMain:{backgroundColor:"white",display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"flex-start"},headerTitle:{fontFamily:"'Galano Grotesque Alt', sans-serif",fontSize:"3.5rem",color:"#00003C",fontWeight:"800"}});const dt=function(){return e.createElement("header",{className:Be(ft.headerMain)},e.createElement("img",{src:ct,className:Be(ft.logo),alt:"logo"}),e.createElement("h1",{className:Be(ft.headerTitle)},"School dashboard"))};var pt=n(379),mt=n.n(pt),ht=n(795),yt=n.n(ht),gt=n(569),vt=n.n(gt),bt=n(565),wt=n.n(bt),kt=n(216),St=n.n(kt),xt=n(589),Et=n.n(xt),Ct=n(342),_t={};_t.styleTagTransform=Et(),_t.setAttributes=wt(),_t.insert=vt().bind(null,"head"),_t.domAPI=yt(),_t.insertStyleElement=St(),mt()(Ct.Z,_t),Ct.Z&&Ct.Z.locals&&Ct.Z.locals;const Pt=function(){return e.createElement("footer",{className:"Footer-main"},e.createElement("p",null,"Copyright ",(new Date).getFullYear()," - ","Holberton School"))};var Ot=De.create({loginBody:{display:"flex",flexDirection:"column",alignItems:"flex-start",justifyContent:"flex-start"},loginParagraph:{fontFamily:"'Galano Grotesque Alt', sans-serif",fontWeight:"400",fontSize:"1.3rem",margin:"4rem 2rem 1rem 4rem"},form:{display:"flex",fontFamily:"'Galano Grotesque Alt', sans-serif",fontWeight:"400",fontSize:"1.3rem",margin:"1rem 2rem 1rem 4rem"},label:{paddingRight:".5rem"},input:{marginRight:"1rem",border:"1px solid #00003C",borderRadius:"8px",boxShadow:"rgba(213, 217, 217, .5) 0 2px 5px 0"},button:{backgroundColor:"#1ED2AF",border:"1px solid #00003C",borderRadius:"8px",padding:".4rem",boxShadow:"rgba(213, 217, 217, .5) 0 2px 5px 0",cursor:"pointer",textAlign:"center",textDecoration:"none",":focus":{borderColor:"#1ED2AF",outline:"2px solid #1ED2AF"}}});const Nt=function(){return e.createElement("div",{className:css(Ot.loginBody)},e.createElement("p",{className:css(Ot.loginParagraph)},"Login to access the full dashboard"),e.createElement("form",{className:css(Ot.form)},e.createElement("label",{className:css(Ot.label),htmlFor:"email"},"Email:"),e.createElement("input",{className:css(Ot.input),type:"text",id:"email",name:"email"}),e.createElement("label",{className:css(Ot.label),htmlFor:"password"},"Password:"),e.createElement("input",{className:css(Ot.input),type:"password",id:"password",name:"password"}),e.createElement("button",{className:css(Ot.button),type:"submit"},"OK")))},Tt=a().shape({id:a().number.isRequired,name:a().string.isRequired,credit:a().number.isRequired});var zt=De.create({headerRowSpan2:{textAlign:"center"},secondHeaderRow:{borderTop:"2px solid #e0e0e0",borderBottom:"2px solid #e0e0e0"},secondHeaderRowFirstCell:{textAlign:"left",width:"70%"},secondHeaderRowSecondCell:{textAlign:"left",width:"30%"},bodyRowCell:{textAlign:"left"},row:{backgroundColor:"#f5f5f5ab"},header:{backgroundColor:"#deb5b545"}});function Rt(t){var n=t.isHeader,r=t.textFirstCell,a=t.textSecondCell,l=n?headerRowStyle:rowStyle;return n?null===a?e.createElement("tr",{className:Be(l,zt.headerRowSpan2)},e.createElement("th",{colSpan:"2"},r)):e.createElement("tr",{className:Be(l,zt.secondHeaderRow)},e.createElement("th",{className:Be(zt.secondHeaderRowFirstCell)},r),e.createElement("th",{className:Be(zt.secondHeaderRowSecondCell)},a)):e.createElement("tr",{className:Be(l)},e.createElement("td",{className:Be(zt.bodyRowCell)},r),e.createElement("td",{className:Be(zt.bodyRowCell)},a))}Rt.propTypes={isHeader:a().bool,textFirstCell:a().string.isRequired,textSecondCell:a().oneOfType([a().string,a().number])},Rt.defaultProps={isHeader:!1,textSecondCell:null};const Mt=Rt;var jt=De.create({courseTable:{width:"90%",borderCollapse:"collapse",border:"1px solid #e0e0e0",margin:"1rem auto",fontFamily:"'Galano Grotesque Alt', sans-serif",fontWeight:"400"}});function Lt(t){var n=t.listCourses;return e.createElement("table",{className:Be(jt.courseTable)},e.createElement("thead",null,e.createElement(Mt,{textFirstCell:"Available courses",isHeader:!0}),e.createElement(Mt,{textFirstCell:"Course name",textSecondCell:"Credit",isHeader:!0})),e.createElement("tbody",null,0===n.length?e.createElement(Mt,{textFirstCell:"No course available yet",isHeader:!1}):n.map((function(t){return e.createElement(Mt,{key:t.id,textFirstCell:t.name,textSecondCell:t.credit,isHeader:!1})}))))}Lt.propTypes={listCourses:a().arrayOf(Tt)},Lt.defaultProps={listCourses:[]};const Ft=Lt;function It(e){return It="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},It(e)}function At(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Dt(r.key),r)}}function Dt(e){var t=function(e,t){if("object"!=It(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=It(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==It(t)?t:String(t)}function Bt(e,t,n){return t=Ut(t),function(e,t){if(t&&("object"===It(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,Wt()?Reflect.construct(t,n||[],Ut(e).constructor):t.apply(e,n))}function Wt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Wt=function(){return!!e})()}function Ut(e){return Ut=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Ut(e)}function Ht(e,t){return Ht=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Ht(e,t)}var Vt=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),Bt(this,n,arguments)}var r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Ht(e,t)}(n,t),r=n,(a=[{key:"render",value:function(){var t=this.props,n=t.title,r=t.children;return e.createElement("div",{className:"bodySection"},e.createElement("h2",null,n),r)}}])&&At(r.prototype,a),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component);Vt.propTypes={title:a().string.isRequired,children:a().node};const $t=Vt;function Qt(e){return Qt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Qt(e)}function qt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Gt(r.key),r)}}function Gt(e){var t=function(e,t){if("object"!=Qt(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=Qt(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Qt(t)?t:String(t)}function Kt(e,t,n){return t=Xt(t),function(e,t){if(t&&("object"===Qt(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,Yt()?Reflect.construct(t,n||[],Xt(e).constructor):t.apply(e,n))}function Yt(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(Yt=function(){return!!e})()}function Xt(e){return Xt=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},Xt(e)}function Zt(e,t){return Zt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},Zt(e,t)}var Jt=De.create({bodyMargin:{margin:"40px"}}),en=function(t){function n(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),Kt(this,n,arguments)}var r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&Zt(e,t)}(n,t),r=n,(a=[{key:"render",value:function(){return e.createElement("div",{className:Be(Jt.bodyMargin)},e.createElement($t,this.props))}}])&&qt(r.prototype,a),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component);en.propTypes={title:a().string.isRequired,children:a().node};const tn=en;function nn(e){return nn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},nn(e)}function rn(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,an(r.key),r)}}function an(e){var t=function(e,t){if("object"!=nn(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=nn(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==nn(t)?t:String(t)}function ln(e,t,n){return t=un(t),function(e,t){if(t&&("object"===nn(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,on()?Reflect.construct(t,n||[],un(e).constructor):t.apply(e,n))}function on(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(on=function(){return!!e})()}function un(e){return un=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},un(e)}function sn(e,t){return sn=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},sn(e,t)}var cn=De.create({body:{textAlign:"center"},headerWrapper:{display:"flex",justifyContent:"space-between",alignItems:"flex-start",borderBottom:"5px solid #00003C"},headerNotifications:{display:"flex",flexDirection:"column",alignItems:"flex-end"},footer:{fontFamily:"'Galano Grotesque Alt', sans-serif",fontStyle:"italic",fontSize:"1.1rem",borderTop:"5px solid #00003C",width:"100%",display:"flex",justifyContent:"center",alignItems:"center",position:"absolute",bottom:"0"}}),fn=function(t){function n(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),(t=ln(this,n,[e])).state={listCourses:[{id:1,name:"ES6",credit:60},{id:2,name:"Webpack",credit:20},{id:3,name:"React",credit:40}],listNotifications:[{id:1,type:"default",value:"New course available"},{id:2,type:"urgent",value:"New resume available"},{id:3,type:"urgent",html:{__html:"<strong>Urgent requirement</strong> - complete by EOD"}}]},t}var r,a;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&sn(e,t)}(n,t),r=n,(a=[{key:"componentDidMount",value:function(){var e=this;this.handleKeyDown=function(t){t.ctrlKey&&"h"===t.key&&(t.preventDefault(),alert("Logging you out"),e.props.logOut())},window.addEventListener("keydown",this.handleKeyDown)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.handleKeyDown)}},{key:"render",value:function(){var t=this.props.isLoggedIn,n=this.state,r=n.listCourses,a=n.listNotifications;return e.createElement(e.Fragment,null,e.createElement("div",{className:Be(cn.headerWrapper)},e.createElement(dt,null),e.createElement("div",{className:Be(cn.headerNotifications)},e.createElement(st,{listNotifications:a}))),e.createElement("div",{className:Be(cn.body)},t?e.createElement(tn,{title:"Course List"},e.createElement(Ft,{listCourses:r})):e.createElement(tn,{title:"Log in to continue"},e.createElement(Nt,null)),e.createElement($t,{title:"News from the School"},e.createElement("p",null,"Nikki got her DREAM JOB!!"))),e.createElement("div",null,e.createElement(Pt,{footerClassName:Be(cn.footer)})))}}])&&rn(r.prototype,a),Object.defineProperty(r,"prototype",{writable:!1}),n}(e.Component);fn.propTypes={isLoggedIn:a().bool,logOut:a().func},fn.defaultProps={isLoggedIn:!1,logOut:function(){}};const dn=fn;t.createRoot(document.getElementById("root")).render(e.createElement(e.StrictMode,null,e.createElement(dn,null)))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R0FBMkIsQ0FBQ0YsTUFBTSxlQUNqQ3BFLEVBQUFBLGNBQUMrRCxHQUFVLENBQUNDLFlBQWFBLEtBRzNCaEUsRUFBQUEsY0FBQ3NFLEdBQTJCLENBQUNGLE1BQU0sc0JBQ2pDcEUsRUFBQUEsY0FBQ21GLEdBQUssT0FHVm5GLEVBQUFBLGNBQUNtRSxHQUFXLENBQUNDLE1BQU0sd0JBQ2pCcEUsRUFBQUEsY0FBQSxTQUFHLCtCQUdQQSxFQUFBQSxjQUFBLFdBQ0VBLEVBQUFBLGNBQUNvRixHQUFNLENBQUNDLGdCQUFpQnpiLEdBQUlrVyxHQUFPMkUsV0FJNUMsMkVBQUNHLENBQUEsQ0FoRU0sQ0FBU2w1QixFQUFBQSxXQW1FbEJrNUIsR0FBSTFFLFVBQVksQ0FDZDhFLFdBQVlwckQsSUFBQUEsS0FDWm1yRCxPQUFRbnJELElBQUFBLE1BR1ZnckQsR0FBSW44QixhQUFlLENBQ2pCdThCLFlBQVksRUFDWkQsT0FBUSxXQUFPLEdBR2pCLFlDdEhhTyxFQUFBQSxXQUFvQmh3RCxTQUFTaXdELGVBQWUsU0FDcEQ3bEQsT0FDSHNnRCxFQUFBQSxjQUFDQSxFQUFBQSxXQUFnQixLQUNmQSxFQUFBQSxjQUFDNEUsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2tfMC8uL25vZGVfbW9kdWxlcy9hc2FwL2Jyb3dzZXItYXNhcC5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9ub2RlX21vZHVsZXMvYXNhcC9icm93c2VyLXJhdy5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9zcmMvRm9vdGVyL0Zvb3Rlci5jc3MiLCJ3ZWJwYWNrOi8vdGFza18wLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIiwid2VicGFjazovL3Rhc2tfMC8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2NsaWVudC5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2luZGV4LmpzIiwid2VicGFjazovL3Rhc2tfMC8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovL3Rhc2tfMC8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwid2VicGFjazovL3Rhc2tfMC8uL25vZGVfbW9kdWxlcy9zdHJpbmctaGFzaC9pbmRleC5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3Rhc2tfMC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3Rhc2tfMC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3Rhc2tfMC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90YXNrXzAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdGFza18wL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90YXNrXzAvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90YXNrXzAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90YXNrXzAvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdGFza18wL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90YXNrXzAvLi9ub2RlX21vZHVsZXMvYXBocm9kaXRlL2VzL2NodW5rLWZlYmNlNDZiLmpzIiwid2VicGFjazovL3Rhc2tfMC8uL25vZGVfbW9kdWxlcy9hcGhyb2RpdGUvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vc3JjL2Fzc2V0cy9jbG9zZS1pY29uLnBuZyIsIndlYnBhY2s6Ly90YXNrXzAvLi9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25JdGVtLmpzIiwid2VicGFjazovL3Rhc2tfMC8uL3NyYy9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbkl0ZW1TaGFwZS5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25zLmpzIiwid2VicGFjazovL3Rhc2tfMC8uL3NyYy9hc3NldHMvYXRsYXNfbG9nby5wbmciLCJ3ZWJwYWNrOi8vdGFza18wLy4vc3JjL0hlYWRlci9IZWFkZXIuanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vc3JjL0Zvb3Rlci9Gb290ZXIuY3NzPzFiYTYiLCJ3ZWJwYWNrOi8vdGFza18wLy4vc3JjL0Zvb3Rlci9Gb290ZXIuanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vc3JjL3V0aWxzL3V0aWxzLmpzIiwid2VicGFjazovL3Rhc2tfMC8uL3NyYy9Mb2dpbi9Mb2dpbi5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VTaGFwZS5qcyIsIndlYnBhY2s6Ly90YXNrXzAvLi9zcmMvQ291cnNlTGlzdC9Db3Vyc2VMaXN0Um93LmpzIiwid2VicGFjazovL3Rhc2tfMC8uL3NyYy9Db3Vyc2VMaXN0L0NvdXJzZUxpc3QuanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vc3JjL0JvZHlTZWN0aW9uL0JvZHlTZWN0aW9uLmpzIiwid2VicGFjazovL3Rhc2tfMC8uL3NyYy9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20uanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vc3JjL0FwcC9BcHAuanMiLCJ3ZWJwYWNrOi8vdGFza18wLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vLyByYXdBc2FwIHByb3ZpZGVzIGV2ZXJ5dGhpbmcgd2UgbmVlZCBleGNlcHQgZXhjZXB0aW9uIG1hbmFnZW1lbnQuXG52YXIgcmF3QXNhcCA9IHJlcXVpcmUoXCIuL3Jhd1wiKTtcbi8vIFJhd1Rhc2tzIGFyZSByZWN5Y2xlZCB0byByZWR1Y2UgR0MgY2h1cm4uXG52YXIgZnJlZVRhc2tzID0gW107XG4vLyBXZSBxdWV1ZSBlcnJvcnMgdG8gZW5zdXJlIHRoZXkgYXJlIHRocm93biBpbiByaWdodCBvcmRlciAoRklGTykuXG4vLyBBcnJheS1hcy1xdWV1ZSBpcyBnb29kIGVub3VnaCBoZXJlLCBzaW5jZSB3ZSBhcmUganVzdCBkZWFsaW5nIHdpdGggZXhjZXB0aW9ucy5cbnZhciBwZW5kaW5nRXJyb3JzID0gW107XG52YXIgcmVxdWVzdEVycm9yVGhyb3cgPSByYXdBc2FwLm1ha2VSZXF1ZXN0Q2FsbEZyb21UaW1lcih0aHJvd0ZpcnN0RXJyb3IpO1xuXG5mdW5jdGlvbiB0aHJvd0ZpcnN0RXJyb3IoKSB7XG4gICAgaWYgKHBlbmRpbmdFcnJvcnMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IHBlbmRpbmdFcnJvcnMuc2hpZnQoKTtcbiAgICB9XG59XG5cbi8qKlxuICogQ2FsbHMgYSB0YXNrIGFzIHNvb24gYXMgcG9zc2libGUgYWZ0ZXIgcmV0dXJuaW5nLCBpbiBpdHMgb3duIGV2ZW50LCB3aXRoIHByaW9yaXR5XG4gKiBvdmVyIG90aGVyIGV2ZW50cyBsaWtlIGFuaW1hdGlvbiwgcmVmbG93LCBhbmQgcmVwYWludC4gQW4gZXJyb3IgdGhyb3duIGZyb20gYW5cbiAqIGV2ZW50IHdpbGwgbm90IGludGVycnVwdCwgbm9yIGV2ZW4gc3Vic3RhbnRpYWxseSBzbG93IGRvd24gdGhlIHByb2Nlc3Npbmcgb2ZcbiAqIG90aGVyIGV2ZW50cywgYnV0IHdpbGwgYmUgcmF0aGVyIHBvc3Rwb25lZCB0byBhIGxvd2VyIHByaW9yaXR5IGV2ZW50LlxuICogQHBhcmFtIHt7Y2FsbH19IHRhc2sgQSBjYWxsYWJsZSBvYmplY3QsIHR5cGljYWxseSBhIGZ1bmN0aW9uIHRoYXQgdGFrZXMgbm9cbiAqIGFyZ3VtZW50cy5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBhc2FwO1xuZnVuY3Rpb24gYXNhcCh0YXNrKSB7XG4gICAgdmFyIHJhd1Rhc2s7XG4gICAgaWYgKGZyZWVUYXNrcy5sZW5ndGgpIHtcbiAgICAgICAgcmF3VGFzayA9IGZyZWVUYXNrcy5wb3AoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByYXdUYXNrID0gbmV3IFJhd1Rhc2soKTtcbiAgICB9XG4gICAgcmF3VGFzay50YXNrID0gdGFzaztcbiAgICByYXdBc2FwKHJhd1Rhc2spO1xufVxuXG4vLyBXZSB3cmFwIHRhc2tzIHdpdGggcmVjeWNsYWJsZSB0YXNrIG9iamVjdHMuICBBIHRhc2sgb2JqZWN0IGltcGxlbWVudHNcbi8vIGBjYWxsYCwganVzdCBsaWtlIGEgZnVuY3Rpb24uXG5mdW5jdGlvbiBSYXdUYXNrKCkge1xuICAgIHRoaXMudGFzayA9IG51bGw7XG59XG5cbi8vIFRoZSBzb2xlIHB1cnBvc2Ugb2Ygd3JhcHBpbmcgdGhlIHRhc2sgaXMgdG8gY2F0Y2ggdGhlIGV4Y2VwdGlvbiBhbmQgcmVjeWNsZVxuLy8gdGhlIHRhc2sgb2JqZWN0IGFmdGVyIGl0cyBzaW5nbGUgdXNlLlxuUmF3VGFzay5wcm90b3R5cGUuY2FsbCA9IGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgICB0aGlzLnRhc2suY2FsbCgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGlmIChhc2FwLm9uZXJyb3IpIHtcbiAgICAgICAgICAgIC8vIFRoaXMgaG9vayBleGlzdHMgcHVyZWx5IGZvciB0ZXN0aW5nIHB1cnBvc2VzLlxuICAgICAgICAgICAgLy8gSXRzIG5hbWUgd2lsbCBiZSBwZXJpb2RpY2FsbHkgcmFuZG9taXplZCB0byBicmVhayBhbnkgY29kZSB0aGF0XG4gICAgICAgICAgICAvLyBkZXBlbmRzIG9uIGl0cyBleGlzdGVuY2UuXG4gICAgICAgICAgICBhc2FwLm9uZXJyb3IoZXJyb3IpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgLy8gSW4gYSB3ZWIgYnJvd3NlciwgZXhjZXB0aW9ucyBhcmUgbm90IGZhdGFsLiBIb3dldmVyLCB0byBhdm9pZFxuICAgICAgICAgICAgLy8gc2xvd2luZyBkb3duIHRoZSBxdWV1ZSBvZiBwZW5kaW5nIHRhc2tzLCB3ZSByZXRocm93IHRoZSBlcnJvciBpbiBhXG4gICAgICAgICAgICAvLyBsb3dlciBwcmlvcml0eSB0dXJuLlxuICAgICAgICAgICAgcGVuZGluZ0Vycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgICAgICAgIHJlcXVlc3RFcnJvclRocm93KCk7XG4gICAgICAgIH1cbiAgICB9IGZpbmFsbHkge1xuICAgICAgICB0aGlzLnRhc2sgPSBudWxsO1xuICAgICAgICBmcmVlVGFza3NbZnJlZVRhc2tzLmxlbmd0aF0gPSB0aGlzO1xuICAgIH1cbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLy8gVXNlIHRoZSBmYXN0ZXN0IG1lYW5zIHBvc3NpYmxlIHRvIGV4ZWN1dGUgYSB0YXNrIGluIGl0cyBvd24gdHVybiwgd2l0aFxuLy8gcHJpb3JpdHkgb3ZlciBvdGhlciBldmVudHMgaW5jbHVkaW5nIElPLCBhbmltYXRpb24sIHJlZmxvdywgYW5kIHJlZHJhd1xuLy8gZXZlbnRzIGluIGJyb3dzZXJzLlxuLy9cbi8vIEFuIGV4Y2VwdGlvbiB0aHJvd24gYnkgYSB0YXNrIHdpbGwgcGVybWFuZW50bHkgaW50ZXJydXB0IHRoZSBwcm9jZXNzaW5nIG9mXG4vLyBzdWJzZXF1ZW50IHRhc2tzLiBUaGUgaGlnaGVyIGxldmVsIGBhc2FwYCBmdW5jdGlvbiBlbnN1cmVzIHRoYXQgaWYgYW5cbi8vIGV4Y2VwdGlvbiBpcyB0aHJvd24gYnkgYSB0YXNrLCB0aGF0IHRoZSB0YXNrIHF1ZXVlIHdpbGwgY29udGludWUgZmx1c2hpbmcgYXNcbi8vIHNvb24gYXMgcG9zc2libGUsIGJ1dCBpZiB5b3UgdXNlIGByYXdBc2FwYCBkaXJlY3RseSwgeW91IGFyZSByZXNwb25zaWJsZSB0b1xuLy8gZWl0aGVyIGVuc3VyZSB0aGF0IG5vIGV4Y2VwdGlvbnMgYXJlIHRocm93biBmcm9tIHlvdXIgdGFzaywgb3IgdG8gbWFudWFsbHlcbi8vIGNhbGwgYHJhd0FzYXAucmVxdWVzdEZsdXNoYCBpZiBhbiBleGNlcHRpb24gaXMgdGhyb3duLlxubW9kdWxlLmV4cG9ydHMgPSByYXdBc2FwO1xuZnVuY3Rpb24gcmF3QXNhcCh0YXNrKSB7XG4gICAgaWYgKCFxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcmVxdWVzdEZsdXNoKCk7XG4gICAgICAgIGZsdXNoaW5nID0gdHJ1ZTtcbiAgICB9XG4gICAgLy8gRXF1aXZhbGVudCB0byBwdXNoLCBidXQgYXZvaWRzIGEgZnVuY3Rpb24gY2FsbC5cbiAgICBxdWV1ZVtxdWV1ZS5sZW5ndGhdID0gdGFzaztcbn1cblxudmFyIHF1ZXVlID0gW107XG4vLyBPbmNlIGEgZmx1c2ggaGFzIGJlZW4gcmVxdWVzdGVkLCBubyBmdXJ0aGVyIGNhbGxzIHRvIGByZXF1ZXN0Rmx1c2hgIGFyZVxuLy8gbmVjZXNzYXJ5IHVudGlsIHRoZSBuZXh0IGBmbHVzaGAgY29tcGxldGVzLlxudmFyIGZsdXNoaW5nID0gZmFsc2U7XG4vLyBgcmVxdWVzdEZsdXNoYCBpcyBhbiBpbXBsZW1lbnRhdGlvbi1zcGVjaWZpYyBtZXRob2QgdGhhdCBhdHRlbXB0cyB0byBraWNrXG4vLyBvZmYgYSBgZmx1c2hgIGV2ZW50IGFzIHF1aWNrbHkgYXMgcG9zc2libGUuIGBmbHVzaGAgd2lsbCBhdHRlbXB0IHRvIGV4aGF1c3Rcbi8vIHRoZSBldmVudCBxdWV1ZSBiZWZvcmUgeWllbGRpbmcgdG8gdGhlIGJyb3dzZXIncyBvd24gZXZlbnQgbG9vcC5cbnZhciByZXF1ZXN0Rmx1c2g7XG4vLyBUaGUgcG9zaXRpb24gb2YgdGhlIG5leHQgdGFzayB0byBleGVjdXRlIGluIHRoZSB0YXNrIHF1ZXVlLiBUaGlzIGlzXG4vLyBwcmVzZXJ2ZWQgYmV0d2VlbiBjYWxscyB0byBgZmx1c2hgIHNvIHRoYXQgaXQgY2FuIGJlIHJlc3VtZWQgaWZcbi8vIGEgdGFzayB0aHJvd3MgYW4gZXhjZXB0aW9uLlxudmFyIGluZGV4ID0gMDtcbi8vIElmIGEgdGFzayBzY2hlZHVsZXMgYWRkaXRpb25hbCB0YXNrcyByZWN1cnNpdmVseSwgdGhlIHRhc2sgcXVldWUgY2FuIGdyb3dcbi8vIHVuYm91bmRlZC4gVG8gcHJldmVudCBtZW1vcnkgZXhoYXVzdGlvbiwgdGhlIHRhc2sgcXVldWUgd2lsbCBwZXJpb2RpY2FsbHlcbi8vIHRydW5jYXRlIGFscmVhZHktY29tcGxldGVkIHRhc2tzLlxudmFyIGNhcGFjaXR5ID0gMTAyNDtcblxuLy8gVGhlIGZsdXNoIGZ1bmN0aW9uIHByb2Nlc3NlcyBhbGwgdGFza3MgdGhhdCBoYXZlIGJlZW4gc2NoZWR1bGVkIHdpdGhcbi8vIGByYXdBc2FwYCB1bmxlc3MgYW5kIHVudGlsIG9uZSBvZiB0aG9zZSB0YXNrcyB0aHJvd3MgYW4gZXhjZXB0aW9uLlxuLy8gSWYgYSB0YXNrIHRocm93cyBhbiBleGNlcHRpb24sIGBmbHVzaGAgZW5zdXJlcyB0aGF0IGl0cyBzdGF0ZSB3aWxsIHJlbWFpblxuLy8gY29uc2lzdGVudCBhbmQgd2lsbCByZXN1bWUgd2hlcmUgaXQgbGVmdCBvZmYgd2hlbiBjYWxsZWQgYWdhaW4uXG4vLyBIb3dldmVyLCBgZmx1c2hgIGRvZXMgbm90IG1ha2UgYW55IGFycmFuZ2VtZW50cyB0byBiZSBjYWxsZWQgYWdhaW4gaWYgYW5cbi8vIGV4Y2VwdGlvbiBpcyB0aHJvd24uXG5mdW5jdGlvbiBmbHVzaCgpIHtcbiAgICB3aGlsZSAoaW5kZXggPCBxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgdmFyIGN1cnJlbnRJbmRleCA9IGluZGV4O1xuICAgICAgICAvLyBBZHZhbmNlIHRoZSBpbmRleCBiZWZvcmUgY2FsbGluZyB0aGUgdGFzay4gVGhpcyBlbnN1cmVzIHRoYXQgd2Ugd2lsbFxuICAgICAgICAvLyBiZWdpbiBmbHVzaGluZyBvbiB0aGUgbmV4dCB0YXNrIHRoZSB0YXNrIHRocm93cyBhbiBlcnJvci5cbiAgICAgICAgaW5kZXggPSBpbmRleCArIDE7XG4gICAgICAgIHF1ZXVlW2N1cnJlbnRJbmRleF0uY2FsbCgpO1xuICAgICAgICAvLyBQcmV2ZW50IGxlYWtpbmcgbWVtb3J5IGZvciBsb25nIGNoYWlucyBvZiByZWN1cnNpdmUgY2FsbHMgdG8gYGFzYXBgLlxuICAgICAgICAvLyBJZiB3ZSBjYWxsIGBhc2FwYCB3aXRoaW4gdGFza3Mgc2NoZWR1bGVkIGJ5IGBhc2FwYCwgdGhlIHF1ZXVlIHdpbGxcbiAgICAgICAgLy8gZ3JvdywgYnV0IHRvIGF2b2lkIGFuIE8obikgd2FsayBmb3IgZXZlcnkgdGFzayB3ZSBleGVjdXRlLCB3ZSBkb24ndFxuICAgICAgICAvLyBzaGlmdCB0YXNrcyBvZmYgdGhlIHF1ZXVlIGFmdGVyIHRoZXkgaGF2ZSBiZWVuIGV4ZWN1dGVkLlxuICAgICAgICAvLyBJbnN0ZWFkLCB3ZSBwZXJpb2RpY2FsbHkgc2hpZnQgMTAyNCB0YXNrcyBvZmYgdGhlIHF1ZXVlLlxuICAgICAgICBpZiAoaW5kZXggPiBjYXBhY2l0eSkge1xuICAgICAgICAgICAgLy8gTWFudWFsbHkgc2hpZnQgYWxsIHZhbHVlcyBzdGFydGluZyBhdCB0aGUgaW5kZXggYmFjayB0byB0aGVcbiAgICAgICAgICAgIC8vIGJlZ2lubmluZyBvZiB0aGUgcXVldWUuXG4gICAgICAgICAgICBmb3IgKHZhciBzY2FuID0gMCwgbmV3TGVuZ3RoID0gcXVldWUubGVuZ3RoIC0gaW5kZXg7IHNjYW4gPCBuZXdMZW5ndGg7IHNjYW4rKykge1xuICAgICAgICAgICAgICAgIHF1ZXVlW3NjYW5dID0gcXVldWVbc2NhbiArIGluZGV4XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHF1ZXVlLmxlbmd0aCAtPSBpbmRleDtcbiAgICAgICAgICAgIGluZGV4ID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5sZW5ndGggPSAwO1xuICAgIGluZGV4ID0gMDtcbiAgICBmbHVzaGluZyA9IGZhbHNlO1xufVxuXG4vLyBgcmVxdWVzdEZsdXNoYCBpcyBpbXBsZW1lbnRlZCB1c2luZyBhIHN0cmF0ZWd5IGJhc2VkIG9uIGRhdGEgY29sbGVjdGVkIGZyb21cbi8vIGV2ZXJ5IGF2YWlsYWJsZSBTYXVjZUxhYnMgU2VsZW5pdW0gd2ViIGRyaXZlciB3b3JrZXIgYXQgdGltZSBvZiB3cml0aW5nLlxuLy8gaHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMW1HLTVVWUd1cDVxeEdkRU1Xa2hQNkJXQ3owNTNOVWIyRTFRb1VUVTE2dUEvZWRpdCNnaWQ9NzgzNzI0NTkzXG5cbi8vIFNhZmFyaSA2IGFuZCA2LjEgZm9yIGRlc2t0b3AsIGlQYWQsIGFuZCBpUGhvbmUgYXJlIHRoZSBvbmx5IGJyb3dzZXJzIHRoYXRcbi8vIGhhdmUgV2ViS2l0TXV0YXRpb25PYnNlcnZlciBidXQgbm90IHVuLXByZWZpeGVkIE11dGF0aW9uT2JzZXJ2ZXIuXG4vLyBNdXN0IHVzZSBgZ2xvYmFsYCBvciBgc2VsZmAgaW5zdGVhZCBvZiBgd2luZG93YCB0byB3b3JrIGluIGJvdGggZnJhbWVzIGFuZCB3ZWJcbi8vIHdvcmtlcnMuIGBnbG9iYWxgIGlzIGEgcHJvdmlzaW9uIG9mIEJyb3dzZXJpZnksIE1yLCBNcnMsIG9yIE1vcC5cblxuLyogZ2xvYmFscyBzZWxmICovXG52YXIgc2NvcGUgPSB0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiID8gZ2xvYmFsIDogc2VsZjtcbnZhciBCcm93c2VyTXV0YXRpb25PYnNlcnZlciA9IHNjb3BlLk11dGF0aW9uT2JzZXJ2ZXIgfHwgc2NvcGUuV2ViS2l0TXV0YXRpb25PYnNlcnZlcjtcblxuLy8gTXV0YXRpb25PYnNlcnZlcnMgYXJlIGRlc2lyYWJsZSBiZWNhdXNlIHRoZXkgaGF2ZSBoaWdoIHByaW9yaXR5IGFuZCB3b3JrXG4vLyByZWxpYWJseSBldmVyeXdoZXJlIHRoZXkgYXJlIGltcGxlbWVudGVkLlxuLy8gVGhleSBhcmUgaW1wbGVtZW50ZWQgaW4gYWxsIG1vZGVybiBicm93c2Vycy5cbi8vXG4vLyAtIEFuZHJvaWQgNC00LjNcbi8vIC0gQ2hyb21lIDI2LTM0XG4vLyAtIEZpcmVmb3ggMTQtMjlcbi8vIC0gSW50ZXJuZXQgRXhwbG9yZXIgMTFcbi8vIC0gaVBhZCBTYWZhcmkgNi03LjFcbi8vIC0gaVBob25lIFNhZmFyaSA3LTcuMVxuLy8gLSBTYWZhcmkgNi03XG5pZiAodHlwZW9mIEJyb3dzZXJNdXRhdGlvbk9ic2VydmVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICByZXF1ZXN0Rmx1c2ggPSBtYWtlUmVxdWVzdENhbGxGcm9tTXV0YXRpb25PYnNlcnZlcihmbHVzaCk7XG5cbi8vIE1lc3NhZ2VDaGFubmVscyBhcmUgZGVzaXJhYmxlIGJlY2F1c2UgdGhleSBnaXZlIGRpcmVjdCBhY2Nlc3MgdG8gdGhlIEhUTUxcbi8vIHRhc2sgcXVldWUsIGFyZSBpbXBsZW1lbnRlZCBpbiBJbnRlcm5ldCBFeHBsb3JlciAxMCwgU2FmYXJpIDUuMC0xLCBhbmQgT3BlcmFcbi8vIDExLTEyLCBhbmQgaW4gd2ViIHdvcmtlcnMgaW4gbWFueSBlbmdpbmVzLlxuLy8gQWx0aG91Z2ggbWVzc2FnZSBjaGFubmVscyB5aWVsZCB0byBhbnkgcXVldWVkIHJlbmRlcmluZyBhbmQgSU8gdGFza3MsIHRoZXlcbi8vIHdvdWxkIGJlIGJldHRlciB0aGFuIGltcG9zaW5nIHRoZSA0bXMgZGVsYXkgb2YgdGltZXJzLlxuLy8gSG93ZXZlciwgdGhleSBkbyBub3Qgd29yayByZWxpYWJseSBpbiBJbnRlcm5ldCBFeHBsb3JlciBvciBTYWZhcmkuXG5cbi8vIEludGVybmV0IEV4cGxvcmVyIDEwIGlzIHRoZSBvbmx5IGJyb3dzZXIgdGhhdCBoYXMgc2V0SW1tZWRpYXRlIGJ1dCBkb2VzXG4vLyBub3QgaGF2ZSBNdXRhdGlvbk9ic2VydmVycy5cbi8vIEFsdGhvdWdoIHNldEltbWVkaWF0ZSB5aWVsZHMgdG8gdGhlIGJyb3dzZXIncyByZW5kZXJlciwgaXQgd291bGQgYmVcbi8vIHByZWZlcnJhYmxlIHRvIGZhbGxpbmcgYmFjayB0byBzZXRUaW1lb3V0IHNpbmNlIGl0IGRvZXMgbm90IGhhdmVcbi8vIHRoZSBtaW5pbXVtIDRtcyBwZW5hbHR5LlxuLy8gVW5mb3J0dW5hdGVseSB0aGVyZSBhcHBlYXJzIHRvIGJlIGEgYnVnIGluIEludGVybmV0IEV4cGxvcmVyIDEwIE1vYmlsZSAoYW5kXG4vLyBEZXNrdG9wIHRvIGEgbGVzc2VyIGV4dGVudCkgdGhhdCByZW5kZXJzIGJvdGggc2V0SW1tZWRpYXRlIGFuZFxuLy8gTWVzc2FnZUNoYW5uZWwgdXNlbGVzcyBmb3IgdGhlIHB1cnBvc2VzIG9mIEFTQVAuXG4vLyBodHRwczovL2dpdGh1Yi5jb20va3Jpc2tvd2FsL3EvaXNzdWVzLzM5NlxuXG4vLyBUaW1lcnMgYXJlIGltcGxlbWVudGVkIHVuaXZlcnNhbGx5LlxuLy8gV2UgZmFsbCBiYWNrIHRvIHRpbWVycyBpbiB3b3JrZXJzIGluIG1vc3QgZW5naW5lcywgYW5kIGluIGZvcmVncm91bmRcbi8vIGNvbnRleHRzIGluIHRoZSBmb2xsb3dpbmcgYnJvd3NlcnMuXG4vLyBIb3dldmVyLCBub3RlIHRoYXQgZXZlbiB0aGlzIHNpbXBsZSBjYXNlIHJlcXVpcmVzIG51YW5jZXMgdG8gb3BlcmF0ZSBpbiBhXG4vLyBicm9hZCBzcGVjdHJ1bSBvZiBicm93c2Vycy5cbi8vXG4vLyAtIEZpcmVmb3ggMy0xM1xuLy8gLSBJbnRlcm5ldCBFeHBsb3JlciA2LTlcbi8vIC0gaVBhZCBTYWZhcmkgNC4zXG4vLyAtIEx5bnggMi44Ljdcbn0gZWxzZSB7XG4gICAgcmVxdWVzdEZsdXNoID0gbWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKGZsdXNoKTtcbn1cblxuLy8gYHJlcXVlc3RGbHVzaGAgcmVxdWVzdHMgdGhhdCB0aGUgaGlnaCBwcmlvcml0eSBldmVudCBxdWV1ZSBiZSBmbHVzaGVkIGFzXG4vLyBzb29uIGFzIHBvc3NpYmxlLlxuLy8gVGhpcyBpcyB1c2VmdWwgdG8gcHJldmVudCBhbiBlcnJvciB0aHJvd24gaW4gYSB0YXNrIGZyb20gc3RhbGxpbmcgdGhlIGV2ZW50XG4vLyBxdWV1ZSBpZiB0aGUgZXhjZXB0aW9uIGhhbmRsZWQgYnkgTm9kZS5qc+KAmXNcbi8vIGBwcm9jZXNzLm9uKFwidW5jYXVnaHRFeGNlcHRpb25cIilgIG9yIGJ5IGEgZG9tYWluLlxucmF3QXNhcC5yZXF1ZXN0Rmx1c2ggPSByZXF1ZXN0Rmx1c2g7XG5cbi8vIFRvIHJlcXVlc3QgYSBoaWdoIHByaW9yaXR5IGV2ZW50LCB3ZSBpbmR1Y2UgYSBtdXRhdGlvbiBvYnNlcnZlciBieSB0b2dnbGluZ1xuLy8gdGhlIHRleHQgb2YgYSB0ZXh0IG5vZGUgYmV0d2VlbiBcIjFcIiBhbmQgXCItMVwiLlxuZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbU11dGF0aW9uT2JzZXJ2ZXIoY2FsbGJhY2spIHtcbiAgICB2YXIgdG9nZ2xlID0gMTtcbiAgICB2YXIgb2JzZXJ2ZXIgPSBuZXcgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIoY2FsbGJhY2spO1xuICAgIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJcIik7XG4gICAgb2JzZXJ2ZXIub2JzZXJ2ZShub2RlLCB7Y2hhcmFjdGVyRGF0YTogdHJ1ZX0pO1xuICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbiAgICAgICAgdG9nZ2xlID0gLXRvZ2dsZTtcbiAgICAgICAgbm9kZS5kYXRhID0gdG9nZ2xlO1xuICAgIH07XG59XG5cbi8vIFRoZSBtZXNzYWdlIGNoYW5uZWwgdGVjaG5pcXVlIHdhcyBkaXNjb3ZlcmVkIGJ5IE1hbHRlIFVibCBhbmQgd2FzIHRoZVxuLy8gb3JpZ2luYWwgZm91bmRhdGlvbiBmb3IgdGhpcyBsaWJyYXJ5LlxuLy8gaHR0cDovL3d3dy5ub25ibG9ja2luZy5pby8yMDExLzA2L3dpbmRvd25leHR0aWNrLmh0bWxcblxuLy8gU2FmYXJpIDYuMC41IChhdCBsZWFzdCkgaW50ZXJtaXR0ZW50bHkgZmFpbHMgdG8gY3JlYXRlIG1lc3NhZ2UgcG9ydHMgb24gYVxuLy8gcGFnZSdzIGZpcnN0IGxvYWQuIFRoYW5rZnVsbHksIHRoaXMgdmVyc2lvbiBvZiBTYWZhcmkgc3VwcG9ydHNcbi8vIE11dGF0aW9uT2JzZXJ2ZXJzLCBzbyB3ZSBkb24ndCBuZWVkIHRvIGZhbGwgYmFjayBpbiB0aGF0IGNhc2UuXG5cbi8vIGZ1bmN0aW9uIG1ha2VSZXF1ZXN0Q2FsbEZyb21NZXNzYWdlQ2hhbm5lbChjYWxsYmFjaykge1xuLy8gICAgIHZhciBjaGFubmVsID0gbmV3IE1lc3NhZ2VDaGFubmVsKCk7XG4vLyAgICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBjYWxsYmFjaztcbi8vICAgICByZXR1cm4gZnVuY3Rpb24gcmVxdWVzdENhbGwoKSB7XG4vLyAgICAgICAgIGNoYW5uZWwucG9ydDIucG9zdE1lc3NhZ2UoMCk7XG4vLyAgICAgfTtcbi8vIH1cblxuLy8gRm9yIHJlYXNvbnMgZXhwbGFpbmVkIGFib3ZlLCB3ZSBhcmUgYWxzbyB1bmFibGUgdG8gdXNlIGBzZXRJbW1lZGlhdGVgXG4vLyB1bmRlciBhbnkgY2lyY3Vtc3RhbmNlcy5cbi8vIEV2ZW4gaWYgd2Ugd2VyZSwgdGhlcmUgaXMgYW5vdGhlciBidWcgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAuXG4vLyBJdCBpcyBub3Qgc3VmZmljaWVudCB0byBhc3NpZ24gYHNldEltbWVkaWF0ZWAgdG8gYHJlcXVlc3RGbHVzaGAgYmVjYXVzZVxuLy8gYHNldEltbWVkaWF0ZWAgbXVzdCBiZSBjYWxsZWQgKmJ5IG5hbWUqIGFuZCB0aGVyZWZvcmUgbXVzdCBiZSB3cmFwcGVkIGluIGFcbi8vIGNsb3N1cmUuXG4vLyBOZXZlciBmb3JnZXQuXG5cbi8vIGZ1bmN0aW9uIG1ha2VSZXF1ZXN0Q2FsbEZyb21TZXRJbW1lZGlhdGUoY2FsbGJhY2spIHtcbi8vICAgICByZXR1cm4gZnVuY3Rpb24gcmVxdWVzdENhbGwoKSB7XG4vLyAgICAgICAgIHNldEltbWVkaWF0ZShjYWxsYmFjayk7XG4vLyAgICAgfTtcbi8vIH1cblxuLy8gU2FmYXJpIDYuMCBoYXMgYSBwcm9ibGVtIHdoZXJlIHRpbWVycyB3aWxsIGdldCBsb3N0IHdoaWxlIHRoZSB1c2VyIGlzXG4vLyBzY3JvbGxpbmcuIFRoaXMgcHJvYmxlbSBkb2VzIG5vdCBpbXBhY3QgQVNBUCBiZWNhdXNlIFNhZmFyaSA2LjAgc3VwcG9ydHNcbi8vIG11dGF0aW9uIG9ic2VydmVycywgc28gdGhhdCBpbXBsZW1lbnRhdGlvbiBpcyB1c2VkIGluc3RlYWQuXG4vLyBIb3dldmVyLCBpZiB3ZSBldmVyIGVsZWN0IHRvIHVzZSB0aW1lcnMgaW4gU2FmYXJpLCB0aGUgcHJldmFsZW50IHdvcmstYXJvdW5kXG4vLyBpcyB0byBhZGQgYSBzY3JvbGwgZXZlbnQgbGlzdGVuZXIgdGhhdCBjYWxscyBmb3IgYSBmbHVzaC5cblxuLy8gYHNldFRpbWVvdXRgIGRvZXMgbm90IGNhbGwgdGhlIHBhc3NlZCBjYWxsYmFjayBpZiB0aGUgZGVsYXkgaXMgbGVzcyB0aGFuXG4vLyBhcHByb3hpbWF0ZWx5IDcgaW4gd2ViIHdvcmtlcnMgaW4gRmlyZWZveCA4IHRocm91Z2ggMTgsIGFuZCBzb21ldGltZXMgbm90XG4vLyBldmVuIHRoZW4uXG5cbmZ1bmN0aW9uIG1ha2VSZXF1ZXN0Q2FsbEZyb21UaW1lcihjYWxsYmFjaykge1xuICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbiAgICAgICAgLy8gV2UgZGlzcGF0Y2ggYSB0aW1lb3V0IHdpdGggYSBzcGVjaWZpZWQgZGVsYXkgb2YgMCBmb3IgZW5naW5lcyB0aGF0XG4gICAgICAgIC8vIGNhbiByZWxpYWJseSBhY2NvbW1vZGF0ZSB0aGF0IHJlcXVlc3QuIFRoaXMgd2lsbCB1c3VhbGx5IGJlIHNuYXBwZWRcbiAgICAgICAgLy8gdG8gYSA0IG1pbGlzZWNvbmQgZGVsYXksIGJ1dCBvbmNlIHdlJ3JlIGZsdXNoaW5nLCB0aGVyZSdzIG5vIGRlbGF5XG4gICAgICAgIC8vIGJldHdlZW4gZXZlbnRzLlxuICAgICAgICB2YXIgdGltZW91dEhhbmRsZSA9IHNldFRpbWVvdXQoaGFuZGxlVGltZXIsIDApO1xuICAgICAgICAvLyBIb3dldmVyLCBzaW5jZSB0aGlzIHRpbWVyIGdldHMgZnJlcXVlbnRseSBkcm9wcGVkIGluIEZpcmVmb3hcbiAgICAgICAgLy8gd29ya2Vycywgd2UgZW5saXN0IGFuIGludGVydmFsIGhhbmRsZSB0aGF0IHdpbGwgdHJ5IHRvIGZpcmVcbiAgICAgICAgLy8gYW4gZXZlbnQgMjAgdGltZXMgcGVyIHNlY29uZCB1bnRpbCBpdCBzdWNjZWVkcy5cbiAgICAgICAgdmFyIGludGVydmFsSGFuZGxlID0gc2V0SW50ZXJ2YWwoaGFuZGxlVGltZXIsIDUwKTtcblxuICAgICAgICBmdW5jdGlvbiBoYW5kbGVUaW1lcigpIHtcbiAgICAgICAgICAgIC8vIFdoaWNoZXZlciB0aW1lciBzdWNjZWVkcyB3aWxsIGNhbmNlbCBib3RoIHRpbWVycyBhbmRcbiAgICAgICAgICAgIC8vIGV4ZWN1dGUgdGhlIGNhbGxiYWNrLlxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRIYW5kbGUpO1xuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbEhhbmRsZSk7XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9XG4gICAgfTtcbn1cblxuLy8gVGhpcyBpcyBmb3IgYGFzYXAuanNgIG9ubHkuXG4vLyBJdHMgbmFtZSB3aWxsIGJlIHBlcmlvZGljYWxseSByYW5kb21pemVkIHRvIGJyZWFrIGFueSBjb2RlIHRoYXQgZGVwZW5kcyBvblxuLy8gaXRzIGV4aXN0ZW5jZS5cbnJhd0FzYXAubWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyID0gbWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyO1xuXG4vLyBBU0FQIHdhcyBvcmlnaW5hbGx5IGEgbmV4dFRpY2sgc2hpbSBpbmNsdWRlZCBpbiBRLiBUaGlzIHdhcyBmYWN0b3JlZCBvdXRcbi8vIGludG8gdGhpcyBBU0FQIHBhY2thZ2UuIEl0IHdhcyBsYXRlciBhZGFwdGVkIHRvIFJTVlAgd2hpY2ggbWFkZSBmdXJ0aGVyXG4vLyBhbWVuZG1lbnRzLiBUaGVzZSBkZWNpc2lvbnMsIHBhcnRpY3VsYXJseSB0byBtYXJnaW5hbGl6ZSBNZXNzYWdlQ2hhbm5lbCBhbmRcbi8vIHRvIGNhcHR1cmUgdGhlIE11dGF0aW9uT2JzZXJ2ZXIgaW1wbGVtZW50YXRpb24gaW4gYSBjbG9zdXJlLCB3ZXJlIGludGVncmF0ZWRcbi8vIGJhY2sgaW50byBBU0FQIHByb3Blci5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90aWxkZWlvL3JzdnAuanMvYmxvYi9jZGRmNzIzMjU0NmE5Y2Y4NTg1MjRiNzVjZGU2ZjllZGY3MjYyMGE3L2xpYi9yc3ZwL2FzYXAuanNcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAvKiAjcmVnaW9uIEZPT1RFUiAqL1xuXG4uQXBwLWZvb3RlciBwIHtcbiAgZm9udC1mYW1pbHk6ICdHYWxhbm8gR3JvdGVzcXVlIEFsdCcsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMS4xcmVtO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi8qICNlbmRyZWdpb24gKi9cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL0Zvb3Rlci9Gb290ZXIuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLG1CQUFtQjs7QUFFbkI7RUFDRSwrQ0FBK0M7RUFDL0MsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7O0FBRUEsZUFBZVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiAjcmVnaW9uIEZPT1RFUiAqL1xcblxcbi5BcHAtZm9vdGVyIHAge1xcbiAgZm9udC1mYW1pbHk6ICdHYWxhbm8gR3JvdGVzcXVlIEFsdCcsIHNhbnMtc2VyaWY7XFxuICBmb250LXdlaWdodDogNDAwO1xcbiAgZm9udC1zaXplOiAxLjFyZW07XFxuICBmb250LXN0eWxlOiBpdGFsaWM7XFxufVxcblxcbi8qICNlbmRyZWdpb24gKi9cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBiaWdpbnQ6IHNoaW0sXG4gICAgYm9vbDogc2hpbSxcbiAgICBmdW5jOiBzaGltLFxuICAgIG51bWJlcjogc2hpbSxcbiAgICBvYmplY3Q6IHNoaW0sXG4gICAgc3RyaW5nOiBzaGltLFxuICAgIHN5bWJvbDogc2hpbSxcblxuICAgIGFueTogc2hpbSxcbiAgICBhcnJheU9mOiBnZXRTaGltLFxuICAgIGVsZW1lbnQ6IHNoaW0sXG4gICAgZWxlbWVudFR5cGU6IHNoaW0sXG4gICAgaW5zdGFuY2VPZjogZ2V0U2hpbSxcbiAgICBub2RlOiBzaGltLFxuICAgIG9iamVjdE9mOiBnZXRTaGltLFxuICAgIG9uZU9mOiBnZXRTaGltLFxuICAgIG9uZU9mVHlwZTogZ2V0U2hpbSxcbiAgICBzaGFwZTogZ2V0U2hpbSxcbiAgICBleGFjdDogZ2V0U2hpbSxcblxuICAgIGNoZWNrUHJvcFR5cGVzOiBlbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LFxuICAgIHJlc2V0V2FybmluZ0NhY2hlOiBlbXB0eUZ1bmN0aW9uXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuUHJvcFR5cGVzID0gUmVhY3RQcm9wVHlwZXM7XG5cbiAgcmV0dXJuIFJlYWN0UHJvcFR5cGVzO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSAnU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRUQnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0UHJvcFR5cGVzU2VjcmV0O1xuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksY2E9cmVxdWlyZShcInNjaGVkdWxlclwiKTtmdW5jdGlvbiBwKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifXZhciBkYT1uZXcgU2V0LGVhPXt9O2Z1bmN0aW9uIGZhKGEsYil7aGEoYSxiKTtoYShhK1wiQ2FwdHVyZVwiLGIpfVxuZnVuY3Rpb24gaGEoYSxiKXtlYVthXT1iO2ZvcihhPTA7YTxiLmxlbmd0aDthKyspZGEuYWRkKGJbYV0pfVxudmFyIGlhPSEoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KSxqYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGthPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxsYT1cbnt9LG1hPXt9O2Z1bmN0aW9uIG9hKGEpe2lmKGphLmNhbGwobWEsYSkpcmV0dXJuITA7aWYoamEuY2FsbChsYSxhKSlyZXR1cm4hMTtpZihrYS50ZXN0KGEpKXJldHVybiBtYVthXT0hMDtsYVthXT0hMDtyZXR1cm4hMX1mdW5jdGlvbiBwYShhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1cbmZ1bmN0aW9uIHFhKGEsYixjLGQpe2lmKG51bGw9PT1ifHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIGJ8fHBhKGEsYixjLGQpKXJldHVybiEwO2lmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpc3dpdGNoKGMudHlwZSl7Y2FzZSAzOnJldHVybiFiO2Nhc2UgNDpyZXR1cm4hMT09PWI7Y2FzZSA1OnJldHVybiBpc05hTihiKTtjYXNlIDY6cmV0dXJuIGlzTmFOKGIpfHwxPmJ9cmV0dXJuITF9ZnVuY3Rpb24gdihhLGIsYyxkLGUsZixnKXt0aGlzLmFjY2VwdHNCb29sZWFucz0yPT09Ynx8Mz09PWJ8fDQ9PT1iO3RoaXMuYXR0cmlidXRlTmFtZT1kO3RoaXMuYXR0cmlidXRlTmFtZXNwYWNlPWU7dGhpcy5tdXN0VXNlUHJvcGVydHk9Yzt0aGlzLnByb3BlcnR5TmFtZT1hO3RoaXMudHlwZT1iO3RoaXMuc2FuaXRpemVVUkw9Zjt0aGlzLnJlbW92ZUVtcHR5U3RyaW5nPWd9dmFyIHo9e307XG5cImNoaWxkcmVuIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIGRlZmF1bHRWYWx1ZSBkZWZhdWx0Q2hlY2tlZCBpbm5lckhUTUwgc3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nIHN1cHByZXNzSHlkcmF0aW9uV2FybmluZyBzdHlsZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwwLCExLGEsbnVsbCwhMSwhMSl9KTtbW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07eltiXT1uZXcgdihiLDEsITEsYVsxXSxudWxsLCExLCExKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiYXV0b1JldmVyc2VcIixcImV4dGVybmFsUmVzb3VyY2VzUmVxdWlyZWRcIixcImZvY3VzYWJsZVwiLFwicHJlc2VydmVBbHBoYVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwyLCExLGEsbnVsbCwhMSwhMSl9KTtcImFsbG93RnVsbFNjcmVlbiBhc3luYyBhdXRvRm9jdXMgYXV0b1BsYXkgY29udHJvbHMgZGVmYXVsdCBkZWZlciBkaXNhYmxlZCBkaXNhYmxlUGljdHVyZUluUGljdHVyZSBkaXNhYmxlUmVtb3RlUGxheWJhY2sgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsMywhMCxhLG51bGwsITEsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt6W2FdPW5ldyB2KGEsNCwhMSxhLG51bGwsITEsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw2LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO3ZhciByYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIHNhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKHJhLFxuc2EpO3pbYl09bmV3IHYoYiwxLCExLGEsbnVsbCwhMSwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxzYSk7eltiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShyYSxzYSk7eltiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuei54bGlua0hyZWY9bmV3IHYoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwLCExKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3pbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwLCEwKX0pO1xuZnVuY3Rpb24gdGEoYSxiLGMsZCl7dmFyIGU9ei5oYXNPd25Qcm9wZXJ0eShiKT96W2JdOm51bGw7aWYobnVsbCE9PWU/MCE9PWUudHlwZTpkfHwhKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0pcWEoYixjLGUsZCkmJihjPW51bGwpLGR8fG51bGw9PT1lP29hKGIpJiYobnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6YS5zZXRBdHRyaWJ1dGUoYixcIlwiK2MpKTplLm11c3RVc2VQcm9wZXJ0eT9hW2UucHJvcGVydHlOYW1lXT1udWxsPT09Yz8zPT09ZS50eXBlPyExOlwiXCI6YzooYj1lLmF0dHJpYnV0ZU5hbWUsZD1lLmF0dHJpYnV0ZU5hbWVzcGFjZSxudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTooZT1lLnR5cGUsYz0zPT09ZXx8ND09PWUmJiEwPT09Yz9cIlwiOlwiXCIrYyxkP2Euc2V0QXR0cmlidXRlTlMoZCxiLGMpOmEuc2V0QXR0cmlidXRlKGIsYykpKX1cbnZhciB1YT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCx2YT1TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKSx3YT1TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpLHlhPVN5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKSx6YT1TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIiksQWE9U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpLEJhPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKSxDYT1TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKSxEYT1TeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIiksRWE9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLEZhPVN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpLEdhPVN5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpLEhhPVN5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtcbnZhciBJYT1TeW1ib2wuZm9yKFwicmVhY3Qub2Zmc2NyZWVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpO1N5bWJvbC5mb3IoXCJyZWFjdC5jYWNoZVwiKTtTeW1ib2wuZm9yKFwicmVhY3QudHJhY2luZ19tYXJrZXJcIik7dmFyIEphPVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBLYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9SmEmJmFbSmFdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIEE9T2JqZWN0LmFzc2lnbixMYTtmdW5jdGlvbiBNYShhKXtpZih2b2lkIDA9PT1MYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtMYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrTGErYX12YXIgTmE9ITE7XG5mdW5jdGlvbiBPYShhLGIpe2lmKCFhfHxOYSlyZXR1cm5cIlwiO05hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChsKXt2YXIgZD1sfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2gobCl7ZD1sfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2gobCl7ZD1sfWEoKX19Y2F0Y2gobCl7aWYobCYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBsLnN0YWNrKXtmb3IodmFyIGU9bC5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXt2YXIgaz1cIlxcblwiK2VbZ10ucmVwbGFjZShcIiBhdCBuZXcgXCIsXCIgYXQgXCIpO2EuZGlzcGxheU5hbWUmJmsuaW5jbHVkZXMoXCI8YW5vbnltb3VzPlwiKSYmKGs9ay5yZXBsYWNlKFwiPGFub255bW91cz5cIixhLmRpc3BsYXlOYW1lKSk7cmV0dXJuIGt9d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e05hPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/TWEoYSk6XCJcIn1cbmZ1bmN0aW9uIFBhKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBNYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIE1hKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBNYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIE1hKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1PYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1PYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMTpyZXR1cm4gYT1PYShhLnR5cGUsITApLGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1cbmZ1bmN0aW9uIFFhKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgeWE6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2Ugd2E6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIEFhOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIHphOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgRWE6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgRmE6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgQ2E6cmV0dXJuKGEuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgQmE6cmV0dXJuKGEuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgRGE6dmFyIGI9YS5yZW5kZXI7YT1hLmRpc3BsYXlOYW1lO2F8fChhPWIuZGlzcGxheU5hbWV8fFxuYi5uYW1lfHxcIlwiLGE9XCJcIiE9PWE/XCJGb3J3YXJkUmVmKFwiK2ErXCIpXCI6XCJGb3J3YXJkUmVmXCIpO3JldHVybiBhO2Nhc2UgR2E6cmV0dXJuIGI9YS5kaXNwbGF5TmFtZXx8bnVsbCxudWxsIT09Yj9iOlFhKGEudHlwZSl8fFwiTWVtb1wiO2Nhc2UgSGE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFFhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBSYShhKXt2YXIgYj1hLnR5cGU7c3dpdGNoKGEudGFnKXtjYXNlIDI0OnJldHVyblwiQ2FjaGVcIjtjYXNlIDk6cmV0dXJuKGIuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Db25zdW1lclwiO2Nhc2UgMTA6cmV0dXJuKGIuX2NvbnRleHQuZGlzcGxheU5hbWV8fFwiQ29udGV4dFwiKStcIi5Qcm92aWRlclwiO2Nhc2UgMTg6cmV0dXJuXCJEZWh5ZHJhdGVkRnJhZ21lbnRcIjtjYXNlIDExOnJldHVybiBhPWIucmVuZGVyLGE9YS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxcIlwiLGIuZGlzcGxheU5hbWV8fChcIlwiIT09YT9cIkZvcndhcmRSZWYoXCIrYStcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSA3OnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIDU6cmV0dXJuIGI7Y2FzZSA0OnJldHVyblwiUG9ydGFsXCI7Y2FzZSAzOnJldHVyblwiUm9vdFwiO2Nhc2UgNjpyZXR1cm5cIlRleHRcIjtjYXNlIDE2OnJldHVybiBRYShiKTtjYXNlIDg6cmV0dXJuIGI9PT16YT9cIlN0cmljdE1vZGVcIjpcIk1vZGVcIjtjYXNlIDIyOnJldHVyblwiT2Zmc2NyZWVuXCI7XG5jYXNlIDEyOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIDIxOnJldHVyblwiU2NvcGVcIjtjYXNlIDEzOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIDE5OnJldHVyblwiU3VzcGVuc2VMaXN0XCI7Y2FzZSAyNTpyZXR1cm5cIlRyYWNpbmdNYXJrZXJcIjtjYXNlIDE6Y2FzZSAwOmNhc2UgMTc6Y2FzZSAyOmNhc2UgMTQ6Y2FzZSAxNTppZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYilyZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBTYShhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7Y2FzZSBcIm9iamVjdFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBUYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWEoYSl7dmFyIGI9VGEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gWWEoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIEEoe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFphKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVNhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gYWIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZ0YShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gYmIoYSxiKXthYihhLGIpO3ZhciBjPVNhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP2NiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJmNiKGEsYi50eXBlLFNhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gZGIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIGNiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8WGEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfXZhciBlYj1BcnJheS5pc0FycmF5O1xuZnVuY3Rpb24gZmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1NhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IocCg5MSkpO3JldHVybiBBKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHAoOTIpKTtpZihlYihjKSl7aWYoMTxjLmxlbmd0aCl0aHJvdyBFcnJvcihwKDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1TYShiLnZhbHVlKSxkPVNhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX1mdW5jdGlvbiBrYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fVxuZnVuY3Rpb24gbGIoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP2tiKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIG1iLG5iPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIhPT1hLm5hbWVzcGFjZVVSSXx8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle21iPW1ifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO21iLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPW1iLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIG9iKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9XG52YXIgcGI9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGFzcGVjdFJhdGlvOiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCxcbnpvb206ITAsZmlsbE9wYWNpdHk6ITAsZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0scWI9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKHBiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3FiLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7cGJbYl09cGJbYV19KX0pO2Z1bmN0aW9uIHJiKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxwYi5oYXNPd25Qcm9wZXJ0eShhKSYmcGJbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gc2IoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9cmIoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgdGI9QSh7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIHViKGEsYil7aWYoYil7aWYodGJbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDEzNyxhKSk7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl7aWYobnVsbCE9Yi5jaGlsZHJlbil0aHJvdyBFcnJvcihwKDYwKSk7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfHwhKFwiX19odG1sXCJpbiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcihwKDYxKSk7fWlmKG51bGwhPWIuc3R5bGUmJlwib2JqZWN0XCIhPT10eXBlb2YgYi5zdHlsZSl0aHJvdyBFcnJvcihwKDYyKSk7fX1cbmZ1bmN0aW9uIHZiKGEsYil7aWYoLTE9PT1hLmluZGV4T2YoXCItXCIpKXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYi5pcztzd2l0Y2goYSl7Y2FzZSBcImFubm90YXRpb24teG1sXCI6Y2FzZSBcImNvbG9yLXByb2ZpbGVcIjpjYXNlIFwiZm9udC1mYWNlXCI6Y2FzZSBcImZvbnQtZmFjZS1zcmNcIjpjYXNlIFwiZm9udC1mYWNlLXVyaVwiOmNhc2UgXCJmb250LWZhY2UtZm9ybWF0XCI6Y2FzZSBcImZvbnQtZmFjZS1uYW1lXCI6Y2FzZSBcIm1pc3NpbmctZ2x5cGhcIjpyZXR1cm4hMTtkZWZhdWx0OnJldHVybiEwfX12YXIgd2I9bnVsbDtmdW5jdGlvbiB4YihhKXthPWEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9dmFyIHliPW51bGwsemI9bnVsbCxBYj1udWxsO1xuZnVuY3Rpb24gQmIoYSl7aWYoYT1DYihhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHliKXRocm93IEVycm9yKHAoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9RGIoYikseWIoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRWIoYSl7emI/QWI/QWIucHVzaChhKTpBYj1bYV06emI9YX1mdW5jdGlvbiBGYigpe2lmKHpiKXt2YXIgYT16YixiPUFiO0FiPXpiPW51bGw7QmIoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUJiKGJbYV0pfX1mdW5jdGlvbiBHYihhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEhiKCl7fXZhciBJYj0hMTtmdW5jdGlvbiBKYihhLGIsYyl7aWYoSWIpcmV0dXJuIGEoYixjKTtJYj0hMDt0cnl7cmV0dXJuIEdiKGEsYixjKX1maW5hbGx5e2lmKEliPSExLG51bGwhPT16Ynx8bnVsbCE9PUFiKUhiKCksRmIoKX19XG5mdW5jdGlvbiBLYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHAoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgTGI9ITE7aWYoaWEpdHJ5e3ZhciBNYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoTWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe0xiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLE1iLE1iKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixNYixNYil9Y2F0Y2goYSl7TGI9ITF9ZnVuY3Rpb24gTmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG0pe3RoaXMub25FcnJvcihtKX19dmFyIE9iPSExLFBiPW51bGwsUWI9ITEsUmI9bnVsbCxTYj17b25FcnJvcjpmdW5jdGlvbihhKXtPYj0hMDtQYj1hfX07ZnVuY3Rpb24gVGIoYSxiLGMsZCxlLGYsZyxoLGspe09iPSExO1BiPW51bGw7TmIuYXBwbHkoU2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFViKGEsYixjLGQsZSxmLGcsaCxrKXtUYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoT2Ipe2lmKE9iKXt2YXIgbD1QYjtPYj0hMTtQYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IocCgxOTgpKTtRYnx8KFFiPSEwLFJiPWwpfX1mdW5jdGlvbiBWYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmNDA5OCkmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uIFdiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gWGIoYSl7aWYoVmIoYSkhPT1hKXRocm93IEVycm9yKHAoMTg4KSk7fVxuZnVuY3Rpb24gWWIoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9VmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IocCgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gWGIoZSksYTtpZihmPT09ZClyZXR1cm4gWGIoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcihwKDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHAoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IocCgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHAoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBaYihhKXthPVliKGEpO3JldHVybiBudWxsIT09YT8kYihhKTpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDU9PT1hLnRhZ3x8Nj09PWEudGFnKXJldHVybiBhO2ZvcihhPWEuY2hpbGQ7bnVsbCE9PWE7KXt2YXIgYj0kYihhKTtpZihudWxsIT09YilyZXR1cm4gYjthPWEuc2libGluZ31yZXR1cm4gbnVsbH1cbnZhciBhYz1jYS51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLGJjPWNhLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLGNjPWNhLnVuc3RhYmxlX3Nob3VsZFlpZWxkLGRjPWNhLnVuc3RhYmxlX3JlcXVlc3RQYWludCxCPWNhLnVuc3RhYmxlX25vdyxlYz1jYS51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxmYz1jYS51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxnYz1jYS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxoYz1jYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxpYz1jYS51bnN0YWJsZV9Mb3dQcmlvcml0eSxqYz1jYS51bnN0YWJsZV9JZGxlUHJpb3JpdHksa2M9bnVsbCxsYz1udWxsO2Z1bmN0aW9uIG1jKGEpe2lmKGxjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgbGMub25Db21taXRGaWJlclJvb3QpdHJ5e2xjLm9uQ29tbWl0RmliZXJSb290KGtjLGEsdm9pZCAwLDEyOD09PShhLmN1cnJlbnQuZmxhZ3MmMTI4KSl9Y2F0Y2goYil7fX1cbnZhciBvYz1NYXRoLmNsejMyP01hdGguY2x6MzI6bmMscGM9TWF0aC5sb2cscWM9TWF0aC5MTjI7ZnVuY3Rpb24gbmMoYSl7YT4+Pj0wO3JldHVybiAwPT09YT8zMjozMS0ocGMoYSkvcWN8MCl8MH12YXIgcmM9NjQsc2M9NDE5NDMwNDtcbmZ1bmN0aW9uIHRjKGEpe3N3aXRjaChhJi1hKXtjYXNlIDE6cmV0dXJuIDE7Y2FzZSAyOnJldHVybiAyO2Nhc2UgNDpyZXR1cm4gNDtjYXNlIDg6cmV0dXJuIDg7Y2FzZSAxNjpyZXR1cm4gMTY7Y2FzZSAzMjpyZXR1cm4gMzI7Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYSY0MTk0MjQwO2Nhc2UgNDE5NDMwNDpjYXNlIDgzODg2MDg6Y2FzZSAxNjc3NzIxNjpjYXNlIDMzNTU0NDMyOmNhc2UgNjcxMDg4NjQ6cmV0dXJuIGEmMTMwMDIzNDI0O2Nhc2UgMTM0MjE3NzI4OnJldHVybiAxMzQyMTc3Mjg7Y2FzZSAyNjg0MzU0NTY6cmV0dXJuIDI2ODQzNTQ1NjtjYXNlIDUzNjg3MDkxMjpyZXR1cm4gNTM2ODcwOTEyO2Nhc2UgMTA3Mzc0MTgyNDpyZXR1cm4gMTA3Mzc0MTgyNDtcbmRlZmF1bHQ6cmV0dXJuIGF9fWZ1bmN0aW9uIHVjKGEsYil7dmFyIGM9YS5wZW5kaW5nTGFuZXM7aWYoMD09PWMpcmV0dXJuIDA7dmFyIGQ9MCxlPWEuc3VzcGVuZGVkTGFuZXMsZj1hLnBpbmdlZExhbmVzLGc9YyYyNjg0MzU0NTU7aWYoMCE9PWcpe3ZhciBoPWcmfmU7MCE9PWg/ZD10YyhoKTooZiY9ZywwIT09ZiYmKGQ9dGMoZikpKX1lbHNlIGc9YyZ+ZSwwIT09Zz9kPXRjKGcpOjAhPT1mJiYoZD10YyhmKSk7aWYoMD09PWQpcmV0dXJuIDA7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZSkmJihlPWQmLWQsZj1iJi1iLGU+PWZ8fDE2PT09ZSYmMCE9PShmJjQxOTQyNDApKSlyZXR1cm4gYjswIT09KGQmNCkmJihkfD1jJjE2KTtiPWEuZW50YW5nbGVkTGFuZXM7aWYoMCE9PWIpZm9yKGE9YS5lbnRhbmdsZW1lbnRzLGImPWQ7MDxiOyljPTMxLW9jKGIpLGU9MTw8YyxkfD1hW2NdLGImPX5lO3JldHVybiBkfVxuZnVuY3Rpb24gdmMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDQ6cmV0dXJuIGIrMjUwO2Nhc2UgODpjYXNlIDE2OmNhc2UgMzI6Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpyZXR1cm4gYis1RTM7Y2FzZSA0MTk0MzA0OmNhc2UgODM4ODYwODpjYXNlIDE2Nzc3MjE2OmNhc2UgMzM1NTQ0MzI6Y2FzZSA2NzEwODg2NDpyZXR1cm4tMTtjYXNlIDEzNDIxNzcyODpjYXNlIDI2ODQzNTQ1NjpjYXNlIDUzNjg3MDkxMjpjYXNlIDEwNzM3NDE4MjQ6cmV0dXJuLTE7ZGVmYXVsdDpyZXR1cm4tMX19XG5mdW5jdGlvbiB3YyhhLGIpe2Zvcih2YXIgYz1hLnN1c3BlbmRlZExhbmVzLGQ9YS5waW5nZWRMYW5lcyxlPWEuZXhwaXJhdGlvblRpbWVzLGY9YS5wZW5kaW5nTGFuZXM7MDxmOyl7dmFyIGc9MzEtb2MoZiksaD0xPDxnLGs9ZVtnXTtpZigtMT09PWspe2lmKDA9PT0oaCZjKXx8MCE9PShoJmQpKWVbZ109dmMoaCxiKX1lbHNlIGs8PWImJihhLmV4cGlyZWRMYW5lc3w9aCk7ZiY9fmh9fWZ1bmN0aW9uIHhjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiB5Yygpe3ZhciBhPXJjO3JjPDw9MTswPT09KHJjJjQxOTQyNDApJiYocmM9NjQpO3JldHVybiBhfWZ1bmN0aW9uIHpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gQWMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iOzUzNjg3MDkxMiE9PWImJihhLnN1c3BlbmRlZExhbmVzPTAsYS5waW5nZWRMYW5lcz0wKTthPWEuZXZlbnRUaW1lcztiPTMxLW9jKGIpO2FbYl09Y31mdW5jdGlvbiBCYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzJn5iO2EucGVuZGluZ0xhbmVzPWI7YS5zdXNwZW5kZWRMYW5lcz0wO2EucGluZ2VkTGFuZXM9MDthLmV4cGlyZWRMYW5lcyY9YjthLm11dGFibGVSZWFkTGFuZXMmPWI7YS5lbnRhbmdsZWRMYW5lcyY9YjtiPWEuZW50YW5nbGVtZW50czt2YXIgZD1hLmV2ZW50VGltZXM7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxjOyl7dmFyIGU9MzEtb2MoYyksZj0xPDxlO2JbZV09MDtkW2VdPS0xO2FbZV09LTE7YyY9fmZ9fVxuZnVuY3Rpb24gQ2MoYSxiKXt2YXIgYz1hLmVudGFuZ2xlZExhbmVzfD1iO2ZvcihhPWEuZW50YW5nbGVtZW50cztjOyl7dmFyIGQ9MzEtb2MoYyksZT0xPDxkO2UmYnxhW2RdJmImJihhW2RdfD1iKTtjJj1+ZX19dmFyIEM9MDtmdW5jdGlvbiBEYyhhKXthJj0tYTtyZXR1cm4gMTxhPzQ8YT8wIT09KGEmMjY4NDM1NDU1KT8xNjo1MzY4NzA5MTI6NDoxfXZhciBFYyxGYyxHYyxIYyxJYyxKYz0hMSxLYz1bXSxMYz1udWxsLE1jPW51bGwsTmM9bnVsbCxPYz1uZXcgTWFwLFBjPW5ldyBNYXAsUWM9W10sUmM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjb3B5IGN1dCBwYXN0ZSBjbGljayBjaGFuZ2UgY29udGV4dG1lbnUgcmVzZXQgc3VibWl0XCIuc3BsaXQoXCIgXCIpO1xuZnVuY3Rpb24gU2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjpMYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6TWM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6TmM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOk9jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOlBjLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gVGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT17YmxvY2tlZE9uOmIsZG9tRXZlbnROYW1lOmMsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmYsdGFyZ2V0Q29udGFpbmVyczpbZV19LG51bGwhPT1iJiYoYj1DYihiKSxudWxsIT09YiYmRmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gVWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4gTGM9VGMoTGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIE1jPVRjKE1jLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBOYz1UYyhOYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO09jLnNldChmLFRjKE9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxQYy5zZXQoZixUYyhQYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiBWYyhhKXt2YXIgYj1XYyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVZiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPVdiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO0ljKGEucHJpb3JpdHksZnVuY3Rpb24oKXtHYyhjKX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiBYYyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9WWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbD09PWMpe2M9YS5uYXRpdmVFdmVudDt2YXIgZD1uZXcgYy5jb25zdHJ1Y3RvcihjLnR5cGUsYyk7d2I9ZDtjLnRhcmdldC5kaXNwYXRjaEV2ZW50KGQpO3diPW51bGx9ZWxzZSByZXR1cm4gYj1DYihjKSxudWxsIT09YiYmRmMoYiksYS5ibG9ja2VkT249YywhMTtiLnNoaWZ0KCl9cmV0dXJuITB9ZnVuY3Rpb24gWmMoYSxiLGMpe1hjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiAkYygpe0pjPSExO251bGwhPT1MYyYmWGMoTGMpJiYoTGM9bnVsbCk7bnVsbCE9PU1jJiZYYyhNYykmJihNYz1udWxsKTtudWxsIT09TmMmJlhjKE5jKSYmKE5jPW51bGwpO09jLmZvckVhY2goWmMpO1BjLmZvckVhY2goWmMpfVxuZnVuY3Rpb24gYWQoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLEpjfHwoSmM9ITAsY2EudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayhjYS51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSwkYykpKX1cbmZ1bmN0aW9uIGJkKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIGFkKGIsYSl9aWYoMDxLYy5sZW5ndGgpe2FkKEtjWzBdLGEpO2Zvcih2YXIgYz0xO2M8S2MubGVuZ3RoO2MrKyl7dmFyIGQ9S2NbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1MYyYmYWQoTGMsYSk7bnVsbCE9PU1jJiZhZChNYyxhKTtudWxsIT09TmMmJmFkKE5jLGEpO09jLmZvckVhY2goYik7UGMuZm9yRWFjaChiKTtmb3IoYz0wO2M8UWMubGVuZ3RoO2MrKylkPVFjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxRYy5sZW5ndGgmJihjPVFjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KVZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmUWMuc2hpZnQoKX12YXIgY2Q9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsZGQ9ITA7XG5mdW5jdGlvbiBlZChhLGIsYyxkKXt2YXIgZT1DLGY9Y2QudHJhbnNpdGlvbjtjZC50cmFuc2l0aW9uPW51bGw7dHJ5e0M9MSxmZChhLGIsYyxkKX1maW5hbGx5e0M9ZSxjZC50cmFuc2l0aW9uPWZ9fWZ1bmN0aW9uIGdkKGEsYixjLGQpe3ZhciBlPUMsZj1jZC50cmFuc2l0aW9uO2NkLnRyYW5zaXRpb249bnVsbDt0cnl7Qz00LGZkKGEsYixjLGQpfWZpbmFsbHl7Qz1lLGNkLnRyYW5zaXRpb249Zn19XG5mdW5jdGlvbiBmZChhLGIsYyxkKXtpZihkZCl7dmFyIGU9WWMoYSxiLGMsZCk7aWYobnVsbD09PWUpaGQoYSxiLGQsaWQsYyksU2MoYSxkKTtlbHNlIGlmKFVjKGUsYSxiLGMsZCkpZC5zdG9wUHJvcGFnYXRpb24oKTtlbHNlIGlmKFNjKGEsZCksYiY0JiYtMTxSYy5pbmRleE9mKGEpKXtmb3IoO251bGwhPT1lOyl7dmFyIGY9Q2IoZSk7bnVsbCE9PWYmJkVjKGYpO2Y9WWMoYSxiLGMsZCk7bnVsbD09PWYmJmhkKGEsYixkLGlkLGMpO2lmKGY9PT1lKWJyZWFrO2U9Zn1udWxsIT09ZSYmZC5zdG9wUHJvcGFnYXRpb24oKX1lbHNlIGhkKGEsYixkLG51bGwsYyl9fXZhciBpZD1udWxsO1xuZnVuY3Rpb24gWWMoYSxiLGMsZCl7aWQ9bnVsbDthPXhiKGQpO2E9V2MoYSk7aWYobnVsbCE9PWEpaWYoYj1WYihhKSxudWxsPT09YilhPW51bGw7ZWxzZSBpZihjPWIudGFnLDEzPT09Yyl7YT1XYihiKTtpZihudWxsIT09YSlyZXR1cm4gYTthPW51bGx9ZWxzZSBpZigzPT09Yyl7aWYoYi5zdGF0ZU5vZGUuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZClyZXR1cm4gMz09PWIudGFnP2Iuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDthPW51bGx9ZWxzZSBiIT09YSYmKGE9bnVsbCk7aWQ9YTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGpkKGEpe3N3aXRjaChhKXtjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsaWNrXCI6Y2FzZSBcImNsb3NlXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjpjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJpbnZhbGlkXCI6Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5cHJlc3NcIjpjYXNlIFwia2V5dXBcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwicGFzdGVcIjpjYXNlIFwicGF1c2VcIjpjYXNlIFwicGxheVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmNhc2UgXCJyYXRlY2hhbmdlXCI6Y2FzZSBcInJlc2V0XCI6Y2FzZSBcInJlc2l6ZVwiOmNhc2UgXCJzZWVrZWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjpjYXNlIFwidm9sdW1lY2hhbmdlXCI6Y2FzZSBcImNoYW5nZVwiOmNhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjpjYXNlIFwidGV4dElucHV0XCI6Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjpjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjpjYXNlIFwiYmVmb3JlaW5wdXRcIjpjYXNlIFwiYmx1clwiOmNhc2UgXCJmdWxsc2NyZWVuY2hhbmdlXCI6Y2FzZSBcImZvY3VzXCI6Y2FzZSBcImhhc2hjaGFuZ2VcIjpjYXNlIFwicG9wc3RhdGVcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInNlbGVjdHN0YXJ0XCI6cmV0dXJuIDE7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwic2Nyb2xsXCI6Y2FzZSBcInRvZ2dsZVwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwid2hlZWxcIjpjYXNlIFwibW91c2VlbnRlclwiOmNhc2UgXCJtb3VzZWxlYXZlXCI6Y2FzZSBcInBvaW50ZXJlbnRlclwiOmNhc2UgXCJwb2ludGVybGVhdmVcIjpyZXR1cm4gNDtcbmNhc2UgXCJtZXNzYWdlXCI6c3dpdGNoKGVjKCkpe2Nhc2UgZmM6cmV0dXJuIDE7Y2FzZSBnYzpyZXR1cm4gNDtjYXNlIGhjOmNhc2UgaWM6cmV0dXJuIDE2O2Nhc2UgamM6cmV0dXJuIDUzNjg3MDkxMjtkZWZhdWx0OnJldHVybiAxNn1kZWZhdWx0OnJldHVybiAxNn19dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO2Z1bmN0aW9uIG5kKCl7aWYobWQpcmV0dXJuIG1kO3ZhciBhLGI9bGQsYz1iLmxlbmd0aCxkLGU9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsZj1lLmxlbmd0aDtmb3IoYT0wO2E8YyYmYlthXT09PWVbYV07YSsrKTt2YXIgZz1jLWE7Zm9yKGQ9MTtkPD1nJiZiW2MtZF09PT1lW2YtZF07ZCsrKTtyZXR1cm4gbWQ9ZS5zbGljZShhLDE8ZD8xLWQ6dm9pZCAwKX1cbmZ1bmN0aW9uIG9kKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfWZ1bmN0aW9uIHBkKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWQoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHJkKGEpe2Z1bmN0aW9uIGIoYixkLGUsZixnKXt0aGlzLl9yZWFjdE5hbWU9Yjt0aGlzLl90YXJnZXRJbnN0PWU7dGhpcy50eXBlPWQ7dGhpcy5uYXRpdmVFdmVudD1mO3RoaXMudGFyZ2V0PWc7dGhpcy5jdXJyZW50VGFyZ2V0PW51bGw7Zm9yKHZhciBjIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShjKSYmKGI9YVtjXSx0aGlzW2NdPWI/YihmKTpmW2NdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Zi5kZWZhdWx0UHJldmVudGVkP2YuZGVmYXVsdFByZXZlbnRlZDohMT09PWYucmV0dXJuVmFsdWUpP3BkOnFkO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWQ7cmV0dXJuIHRoaXN9QShiLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cbnZhciBzZD17ZXZlbnRQaGFzZTowLGJ1YmJsZXM6MCxjYW5jZWxhYmxlOjAsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDowLGlzVHJ1c3RlZDowfSx0ZD1yZChzZCksdWQ9QSh7fSxzZCx7dmlldzowLGRldGFpbDowfSksdmQ9cmQodWQpLHdkLHhkLHlkLEFkPUEoe30sdWQse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxwYWdlWDowLHBhZ2VZOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLGdldE1vZGlmaWVyU3RhdGU6emQsYnV0dG9uOjAsYnV0dG9uczowLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWEucmVsYXRlZFRhcmdldD9hLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQ6YS5yZWxhdGVkVGFyZ2V0fSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluXG5hKXJldHVybiBhLm1vdmVtZW50WDthIT09eWQmJih5ZCYmXCJtb3VzZW1vdmVcIj09PWEudHlwZT8od2Q9YS5zY3JlZW5YLXlkLnNjcmVlblgseGQ9YS5zY3JlZW5ZLXlkLnNjcmVlblkpOnhkPXdkPTAseWQ9YSk7cmV0dXJuIHdkfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJtb3ZlbWVudFlcImluIGE/YS5tb3ZlbWVudFk6eGR9fSksQmQ9cmQoQWQpLENkPUEoe30sQWQse2RhdGFUcmFuc2ZlcjowfSksRGQ9cmQoQ2QpLEVkPUEoe30sdWQse3JlbGF0ZWRUYXJnZXQ6MH0pLEZkPXJkKEVkKSxHZD1BKHt9LHNkLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxIZD1yZChHZCksSWQ9QSh7fSxzZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEpkPXJkKElkKSxLZD1BKHt9LHNkLHtkYXRhOjB9KSxMZD1yZChLZCksTWQ9e0VzYzpcIkVzY2FwZVwiLFxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXG4xMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LE9kPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9kW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gemQoKXtyZXR1cm4gUGR9XG52YXIgUWQ9QSh7fSx1ZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1NZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/TmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxjb2RlOjAsbG9jYXRpb246MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAscmVwZWF0OjAsbG9jYWxlOjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1BKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1BKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9QSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9QSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXG5kZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFpkPXJkKFlkKSwkZD1bOSwxMywyNywzMl0sYWU9aWEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGJlPW51bGw7aWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGJlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIGNlPWlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhYmUsZGU9aWEmJighYWV8fGJlJiY4PGJlJiYxMT49YmUpLGVlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGZlPSExO1xuZnVuY3Rpb24gZ2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT0kZC5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiZm9jdXNvdXRcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBoZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBpZT0hMTtmdW5jdGlvbiBqZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gaGUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2ZlPSEwO3JldHVybiBlZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1lZSYmZmU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgbGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gbWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFsZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gbmUoYSxiLGMsZCl7RWIoZCk7Yj1vZShiLFwib25DaGFuZ2VcIik7MDxiLmxlbmd0aCYmKGM9bmV3IHRkKFwib25DaGFuZ2VcIixcImNoYW5nZVwiLG51bGwsYyxkKSxhLnB1c2goe2V2ZW50OmMsbGlzdGVuZXJzOmJ9KSl9dmFyIHBlPW51bGwscWU9bnVsbDtmdW5jdGlvbiByZShhKXtzZShhLDApfWZ1bmN0aW9uIHRlKGEpe3ZhciBiPXVlKGEpO2lmKFdhKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gdmUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgd2U9ITE7aWYoaWEpe3ZhciB4ZTtpZihpYSl7dmFyIHllPVwib25pbnB1dFwiaW4gZG9jdW1lbnQ7aWYoIXllKXt2YXIgemU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt6ZS5zZXRBdHRyaWJ1dGUoXCJvbmlucHV0XCIsXCJyZXR1cm47XCIpO3llPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZS5vbmlucHV0fXhlPXllfWVsc2UgeGU9ITE7d2U9eGUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gQWUoKXtwZSYmKHBlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSxxZT1wZT1udWxsKX1mdW5jdGlvbiBCZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmdGUocWUpKXt2YXIgYj1bXTtuZShiLHFlLGEseGIoYSkpO0piKHJlLGIpfX1cbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlO1xuZnVuY3Rpb24gSWUoYSxiKXtpZihIZShhLGIpKXJldHVybiEwO2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYXx8bnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYnx8bnVsbD09PWIpcmV0dXJuITE7dmFyIGM9T2JqZWN0LmtleXMoYSksZD1PYmplY3Qua2V5cyhiKTtpZihjLmxlbmd0aCE9PWQubGVuZ3RoKXJldHVybiExO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07aWYoIWphLmNhbGwoYixlKXx8IUhlKGFbZV0sYltlXSkpcmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gSmUoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfVxuZnVuY3Rpb24gS2UoYSxiKXt2YXIgYz1KZShhKTthPTA7Zm9yKHZhciBkO2M7KXtpZigzPT09Yy5ub2RlVHlwZSl7ZD1hK2MudGV4dENvbnRlbnQubGVuZ3RoO2lmKGE8PWImJmQ+PWIpcmV0dXJue25vZGU6YyxvZmZzZXQ6Yi1hfTthPWR9YTp7Zm9yKDtjOyl7aWYoYy5uZXh0U2libGluZyl7Yz1jLm5leHRTaWJsaW5nO2JyZWFrIGF9Yz1jLnBhcmVudE5vZGV9Yz12b2lkIDB9Yz1KZShjKX19ZnVuY3Rpb24gTGUoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT9MZShhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9XG5mdW5jdGlvbiBNZSgpe2Zvcih2YXIgYT13aW5kb3csYj1YYSgpO2IgaW5zdGFuY2VvZiBhLkhUTUxJRnJhbWVFbGVtZW50Oyl7dHJ5e3ZhciBjPVwic3RyaW5nXCI9PT10eXBlb2YgYi5jb250ZW50V2luZG93LmxvY2F0aW9uLmhyZWZ9Y2F0Y2goZCl7Yz0hMX1pZihjKWE9Yi5jb250ZW50V2luZG93O2Vsc2UgYnJlYWs7Yj1YYShhLmRvY3VtZW50KX1yZXR1cm4gYn1mdW5jdGlvbiBOZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfVxuZnVuY3Rpb24gT2UoYSl7dmFyIGI9TWUoKSxjPWEuZm9jdXNlZEVsZW0sZD1hLnNlbGVjdGlvblJhbmdlO2lmKGIhPT1jJiZjJiZjLm93bmVyRG9jdW1lbnQmJkxlKGMub3duZXJEb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsYykpe2lmKG51bGwhPT1kJiZOZShjKSlpZihiPWQuc3RhcnQsYT1kLmVuZCx2b2lkIDA9PT1hJiYoYT1iKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBjKWMuc2VsZWN0aW9uU3RhcnQ9YixjLnNlbGVjdGlvbkVuZD1NYXRoLm1pbihhLGMudmFsdWUubGVuZ3RoKTtlbHNlIGlmKGE9KGI9Yy5vd25lckRvY3VtZW50fHxkb2N1bWVudCkmJmIuZGVmYXVsdFZpZXd8fHdpbmRvdyxhLmdldFNlbGVjdGlvbil7YT1hLmdldFNlbGVjdGlvbigpO3ZhciBlPWMudGV4dENvbnRlbnQubGVuZ3RoLGY9TWF0aC5taW4oZC5zdGFydCxlKTtkPXZvaWQgMD09PWQuZW5kP2Y6TWF0aC5taW4oZC5lbmQsZSk7IWEuZXh0ZW5kJiZmPmQmJihlPWQsZD1mLGY9ZSk7ZT1LZShjLGYpO3ZhciBnPUtlKGMsXG5kKTtlJiZnJiYoMSE9PWEucmFuZ2VDb3VudHx8YS5hbmNob3JOb2RlIT09ZS5ub2RlfHxhLmFuY2hvck9mZnNldCE9PWUub2Zmc2V0fHxhLmZvY3VzTm9kZSE9PWcubm9kZXx8YS5mb2N1c09mZnNldCE9PWcub2Zmc2V0KSYmKGI9Yi5jcmVhdGVSYW5nZSgpLGIuc2V0U3RhcnQoZS5ub2RlLGUub2Zmc2V0KSxhLnJlbW92ZUFsbFJhbmdlcygpLGY+ZD8oYS5hZGRSYW5nZShiKSxhLmV4dGVuZChnLm5vZGUsZy5vZmZzZXQpKTooYi5zZXRFbmQoZy5ub2RlLGcub2Zmc2V0KSxhLmFkZFJhbmdlKGIpKSl9Yj1bXTtmb3IoYT1jO2E9YS5wYXJlbnROb2RlOykxPT09YS5ub2RlVHlwZSYmYi5wdXNoKHtlbGVtZW50OmEsbGVmdDphLnNjcm9sbExlZnQsdG9wOmEuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZm9jdXMmJmMuZm9jdXMoKTtmb3IoYz0wO2M8Yi5sZW5ndGg7YysrKWE9YltjXSxhLmVsZW1lbnQuc2Nyb2xsTGVmdD1hLmxlZnQsYS5lbGVtZW50LnNjcm9sbFRvcD1hLnRvcH19XG52YXIgUGU9aWEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxRZT1udWxsLFJlPW51bGwsU2U9bnVsbCxUZT0hMTtcbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1jLndpbmRvdz09PWM/Yy5kb2N1bWVudDo5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtUZXx8bnVsbD09UWV8fFFlIT09WGEoZCl8fChkPVFlLFwic2VsZWN0aW9uU3RhcnRcImluIGQmJk5lKGQpP2Q9e3N0YXJ0OmQuc2VsZWN0aW9uU3RhcnQsZW5kOmQuc2VsZWN0aW9uRW5kfTooZD0oZC5vd25lckRvY3VtZW50JiZkLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksZD17YW5jaG9yTm9kZTpkLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmQuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpkLmZvY3VzTm9kZSxmb2N1c09mZnNldDpkLmZvY3VzT2Zmc2V0fSksU2UmJkllKFNlLGQpfHwoU2U9ZCxkPW9lKFJlLFwib25TZWxlY3RcIiksMDxkLmxlbmd0aCYmKGI9bmV3IHRkKFwib25TZWxlY3RcIixcInNlbGVjdFwiLG51bGwsYixjKSxhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmR9KSxiLnRhcmdldD1RZSkpKX1cbmZ1bmN0aW9uIFZlKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIFdlPXthbmltYXRpb25lbmQ6VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246VmUoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpWZShcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpWZShcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LFhlPXt9LFllPXt9O1xuaWEmJihZZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBXZS5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBXZS5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBXZS5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBXZS50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIFplKGEpe2lmKFhlW2FdKXJldHVybiBYZVthXTtpZighV2VbYV0pcmV0dXJuIGE7dmFyIGI9V2VbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gWWUpcmV0dXJuIFhlW2FdPWJbY107cmV0dXJuIGF9dmFyICRlPVplKFwiYW5pbWF0aW9uZW5kXCIpLGFmPVplKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLGJmPVplKFwiYW5pbWF0aW9uc3RhcnRcIiksY2Y9WmUoXCJ0cmFuc2l0aW9uZW5kXCIpLGRmPW5ldyBNYXAsZWY9XCJhYm9ydCBhdXhDbGljayBjYW5jZWwgY2FuUGxheSBjYW5QbGF5VGhyb3VnaCBjbGljayBjbG9zZSBjb250ZXh0TWVudSBjb3B5IGN1dCBkcmFnIGRyYWdFbmQgZHJhZ0VudGVyIGRyYWdFeGl0IGRyYWdMZWF2ZSBkcmFnT3ZlciBkcmFnU3RhcnQgZHJvcCBkdXJhdGlvbkNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBnb3RQb2ludGVyQ2FwdHVyZSBpbnB1dCBpbnZhbGlkIGtleURvd24ga2V5UHJlc3Mga2V5VXAgbG9hZCBsb2FkZWREYXRhIGxvYWRlZE1ldGFkYXRhIGxvYWRTdGFydCBsb3N0UG9pbnRlckNhcHR1cmUgbW91c2VEb3duIG1vdXNlTW92ZSBtb3VzZU91dCBtb3VzZU92ZXIgbW91c2VVcCBwYXN0ZSBwYXVzZSBwbGF5IHBsYXlpbmcgcG9pbnRlckNhbmNlbCBwb2ludGVyRG93biBwb2ludGVyTW92ZSBwb2ludGVyT3V0IHBvaW50ZXJPdmVyIHBvaW50ZXJVcCBwcm9ncmVzcyByYXRlQ2hhbmdlIHJlc2V0IHJlc2l6ZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1Ym1pdCBzdXNwZW5kIHRpbWVVcGRhdGUgdG91Y2hDYW5jZWwgdG91Y2hFbmQgdG91Y2hTdGFydCB2b2x1bWVDaGFuZ2Ugc2Nyb2xsIHRvZ2dsZSB0b3VjaE1vdmUgd2FpdGluZyB3aGVlbFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIGZmKGEsYil7ZGYuc2V0KGEsYik7ZmEoYixbYV0pfWZvcih2YXIgZ2Y9MDtnZjxlZi5sZW5ndGg7Z2YrKyl7dmFyIGhmPWVmW2dmXSxqZj1oZi50b0xvd2VyQ2FzZSgpLGtmPWhmWzBdLnRvVXBwZXJDYXNlKCkraGYuc2xpY2UoMSk7ZmYoamYsXCJvblwiK2tmKX1mZigkZSxcIm9uQW5pbWF0aW9uRW5kXCIpO2ZmKGFmLFwib25BbmltYXRpb25JdGVyYXRpb25cIik7ZmYoYmYsXCJvbkFuaW1hdGlvblN0YXJ0XCIpO2ZmKFwiZGJsY2xpY2tcIixcIm9uRG91YmxlQ2xpY2tcIik7ZmYoXCJmb2N1c2luXCIsXCJvbkZvY3VzXCIpO2ZmKFwiZm9jdXNvdXRcIixcIm9uQmx1clwiKTtmZihjZixcIm9uVHJhbnNpdGlvbkVuZFwiKTtoYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO2hhKFwib25Nb3VzZUxlYXZlXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7aGEoXCJvblBvaW50ZXJFbnRlclwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtcbmhhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZmEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2ZhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZmEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtmYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtmYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7XG5mYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgbGY9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHJlc2l6ZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxtZj1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChsZikpO1xuZnVuY3Rpb24gbmYoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWM7VWIoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYil7Yj0wIT09KGImNCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10sZT1kLmV2ZW50O2Q9ZC5saXN0ZW5lcnM7YTp7dmFyIGY9dm9pZCAwO2lmKGIpZm9yKHZhciBnPWQubGVuZ3RoLTE7MDw9ZztnLS0pe3ZhciBoPWRbZ10saz1oLmluc3RhbmNlLGw9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7bmYoZSxoLGwpO2Y9a31lbHNlIGZvcihnPTA7ZzxkLmxlbmd0aDtnKyspe2g9ZFtnXTtrPWguaW5zdGFuY2U7bD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtuZihlLGgsbCk7Zj1rfX19aWYoUWIpdGhyb3cgYT1SYixRYj0hMSxSYj1udWxsLGE7fVxuZnVuY3Rpb24gRChhLGIpe3ZhciBjPWJbb2ZdO3ZvaWQgMD09PWMmJihjPWJbb2ZdPW5ldyBTZXQpO3ZhciBkPWErXCJfX2J1YmJsZVwiO2MuaGFzKGQpfHwocGYoYixhLDIsITEpLGMuYWRkKGQpKX1mdW5jdGlvbiBxZihhLGIsYyl7dmFyIGQ9MDtiJiYoZHw9NCk7cGYoYyxhLGQsYil9dmFyIHJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gc2YoYSl7aWYoIWFbcmZdKXthW3JmXT0hMDtkYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1wic2VsZWN0aW9uY2hhbmdlXCIhPT1iJiYobWYuaGFzKGIpfHxxZihiLCExLGEpLHFmKGIsITAsYSkpfSk7dmFyIGI9OT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7bnVsbD09PWJ8fGJbcmZdfHwoYltyZl09ITAscWYoXCJzZWxlY3Rpb25jaGFuZ2VcIiwhMSxiKSl9fVxuZnVuY3Rpb24gcGYoYSxiLGMsZCl7c3dpdGNoKGpkKGIpKXtjYXNlIDE6dmFyIGU9ZWQ7YnJlYWs7Y2FzZSA0OmU9Z2Q7YnJlYWs7ZGVmYXVsdDplPWZkfWM9ZS5iaW5kKG51bGwsYixjLGEpO2U9dm9pZCAwOyFMYnx8XCJ0b3VjaHN0YXJ0XCIhPT1iJiZcInRvdWNobW92ZVwiIT09YiYmXCJ3aGVlbFwiIT09Ynx8KGU9ITApO2Q/dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtjYXB0dXJlOiEwLHBhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITApOnZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7cGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMSl9XG5mdW5jdGlvbiBoZChhLGIsYyxkLGUpe3ZhciBmPWQ7aWYoMD09PShiJjEpJiYwPT09KGImMikmJm51bGwhPT1kKWE6Zm9yKDs7KXtpZihudWxsPT09ZClyZXR1cm47dmFyIGc9ZC50YWc7aWYoMz09PWd8fDQ9PT1nKXt2YXIgaD1kLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2lmKGg9PT1lfHw4PT09aC5ub2RlVHlwZSYmaC5wYXJlbnROb2RlPT09ZSlicmVhaztpZig0PT09Zylmb3IoZz1kLnJldHVybjtudWxsIT09Zzspe3ZhciBrPWcudGFnO2lmKDM9PT1rfHw0PT09aylpZihrPWcuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8saz09PWV8fDg9PT1rLm5vZGVUeXBlJiZrLnBhcmVudE5vZGU9PT1lKXJldHVybjtnPWcucmV0dXJufWZvcig7bnVsbCE9PWg7KXtnPVdjKGgpO2lmKG51bGw9PT1nKXJldHVybjtrPWcudGFnO2lmKDU9PT1rfHw2PT09ayl7ZD1mPWc7Y29udGludWUgYX1oPWgucGFyZW50Tm9kZX19ZD1kLnJldHVybn1KYihmdW5jdGlvbigpe3ZhciBkPWYsZT14YihjKSxnPVtdO1xuYTp7dmFyIGg9ZGYuZ2V0KGEpO2lmKHZvaWQgMCE9PWgpe3ZhciBrPXRkLG49YTtzd2l0Y2goYSl7Y2FzZSBcImtleXByZXNzXCI6aWYoMD09PW9kKGMpKWJyZWFrIGE7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjprPVJkO2JyZWFrO2Nhc2UgXCJmb2N1c2luXCI6bj1cImZvY3VzXCI7az1GZDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpuPVwiYmx1clwiO2s9RmQ7YnJlYWs7Y2FzZSBcImJlZm9yZWJsdXJcIjpjYXNlIFwiYWZ0ZXJibHVyXCI6az1GZDticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pYnJlYWsgYTtjYXNlIFwiYXV4Y2xpY2tcIjpjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOms9QmQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6az1cbkRkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOms9VmQ7YnJlYWs7Y2FzZSAkZTpjYXNlIGFmOmNhc2UgYmY6az1IZDticmVhaztjYXNlIGNmOms9WGQ7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOms9dmQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6az1aZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjprPUpkO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOms9VGR9dmFyIHQ9MCE9PShiJjQpLEo9IXQmJlwic2Nyb2xsXCI9PT1hLHg9dD9udWxsIT09aD9oK1wiQ2FwdHVyZVwiOm51bGw6aDt0PVtdO2Zvcih2YXIgdz1kLHU7bnVsbCE9PVxudzspe3U9dzt2YXIgRj11LnN0YXRlTm9kZTs1PT09dS50YWcmJm51bGwhPT1GJiYodT1GLG51bGwhPT14JiYoRj1LYih3LHgpLG51bGwhPUYmJnQucHVzaCh0Zih3LEYsdSkpKSk7aWYoSilicmVhazt3PXcucmV0dXJufTA8dC5sZW5ndGgmJihoPW5ldyBrKGgsbixudWxsLGMsZSksZy5wdXNoKHtldmVudDpoLGxpc3RlbmVyczp0fSkpfX1pZigwPT09KGImNykpe2E6e2g9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWE7az1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoaCYmYyE9PXdiJiYobj1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYoV2Mobil8fG5bdWZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYobj1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCxuPW4/V2Mobik6bnVsbCxudWxsIT09XG5uJiYoSj1WYihuKSxuIT09Snx8NSE9PW4udGFnJiY2IT09bi50YWcpKW49bnVsbH1lbHNlIGs9bnVsbCxuPWQ7aWYoayE9PW4pe3Q9QmQ7Rj1cIm9uTW91c2VMZWF2ZVwiO3g9XCJvbk1vdXNlRW50ZXJcIjt3PVwibW91c2VcIjtpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpdD1UZCxGPVwib25Qb2ludGVyTGVhdmVcIix4PVwib25Qb2ludGVyRW50ZXJcIix3PVwicG9pbnRlclwiO0o9bnVsbD09az9oOnVlKGspO3U9bnVsbD09bj9oOnVlKG4pO2g9bmV3IHQoRix3K1wibGVhdmVcIixrLGMsZSk7aC50YXJnZXQ9SjtoLnJlbGF0ZWRUYXJnZXQ9dTtGPW51bGw7V2MoZSk9PT1kJiYodD1uZXcgdCh4LHcrXCJlbnRlclwiLG4sYyxlKSx0LnRhcmdldD11LHQucmVsYXRlZFRhcmdldD1KLEY9dCk7Sj1GO2lmKGsmJm4pYjp7dD1rO3g9bjt3PTA7Zm9yKHU9dDt1O3U9dmYodSkpdysrO3U9MDtmb3IoRj14O0Y7Rj12ZihGKSl1Kys7Zm9yKDswPHctdTspdD12Zih0KSx3LS07Zm9yKDswPHUtdzspeD1cbnZmKHgpLHUtLTtmb3IoO3ctLTspe2lmKHQ9PT14fHxudWxsIT09eCYmdD09PXguYWx0ZXJuYXRlKWJyZWFrIGI7dD12Zih0KTt4PXZmKHgpfXQ9bnVsbH1lbHNlIHQ9bnVsbDtudWxsIT09ayYmd2YoZyxoLGssdCwhMSk7bnVsbCE9PW4mJm51bGwhPT1KJiZ3ZihnLEosbix0LCEwKX19fWE6e2g9ZD91ZShkKTp3aW5kb3c7az1oLm5vZGVOYW1lJiZoLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWt8fFwiaW5wdXRcIj09PWsmJlwiZmlsZVwiPT09aC50eXBlKXZhciBuYT12ZTtlbHNlIGlmKG1lKGgpKWlmKHdlKW5hPUZlO2Vsc2V7bmE9RGU7dmFyIHhhPUNlfWVsc2Uoaz1oLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09ay50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09aC50eXBlfHxcInJhZGlvXCI9PT1oLnR5cGUpJiYobmE9RWUpO2lmKG5hJiYobmE9bmEoYSxkKSkpe25lKGcsbmEsYyxlKTticmVhayBhfXhhJiZ4YShhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKHhhPWguX3dyYXBwZXJTdGF0ZSkmJlxueGEuY29udHJvbGxlZCYmXCJudW1iZXJcIj09PWgudHlwZSYmY2IoaCxcIm51bWJlclwiLGgudmFsdWUpfXhhPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKHhhKXx8XCJ0cnVlXCI9PT14YS5jb250ZW50RWRpdGFibGUpUWU9eGEsUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciAkYTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgYmE9XCJvbkNvbXBvc2l0aW9uU3RhcnRcIjticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmJhPVwib25Db21wb3NpdGlvbkVuZFwiO1xuYnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpiYT1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifWJhPXZvaWQgMH1lbHNlIGllP2dlKGEsYykmJihiYT1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihiYT1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtiYSYmKGRlJiZcImtvXCIhPT1jLmxvY2FsZSYmKGllfHxcIm9uQ29tcG9zaXRpb25TdGFydFwiIT09YmE/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1iYSYmaWUmJigkYT1uZCgpKTooa2Q9ZSxsZD1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxpZT0hMCkpLHhhPW9lKGQsYmEpLDA8eGEubGVuZ3RoJiYoYmE9bmV3IExkKGJhLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6YmEsbGlzdGVuZXJzOnhhfSksJGE/YmEuZGF0YT0kYTooJGE9aGUoYyksbnVsbCE9PSRhJiYoYmEuZGF0YT0kYSkpKSk7aWYoJGE9Y2U/amUoYSxjKTprZShhLGMpKWQ9b2UoZCxcIm9uQmVmb3JlSW5wdXRcIiksXG4wPGQubGVuZ3RoJiYoZT1uZXcgTGQoXCJvbkJlZm9yZUlucHV0XCIsXCJiZWZvcmVpbnB1dFwiLG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmUsbGlzdGVuZXJzOmR9KSxlLmRhdGE9JGEpfXNlKGcsYil9KX1mdW5jdGlvbiB0ZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9S2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQodGYoYSxmLGUpKSxmPUtiKGEsYiksbnVsbCE9ZiYmZC5wdXNoKHRmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gdmYoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIHdmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9S2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQodGYoYyxrLGgpKSk6ZXx8KGs9S2IoYyxmKSxudWxsIT1rJiZnLnB1c2godGYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX12YXIgeGY9L1xcclxcbj8vZyx5Zj0vXFx1MDAwMHxcXHVGRkZEL2c7ZnVuY3Rpb24gemYoYSl7cmV0dXJuKFwic3RyaW5nXCI9PT10eXBlb2YgYT9hOlwiXCIrYSkucmVwbGFjZSh4ZixcIlxcblwiKS5yZXBsYWNlKHlmLFwiXCIpfWZ1bmN0aW9uIEFmKGEsYixjKXtiPXpmKGIpO2lmKHpmKGEpIT09YiYmYyl0aHJvdyBFcnJvcihwKDQyNSkpO31mdW5jdGlvbiBCZigpe31cbnZhciBDZj1udWxsLERmPW51bGw7ZnVuY3Rpb24gRWYoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9XG52YXIgRmY9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAsR2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwLEhmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBQcm9taXNlP1Byb21pc2U6dm9pZCAwLEpmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBxdWV1ZU1pY3JvdGFzaz9xdWV1ZU1pY3JvdGFzazpcInVuZGVmaW5lZFwiIT09dHlwZW9mIEhmP2Z1bmN0aW9uKGEpe3JldHVybiBIZi5yZXNvbHZlKG51bGwpLnRoZW4oYSkuY2F0Y2goSWYpfTpGZjtmdW5jdGlvbiBJZihhKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYTt9KX1cbmZ1bmN0aW9uIEtmKGEsYil7dmFyIGM9YixkPTA7ZG97dmFyIGU9Yy5uZXh0U2libGluZzthLnJlbW92ZUNoaWxkKGMpO2lmKGUmJjg9PT1lLm5vZGVUeXBlKWlmKGM9ZS5kYXRhLFwiLyRcIj09PWMpe2lmKDA9PT1kKXthLnJlbW92ZUNoaWxkKGUpO2JkKGIpO3JldHVybn1kLS19ZWxzZVwiJFwiIT09YyYmXCIkP1wiIT09YyYmXCIkIVwiIT09Y3x8ZCsrO2M9ZX13aGlsZShjKTtiZChiKX1mdW5jdGlvbiBMZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVhaztpZig4PT09Yil7Yj1hLmRhdGE7aWYoXCIkXCI9PT1ifHxcIiQhXCI9PT1ifHxcIiQ/XCI9PT1iKWJyZWFrO2lmKFwiLyRcIj09PWIpcmV0dXJuIG51bGx9fXJldHVybiBhfVxuZnVuY3Rpb24gTWYoYSl7YT1hLnByZXZpb3VzU2libGluZztmb3IodmFyIGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIiRcIj09PWN8fFwiJCFcIj09PWN8fFwiJD9cIj09PWMpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlXCIvJFwiPT09YyYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIE5mPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE9mPVwiX19yZWFjdEZpYmVyJFwiK05mLFBmPVwiX19yZWFjdFByb3BzJFwiK05mLHVmPVwiX19yZWFjdENvbnRhaW5lciRcIitOZixvZj1cIl9fcmVhY3RFdmVudHMkXCIrTmYsUWY9XCJfX3JlYWN0TGlzdGVuZXJzJFwiK05mLFJmPVwiX19yZWFjdEhhbmRsZXMkXCIrTmY7XG5mdW5jdGlvbiBXYyhhKXt2YXIgYj1hW09mXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1t1Zl18fGNbT2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9TWYoYSk7bnVsbCE9PWE7KXtpZihjPWFbT2ZdKXJldHVybiBjO2E9TWYoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVtPZl18fGFbdWZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IocCgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVtQZl18fG51bGx9dmFyIFNmPVtdLFRmPS0xO2Z1bmN0aW9uIFVmKGEpe3JldHVybntjdXJyZW50OmF9fVxuZnVuY3Rpb24gRShhKXswPlRmfHwoYS5jdXJyZW50PVNmW1RmXSxTZltUZl09bnVsbCxUZi0tKX1mdW5jdGlvbiBHKGEsYil7VGYrKztTZltUZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBWZj17fSxIPVVmKFZmKSxXZj1VZighMSksWGY9VmY7ZnVuY3Rpb24gWWYoYSxiKXt2YXIgYz1hLnR5cGUuY29udGV4dFR5cGVzO2lmKCFjKXJldHVybiBWZjt2YXIgZD1hLnN0YXRlTm9kZTtpZihkJiZkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9PT1iKXJldHVybiBkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0O3ZhciBlPXt9LGY7Zm9yKGYgaW4gYyllW2ZdPWJbZl07ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWIsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1lKTtyZXR1cm4gZX1cbmZ1bmN0aW9uIFpmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gJGYoKXtFKFdmKTtFKEgpfWZ1bmN0aW9uIGFnKGEsYixjKXtpZihILmN1cnJlbnQhPT1WZil0aHJvdyBFcnJvcihwKDE2OCkpO0coSCxiKTtHKFdmLGMpfWZ1bmN0aW9uIGJnKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtiPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYikpdGhyb3cgRXJyb3IocCgxMDgsUmEoYSl8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gQSh7fSxjLGQpfVxuZnVuY3Rpb24gY2coYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fFZmO1hmPUguY3VycmVudDtHKEgsYSk7RyhXZixXZi5jdXJyZW50KTtyZXR1cm4hMH1mdW5jdGlvbiBkZyhhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IocCgxNjkpKTtjPyhhPWJnKGEsYixYZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEUoV2YpLEUoSCksRyhILGEpKTpFKFdmKTtHKFdmLGMpfXZhciBlZz1udWxsLGZnPSExLGdnPSExO2Z1bmN0aW9uIGhnKGEpe251bGw9PT1lZz9lZz1bYV06ZWcucHVzaChhKX1mdW5jdGlvbiBpZyhhKXtmZz0hMDtoZyhhKX1cbmZ1bmN0aW9uIGpnKCl7aWYoIWdnJiZudWxsIT09ZWcpe2dnPSEwO3ZhciBhPTAsYj1DO3RyeXt2YXIgYz1lZztmb3IoQz0xO2E8Yy5sZW5ndGg7YSsrKXt2YXIgZD1jW2FdO2RvIGQ9ZCghMCk7d2hpbGUobnVsbCE9PWQpfWVnPW51bGw7Zmc9ITF9Y2F0Y2goZSl7dGhyb3cgbnVsbCE9PWVnJiYoZWc9ZWcuc2xpY2UoYSsxKSksYWMoZmMsamcpLGU7fWZpbmFsbHl7Qz1iLGdnPSExfX1yZXR1cm4gbnVsbH12YXIga2c9W10sbGc9MCxtZz1udWxsLG5nPTAsb2c9W10scGc9MCxxZz1udWxsLHJnPTEsc2c9XCJcIjtmdW5jdGlvbiB0ZyhhLGIpe2tnW2xnKytdPW5nO2tnW2xnKytdPW1nO21nPWE7bmc9Yn1cbmZ1bmN0aW9uIHVnKGEsYixjKXtvZ1twZysrXT1yZztvZ1twZysrXT1zZztvZ1twZysrXT1xZztxZz1hO3ZhciBkPXJnO2E9c2c7dmFyIGU9MzItb2MoZCktMTtkJj1+KDE8PGUpO2MrPTE7dmFyIGY9MzItb2MoYikrZTtpZigzMDxmKXt2YXIgZz1lLWUlNTtmPShkJigxPDxnKS0xKS50b1N0cmluZygzMik7ZD4+PWc7ZS09ZztyZz0xPDwzMi1vYyhiKStlfGM8PGV8ZDtzZz1mK2F9ZWxzZSByZz0xPDxmfGM8PGV8ZCxzZz1hfWZ1bmN0aW9uIHZnKGEpe251bGwhPT1hLnJldHVybiYmKHRnKGEsMSksdWcoYSwxLDApKX1mdW5jdGlvbiB3ZyhhKXtmb3IoO2E9PT1tZzspbWc9a2dbLS1sZ10sa2dbbGddPW51bGwsbmc9a2dbLS1sZ10sa2dbbGddPW51bGw7Zm9yKDthPT09cWc7KXFnPW9nWy0tcGddLG9nW3BnXT1udWxsLHNnPW9nWy0tcGddLG9nW3BnXT1udWxsLHJnPW9nWy0tcGddLG9nW3BnXT1udWxsfXZhciB4Zz1udWxsLHlnPW51bGwsST0hMSx6Zz1udWxsO1xuZnVuY3Rpb24gQWcoYSxiKXt2YXIgYz1CZyg1LG51bGwsbnVsbCwwKTtjLmVsZW1lbnRUeXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtiPWEuZGVsZXRpb25zO251bGw9PT1iPyhhLmRlbGV0aW9ucz1bY10sYS5mbGFnc3w9MTYpOmIucHVzaChjKX1cbmZ1bmN0aW9uIENnKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLHhnPWEseWc9TGYoYi5maXJzdENoaWxkKSwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLHhnPWEseWc9bnVsbCwhMCk6ITE7Y2FzZSAxMzpyZXR1cm4gYj04IT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGM9bnVsbCE9PXFnP3tpZDpyZyxvdmVyZmxvdzpzZ306bnVsbCxhLm1lbW9pemVkU3RhdGU9e2RlaHlkcmF0ZWQ6Yix0cmVlQ29udGV4dDpjLHJldHJ5TGFuZToxMDczNzQxODI0fSxjPUJnKDE4LG51bGwsbnVsbCwwKSxjLnN0YXRlTm9kZT1iLGMucmV0dXJuPWEsYS5jaGlsZD1jLHhnPWEseWc9XG5udWxsLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBEZyhhKXtyZXR1cm4gMCE9PShhLm1vZGUmMSkmJjA9PT0oYS5mbGFncyYxMjgpfWZ1bmN0aW9uIEVnKGEpe2lmKEkpe3ZhciBiPXlnO2lmKGIpe3ZhciBjPWI7aWYoIUNnKGEsYikpe2lmKERnKGEpKXRocm93IEVycm9yKHAoNDE4KSk7Yj1MZihjLm5leHRTaWJsaW5nKTt2YXIgZD14ZztiJiZDZyhhLGIpP0FnKGQsYyk6KGEuZmxhZ3M9YS5mbGFncyYtNDA5N3wyLEk9ITEseGc9YSl9fWVsc2V7aWYoRGcoYSkpdGhyb3cgRXJyb3IocCg0MTgpKTthLmZsYWdzPWEuZmxhZ3MmLTQwOTd8MjtJPSExO3hnPWF9fX1mdW5jdGlvbiBGZyhhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47eGc9YX1cbmZ1bmN0aW9uIEdnKGEpe2lmKGEhPT14ZylyZXR1cm4hMTtpZighSSlyZXR1cm4gRmcoYSksST0hMCwhMTt2YXIgYjsoYj0zIT09YS50YWcpJiYhKGI9NSE9PWEudGFnKSYmKGI9YS50eXBlLGI9XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFFZihhLnR5cGUsYS5tZW1vaXplZFByb3BzKSk7aWYoYiYmKGI9eWcpKXtpZihEZyhhKSl0aHJvdyBIZygpLEVycm9yKHAoNDE4KSk7Zm9yKDtiOylBZyhhLGIpLGI9TGYoYi5uZXh0U2libGluZyl9RmcoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcihwKDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiLyRcIj09PWMpe2lmKDA9PT1iKXt5Zz1MZihhLm5leHRTaWJsaW5nKTticmVhayBhfWItLX1lbHNlXCIkXCIhPT1jJiZcIiQhXCIhPT1jJiZcIiQ/XCIhPT1jfHxiKyt9YT1hLm5leHRTaWJsaW5nfXlnPVxubnVsbH19ZWxzZSB5Zz14Zz9MZihhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBIZygpe2Zvcih2YXIgYT15ZzthOylhPUxmKGEubmV4dFNpYmxpbmcpfWZ1bmN0aW9uIElnKCl7eWc9eGc9bnVsbDtJPSExfWZ1bmN0aW9uIEpnKGEpe251bGw9PT16Zz96Zz1bYV06emcucHVzaChhKX12YXIgS2c9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gTGcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1BKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIE1nPVVmKG51bGwpLE5nPW51bGwsT2c9bnVsbCxQZz1udWxsO2Z1bmN0aW9uIFFnKCl7UGc9T2c9Tmc9bnVsbH1mdW5jdGlvbiBSZyhhKXt2YXIgYj1NZy5jdXJyZW50O0UoTWcpO2EuX2N1cnJlbnRWYWx1ZT1ifVxuZnVuY3Rpb24gU2coYSxiLGMpe2Zvcig7bnVsbCE9PWE7KXt2YXIgZD1hLmFsdGVybmF0ZTsoYS5jaGlsZExhbmVzJmIpIT09Yj8oYS5jaGlsZExhbmVzfD1iLG51bGwhPT1kJiYoZC5jaGlsZExhbmVzfD1iKSk6bnVsbCE9PWQmJihkLmNoaWxkTGFuZXMmYikhPT1iJiYoZC5jaGlsZExhbmVzfD1iKTtpZihhPT09YylicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBUZyhhLGIpe05nPWE7UGc9T2c9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJigwIT09KGEubGFuZXMmYikmJihVZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBWZyhhKXt2YXIgYj1hLl9jdXJyZW50VmFsdWU7aWYoUGchPT1hKWlmKGE9e2NvbnRleHQ6YSxtZW1vaXplZFZhbHVlOmIsbmV4dDpudWxsfSxudWxsPT09T2cpe2lmKG51bGw9PT1OZyl0aHJvdyBFcnJvcihwKDMwOCkpO09nPWE7TmcuZGVwZW5kZW5jaWVzPXtsYW5lczowLGZpcnN0Q29udGV4dDphfX1lbHNlIE9nPU9nLm5leHQ9YTtyZXR1cm4gYn12YXIgV2c9bnVsbDtmdW5jdGlvbiBYZyhhKXtudWxsPT09V2c/V2c9W2FdOldnLnB1c2goYSl9ZnVuY3Rpb24gWWcoYSxiLGMsZCl7dmFyIGU9Yi5pbnRlcmxlYXZlZDtudWxsPT09ZT8oYy5uZXh0PWMsWGcoYikpOihjLm5leHQ9ZS5uZXh0LGUubmV4dD1jKTtiLmludGVybGVhdmVkPWM7cmV0dXJuIFpnKGEsZCl9XG5mdW5jdGlvbiBaZyhhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9dmFyICRnPSExO2Z1bmN0aW9uIGFoKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjB9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiBiaChhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6YS5maXJzdEJhc2VVcGRhdGUsbGFzdEJhc2VVcGRhdGU6YS5sYXN0QmFzZVVwZGF0ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiBjaChhLGIpe3JldHVybntldmVudFRpbWU6YSxsYW5lOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfX1cbmZ1bmN0aW9uIGRoKGEsYixjKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2Q9ZC5zaGFyZWQ7aWYoMCE9PShLJjIpKXt2YXIgZT1kLnBlbmRpbmc7bnVsbD09PWU/Yi5uZXh0PWI6KGIubmV4dD1lLm5leHQsZS5uZXh0PWIpO2QucGVuZGluZz1iO3JldHVybiBaZyhhLGMpfWU9ZC5pbnRlcmxlYXZlZDtudWxsPT09ZT8oYi5uZXh0PWIsWGcoZCkpOihiLm5leHQ9ZS5uZXh0LGUubmV4dD1iKTtkLmludGVybGVhdmVkPWI7cmV0dXJuIFpnKGEsYyl9ZnVuY3Rpb24gZWgoYSxiLGMpe2I9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YiYmKGI9Yi5zaGFyZWQsMCE9PShjJjQxOTQyNDApKSl7dmFyIGQ9Yi5sYW5lcztkJj1hLnBlbmRpbmdMYW5lcztjfD1kO2IubGFuZXM9YztDYyhhLGMpfX1cbmZ1bmN0aW9uIGZoKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZSxkPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1kJiYoZD1kLnVwZGF0ZVF1ZXVlLGM9PT1kKSl7dmFyIGU9bnVsbCxmPW51bGw7Yz1jLmZpcnN0QmFzZVVwZGF0ZTtpZihudWxsIT09Yyl7ZG97dmFyIGc9e2V2ZW50VGltZTpjLmV2ZW50VGltZSxsYW5lOmMubGFuZSx0YWc6Yy50YWcscGF5bG9hZDpjLnBheWxvYWQsY2FsbGJhY2s6Yy5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT1mP2U9Zj1nOmY9Zi5uZXh0PWc7Yz1jLm5leHR9d2hpbGUobnVsbCE9PWMpO251bGw9PT1mP2U9Zj1iOmY9Zi5uZXh0PWJ9ZWxzZSBlPWY9YjtjPXtiYXNlU3RhdGU6ZC5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUsbGFzdEJhc2VVcGRhdGU6ZixzaGFyZWQ6ZC5zaGFyZWQsZWZmZWN0czpkLmVmZmVjdHN9O2EudXBkYXRlUXVldWU9YztyZXR1cm59YT1jLmxhc3RCYXNlVXBkYXRlO251bGw9PT1hP2MuZmlyc3RCYXNlVXBkYXRlPWI6YS5uZXh0PVxuYjtjLmxhc3RCYXNlVXBkYXRlPWJ9XG5mdW5jdGlvbiBnaChhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlOyRnPSExO3ZhciBmPWUuZmlyc3RCYXNlVXBkYXRlLGc9ZS5sYXN0QmFzZVVwZGF0ZSxoPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWgpe2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgaz1oLGw9ay5uZXh0O2submV4dD1udWxsO251bGw9PT1nP2Y9bDpnLm5leHQ9bDtnPWs7dmFyIG09YS5hbHRlcm5hdGU7bnVsbCE9PW0mJihtPW0udXBkYXRlUXVldWUsaD1tLmxhc3RCYXNlVXBkYXRlLGghPT1nJiYobnVsbD09PWg/bS5maXJzdEJhc2VVcGRhdGU9bDpoLm5leHQ9bCxtLmxhc3RCYXNlVXBkYXRlPWspKX1pZihudWxsIT09Zil7dmFyIHE9ZS5iYXNlU3RhdGU7Zz0wO209bD1rPW51bGw7aD1mO2Rve3ZhciByPWgubGFuZSx5PWguZXZlbnRUaW1lO2lmKChkJnIpPT09cil7bnVsbCE9PW0mJihtPW0ubmV4dD17ZXZlbnRUaW1lOnksbGFuZTowLHRhZzpoLnRhZyxwYXlsb2FkOmgucGF5bG9hZCxjYWxsYmFjazpoLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIG49YSx0PWg7cj1iO3k9Yztzd2l0Y2godC50YWcpe2Nhc2UgMTpuPXQucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2Ygbil7cT1uLmNhbGwoeSxxLHIpO2JyZWFrIGF9cT1uO2JyZWFrIGE7Y2FzZSAzOm4uZmxhZ3M9bi5mbGFncyYtNjU1Mzd8MTI4O2Nhc2UgMDpuPXQucGF5bG9hZDtyPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBuP24uY2FsbCh5LHEscik6bjtpZihudWxsPT09cnx8dm9pZCAwPT09cilicmVhayBhO3E9QSh7fSxxLHIpO2JyZWFrIGE7Y2FzZSAyOiRnPSEwfX1udWxsIT09aC5jYWxsYmFjayYmMCE9PWgubGFuZSYmKGEuZmxhZ3N8PTY0LHI9ZS5lZmZlY3RzLG51bGw9PT1yP2UuZWZmZWN0cz1baF06ci5wdXNoKGgpKX1lbHNlIHk9e2V2ZW50VGltZTp5LGxhbmU6cix0YWc6aC50YWcscGF5bG9hZDpoLnBheWxvYWQsY2FsbGJhY2s6aC5jYWxsYmFjayxuZXh0Om51bGx9LG51bGw9PT1tPyhsPW09eSxrPXEpOm09bS5uZXh0PXksZ3w9cjtcbmg9aC5uZXh0O2lmKG51bGw9PT1oKWlmKGg9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09aClicmVhaztlbHNlIHI9aCxoPXIubmV4dCxyLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPXIsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1tJiYoaz1xKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1tO2I9ZS5zaGFyZWQuaW50ZXJsZWF2ZWQ7aWYobnVsbCE9PWIpe2U9YjtkbyBnfD1lLmxhbmUsZT1lLm5leHQ7d2hpbGUoZSE9PWIpfWVsc2UgbnVsbD09PWYmJihlLnNoYXJlZC5sYW5lcz0wKTtoaHw9ZzthLmxhbmVzPWc7YS5tZW1vaXplZFN0YXRlPXF9fVxuZnVuY3Rpb24gaWgoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHAoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgamg9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7ZnVuY3Rpb24ga2goYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOkEoe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5sYW5lcyYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIG5oPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbHMpP1ZiKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUwoKSxlPWxoKGEpLGY9Y2goZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7Yj1kaChhLGYsZSk7bnVsbCE9PWImJihtaChiLGEsZSxkKSxlaChiLGEsZSkpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUwoKSxlPWxoKGEpLGY9Y2goZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtiPWRoKGEsZixlKTtudWxsIT09YiYmKG1oKGIsYSxlLGQpLGVoKGIsYSxlKSl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGM9TCgpLGQ9XG5saChhKSxlPWNoKGMsZCk7ZS50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7Yj1kaChhLGUsZCk7bnVsbCE9PWImJihtaChiLGEsZCxjKSxlaChiLGEsZCkpfX07ZnVuY3Rpb24gb2goYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hSWUoYyxkKXx8IUllKGUsZik6ITB9XG5mdW5jdGlvbiBwaChhLGIsYyl7dmFyIGQ9ITEsZT1WZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1WZyhmKTooZT1aZihiKT9YZjpILmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9ZZihhLGUpOlZmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9bmg7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFscz1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBxaChhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmbmguZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiByaChhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPWpoO2FoKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9VmcoZik6KGY9WmYoYik/WGY6SC5jdXJyZW50LGUuY29udGV4dD1ZZihhLGYpKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoa2goYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8KGI9ZS5zdGF0ZSxcblwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmbmguZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksZ2goYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5mbGFnc3w9NDE5NDMwOCl9XG5mdW5jdGlvbiBzaChhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHAoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IocCgxNDcsYSkpO3ZhciBlPWQsZj1cIlwiK2E7aWYobnVsbCE9PWImJm51bGwhPT1iLnJlZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGIucmVmJiZiLnJlZi5fc3RyaW5nUmVmPT09ZilyZXR1cm4gYi5yZWY7Yj1mdW5jdGlvbihhKXt2YXIgYj1lLnJlZnM7Yj09PWpoJiYoYj1lLnJlZnM9e30pO251bGw9PT1hP2RlbGV0ZSBiW2ZdOmJbZl09YX07Yi5fc3RyaW5nUmVmPWY7cmV0dXJuIGJ9aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBhKXRocm93IEVycm9yKHAoMjg0KSk7aWYoIWMuX293bmVyKXRocm93IEVycm9yKHAoMjkwLGEpKTt9cmV0dXJuIGF9XG5mdW5jdGlvbiB0aChhLGIpe2E9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpO3Rocm93IEVycm9yKHAoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWE/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhiKS5qb2luKFwiLCBcIikrXCJ9XCI6YSkpO31mdW5jdGlvbiB1aChhKXt2YXIgYj1hLl9pbml0O3JldHVybiBiKGEuX3BheWxvYWQpfVxuZnVuY3Rpb24gdmgoYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIuZGVsZXRpb25zO251bGw9PT1kPyhiLmRlbGV0aW9ucz1bY10sYi5mbGFnc3w9MTYpOmQucHVzaChjKX19ZnVuY3Rpb24gYyhjLGQpe2lmKCFhKXJldHVybiBudWxsO2Zvcig7bnVsbCE9PWQ7KWIoYyxkKSxkPWQuc2libGluZztyZXR1cm4gbnVsbH1mdW5jdGlvbiBkKGEsYil7Zm9yKGE9bmV3IE1hcDtudWxsIT09YjspbnVsbCE9PWIua2V5P2Euc2V0KGIua2V5LGIpOmEuc2V0KGIuaW5kZXgsYiksYj1iLnNpYmxpbmc7cmV0dXJuIGF9ZnVuY3Rpb24gZShhLGIpe2E9d2goYSxiKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBiLmZsYWdzfD0xMDQ4NTc2LGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5mbGFnc3w9MixjKTpkO2IuZmxhZ3N8PTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZcbm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3N8PTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj14aChjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe3ZhciBmPWMudHlwZTtpZihmPT09eWEpcmV0dXJuIG0oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxjLmtleSk7aWYobnVsbCE9PWImJihiLmVsZW1lbnRUeXBlPT09Znx8XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi4kJHR5cGVvZj09PUhhJiZ1aChmKT09PWIudHlwZSkpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPXNoKGEsYixjKSxkLnJldHVybj1hLGQ7ZD15aChjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1zaChhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fFxuYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPXpoKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBtKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1BaChjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYiYmXCJcIiE9PWJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj14aChcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSB2YTpyZXR1cm4gYz15aChiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxcbmMucmVmPXNoKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB3YTpyZXR1cm4gYj16aChiLGEubW9kZSxjKSxiLnJldHVybj1hLGI7Y2FzZSBIYTp2YXIgZD1iLl9pbml0O3JldHVybiBxKGEsZChiLl9wYXlsb2FkKSxjKX1pZihlYihiKXx8S2EoYikpcmV0dXJuIGI9QWgoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7dGgoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiByKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjJiZcIlwiIT09Y3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSB2YTpyZXR1cm4gYy5rZXk9PT1lP2soYSxiLGMsZCk6bnVsbDtjYXNlIHdhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsO2Nhc2UgSGE6cmV0dXJuIGU9Yy5faW5pdCxyKGEsXG5iLGUoYy5fcGF5bG9hZCksZCl9aWYoZWIoYyl8fEthKGMpKXJldHVybiBudWxsIT09ZT9udWxsOm0oYSxiLGMsZCxudWxsKTt0aChhLGMpfXJldHVybiBudWxsfWZ1bmN0aW9uIHkoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGQmJlwiXCIhPT1kfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIHZhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxrKGIsYSxkLGUpO2Nhc2Ugd2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGwoYixhLGQsZSk7Y2FzZSBIYTp2YXIgZj1kLl9pbml0O3JldHVybiB5KGEsYixjLGYoZC5fcGF5bG9hZCksZSl9aWYoZWIoZCl8fEthKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLG0oYixhLGQsZSxudWxsKTt0aChiLGQpfXJldHVybiBudWxsfVxuZnVuY3Rpb24gbihlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCxtPW51bGwsdT1nLHc9Zz0wLHg9bnVsbDtudWxsIT09dSYmdzxoLmxlbmd0aDt3Kyspe3UuaW5kZXg+dz8oeD11LHU9bnVsbCk6eD11LnNpYmxpbmc7dmFyIG49cihlLHUsaFt3XSxrKTtpZihudWxsPT09bil7bnVsbD09PXUmJih1PXgpO2JyZWFrfWEmJnUmJm51bGw9PT1uLmFsdGVybmF0ZSYmYihlLHUpO2c9ZihuLGcsdyk7bnVsbD09PW0/bD1uOm0uc2libGluZz1uO209bjt1PXh9aWYodz09PWgubGVuZ3RoKXJldHVybiBjKGUsdSksSSYmdGcoZSx3KSxsO2lmKG51bGw9PT11KXtmb3IoO3c8aC5sZW5ndGg7dysrKXU9cShlLGhbd10sayksbnVsbCE9PXUmJihnPWYodSxnLHcpLG51bGw9PT1tP2w9dTptLnNpYmxpbmc9dSxtPXUpO0kmJnRnKGUsdyk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3c8aC5sZW5ndGg7dysrKXg9eSh1LGUsdyxoW3ddLGspLG51bGwhPT14JiYoYSYmbnVsbCE9PXguYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09XG54LmtleT93Ongua2V5KSxnPWYoeCxnLHcpLG51bGw9PT1tP2w9eDptLnNpYmxpbmc9eCxtPXgpO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7SSYmdGcoZSx3KTtyZXR1cm4gbH1mdW5jdGlvbiB0KGUsZyxoLGspe3ZhciBsPUthKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHAoMTUwKSk7aD1sLmNhbGwoaCk7aWYobnVsbD09aCl0aHJvdyBFcnJvcihwKDE1MSkpO2Zvcih2YXIgdT1sPW51bGwsbT1nLHc9Zz0wLHg9bnVsbCxuPWgubmV4dCgpO251bGwhPT1tJiYhbi5kb25lO3crKyxuPWgubmV4dCgpKXttLmluZGV4Pnc/KHg9bSxtPW51bGwpOng9bS5zaWJsaW5nO3ZhciB0PXIoZSxtLG4udmFsdWUsayk7aWYobnVsbD09PXQpe251bGw9PT1tJiYobT14KTticmVha31hJiZtJiZudWxsPT09dC5hbHRlcm5hdGUmJmIoZSxtKTtnPWYodCxnLHcpO251bGw9PT11P2w9dDp1LnNpYmxpbmc9dDt1PXQ7bT14fWlmKG4uZG9uZSlyZXR1cm4gYyhlLFxubSksSSYmdGcoZSx3KSxsO2lmKG51bGw9PT1tKXtmb3IoOyFuLmRvbmU7dysrLG49aC5uZXh0KCkpbj1xKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcsdyksbnVsbD09PXU/bD1uOnUuc2libGluZz1uLHU9bik7SSYmdGcoZSx3KTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7IW4uZG9uZTt3Kyssbj1oLm5leHQoKSluPXkobSxlLHcsbi52YWx1ZSxrKSxudWxsIT09biYmKGEmJm51bGwhPT1uLmFsdGVybmF0ZSYmbS5kZWxldGUobnVsbD09PW4ua2V5P3c6bi5rZXkpLGc9ZihuLGcsdyksbnVsbD09PXU/bD1uOnUuc2libGluZz1uLHU9bik7YSYmbS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtJJiZ0ZyhlLHcpO3JldHVybiBsfWZ1bmN0aW9uIEooYSxkLGYsaCl7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09eWEmJm51bGw9PT1mLmtleSYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zil7c3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgdmE6YTp7Zm9yKHZhciBrPVxuZi5rZXksbD1kO251bGwhPT1sOyl7aWYobC5rZXk9PT1rKXtrPWYudHlwZTtpZihrPT09eWEpe2lmKDc9PT1sLnRhZyl7YyhhLGwuc2libGluZyk7ZD1lKGwsZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19ZWxzZSBpZihsLmVsZW1lbnRUeXBlPT09a3x8XCJvYmplY3RcIj09PXR5cGVvZiBrJiZudWxsIT09ayYmay4kJHR5cGVvZj09PUhhJiZ1aChrKT09PWwudHlwZSl7YyhhLGwuc2libGluZyk7ZD1lKGwsZi5wcm9wcyk7ZC5yZWY9c2goYSxsLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YyhhLGwpO2JyZWFrfWVsc2UgYihhLGwpO2w9bC5zaWJsaW5nfWYudHlwZT09PXlhPyhkPUFoKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD15aChmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1zaChhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2Ugd2E6YTp7Zm9yKGw9Zi5rZXk7bnVsbCE9PVxuZDspe2lmKGQua2V5PT09bClpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD16aChmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKTtjYXNlIEhhOnJldHVybiBsPWYuX2luaXQsSihhLGQsbChmLl9wYXlsb2FkKSxoKX1pZihlYihmKSlyZXR1cm4gbihhLGQsZixoKTtpZihLYShmKSlyZXR1cm4gdChhLGQsZixoKTt0aChhLGYpfXJldHVyblwic3RyaW5nXCI9PT10eXBlb2YgZiYmXCJcIiE9PWZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZj8oZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOlxuKGMoYSxkKSxkPXhoKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpKTpjKGEsZCl9cmV0dXJuIEp9dmFyIEJoPXZoKCEwKSxDaD12aCghMSksRGg9e30sRWg9VWYoRGgpLEZoPVVmKERoKSxHaD1VZihEaCk7ZnVuY3Rpb24gSGgoYSl7aWYoYT09PURoKXRocm93IEVycm9yKHAoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gSWgoYSxiKXtHKEdoLGIpO0coRmgsYSk7RyhFaCxEaCk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTpsYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bGIoYixhKX1FKEVoKTtHKEVoLGIpfWZ1bmN0aW9uIEpoKCl7RShFaCk7RShGaCk7RShHaCl9XG5mdW5jdGlvbiBLaChhKXtIaChHaC5jdXJyZW50KTt2YXIgYj1IaChFaC5jdXJyZW50KTt2YXIgYz1sYihiLGEudHlwZSk7YiE9PWMmJihHKEZoLGEpLEcoRWgsYykpfWZ1bmN0aW9uIExoKGEpe0ZoLmN1cnJlbnQ9PT1hJiYoRShFaCksRShGaCkpfXZhciBNPVVmKDApO1xuZnVuY3Rpb24gTWgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8XCIkP1wiPT09Yy5kYXRhfHxcIiQhXCI9PT1jLmRhdGEpKXJldHVybiBifWVsc2UgaWYoMTk9PT1iLnRhZyYmdm9pZCAwIT09Yi5tZW1vaXplZFByb3BzLnJldmVhbE9yZGVyKXtpZigwIT09KGIuZmxhZ3MmMTI4KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIE5oPVtdO1xuZnVuY3Rpb24gT2goKXtmb3IodmFyIGE9MDthPE5oLmxlbmd0aDthKyspTmhbYV0uX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9bnVsbDtOaC5sZW5ndGg9MH12YXIgUGg9dWEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixRaD11YS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxSaD0wLE49bnVsbCxPPW51bGwsUD1udWxsLFNoPSExLFRoPSExLFVoPTAsVmg9MDtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IocCgzMjEpKTt9ZnVuY3Rpb24gV2goYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighSGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFhoKGEsYixjLGQsZSxmKXtSaD1mO049YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5sYW5lcz0wO1BoLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/WWg6Wmg7YT1jKGQsZSk7aWYoVGgpe2Y9MDtkb3tUaD0hMTtVaD0wO2lmKDI1PD1mKXRocm93IEVycm9yKHAoMzAxKSk7Zis9MTtQPU89bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7UGguY3VycmVudD0kaDthPWMoZCxlKX13aGlsZShUaCl9UGguY3VycmVudD1haTtiPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O1JoPTA7UD1PPU49bnVsbDtTaD0hMTtpZihiKXRocm93IEVycm9yKHAoMzAwKSk7cmV0dXJuIGF9ZnVuY3Rpb24gYmkoKXt2YXIgYT0wIT09VWg7VWg9MDtyZXR1cm4gYX1cbmZ1bmN0aW9uIGNpKCl7dmFyIGE9e21lbW9pemVkU3RhdGU6bnVsbCxiYXNlU3RhdGU6bnVsbCxiYXNlUXVldWU6bnVsbCxxdWV1ZTpudWxsLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hO3JldHVybiBQfWZ1bmN0aW9uIGRpKCl7aWYobnVsbD09PU8pe3ZhciBhPU4uYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPU8ubmV4dDt2YXIgYj1udWxsPT09UD9OLm1lbW9pemVkU3RhdGU6UC5uZXh0O2lmKG51bGwhPT1iKVA9YixPPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcihwKDMxMCkpO089YTthPXttZW1vaXplZFN0YXRlOk8ubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Ty5iYXNlU3RhdGUsYmFzZVF1ZXVlOk8uYmFzZVF1ZXVlLHF1ZXVlOk8ucXVldWUsbmV4dDpudWxsfTtudWxsPT09UD9OLm1lbW9pemVkU3RhdGU9UD1hOlA9UC5uZXh0PWF9cmV0dXJuIFB9XG5mdW5jdGlvbiBlaShhLGIpe3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yn1cbmZ1bmN0aW9uIGZpKGEpe3ZhciBiPWRpKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHAoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9TyxlPWQuYmFzZVF1ZXVlLGY9Yy5wZW5kaW5nO2lmKG51bGwhPT1mKXtpZihudWxsIT09ZSl7dmFyIGc9ZS5uZXh0O2UubmV4dD1mLm5leHQ7Zi5uZXh0PWd9ZC5iYXNlUXVldWU9ZT1mO2MucGVuZGluZz1udWxsfWlmKG51bGwhPT1lKXtmPWUubmV4dDtkPWQuYmFzZVN0YXRlO3ZhciBoPWc9bnVsbCxrPW51bGwsbD1mO2Rve3ZhciBtPWwubGFuZTtpZigoUmgmbSk9PT1tKW51bGwhPT1rJiYoaz1rLm5leHQ9e2xhbmU6MCxhY3Rpb246bC5hY3Rpb24saGFzRWFnZXJTdGF0ZTpsLmhhc0VhZ2VyU3RhdGUsZWFnZXJTdGF0ZTpsLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1sLmhhc0VhZ2VyU3RhdGU/bC5lYWdlclN0YXRlOmEoZCxsLmFjdGlvbik7ZWxzZXt2YXIgcT17bGFuZTptLGFjdGlvbjpsLmFjdGlvbixoYXNFYWdlclN0YXRlOmwuaGFzRWFnZXJTdGF0ZSxcbmVhZ2VyU3RhdGU6bC5lYWdlclN0YXRlLG5leHQ6bnVsbH07bnVsbD09PWs/KGg9az1xLGc9ZCk6az1rLm5leHQ9cTtOLmxhbmVzfD1tO2hofD1tfWw9bC5uZXh0fXdoaWxlKG51bGwhPT1sJiZsIT09Zik7bnVsbD09PWs/Zz1kOmsubmV4dD1oO0hlKGQsYi5tZW1vaXplZFN0YXRlKXx8KFVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZDtiLmJhc2VTdGF0ZT1nO2IuYmFzZVF1ZXVlPWs7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1kfWE9Yy5pbnRlcmxlYXZlZDtpZihudWxsIT09YSl7ZT1hO2RvIGY9ZS5sYW5lLE4ubGFuZXN8PWYsaGh8PWYsZT1lLm5leHQ7d2hpbGUoZSE9PWEpfWVsc2UgbnVsbD09PWUmJihjLmxhbmVzPTApO3JldHVybltiLm1lbW9pemVkU3RhdGUsYy5kaXNwYXRjaF19XG5mdW5jdGlvbiBnaShhKXt2YXIgYj1kaSgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcihwKDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPWMuZGlzcGF0Y2gsZT1jLnBlbmRpbmcsZj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWUpe2MucGVuZGluZz1udWxsO3ZhciBnPWU9ZS5uZXh0O2RvIGY9YShmLGcuYWN0aW9uKSxnPWcubmV4dDt3aGlsZShnIT09ZSk7SGUoZixiLm1lbW9pemVkU3RhdGUpfHwoVWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1mdW5jdGlvbiBoaSgpe31cbmZ1bmN0aW9uIGlpKGEsYil7dmFyIGM9TixkPWRpKCksZT1iKCksZj0hSGUoZC5tZW1vaXplZFN0YXRlLGUpO2YmJihkLm1lbW9pemVkU3RhdGU9ZSxVZz0hMCk7ZD1kLnF1ZXVlO2ppKGtpLmJpbmQobnVsbCxjLGQsYSksW2FdKTtpZihkLmdldFNuYXBzaG90IT09Ynx8Znx8bnVsbCE9PVAmJlAubWVtb2l6ZWRTdGF0ZS50YWcmMSl7Yy5mbGFnc3w9MjA0ODtsaSg5LG1pLmJpbmQobnVsbCxjLGQsZSxiKSx2b2lkIDAsbnVsbCk7aWYobnVsbD09PVIpdGhyb3cgRXJyb3IocCgzNDkpKTswIT09KFJoJjMwKXx8bmkoYyxiLGUpfXJldHVybiBlfWZ1bmN0aW9uIG5pKGEsYixjKXthLmZsYWdzfD0xNjM4NDthPXtnZXRTbmFwc2hvdDpiLHZhbHVlOmN9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsLHN0b3JlczpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5zdG9yZXM9W2FdKTooYz1iLnN0b3JlcyxudWxsPT09Yz9iLnN0b3Jlcz1bYV06Yy5wdXNoKGEpKX1cbmZ1bmN0aW9uIG1pKGEsYixjLGQpe2IudmFsdWU9YztiLmdldFNuYXBzaG90PWQ7b2koYikmJnBpKGEpfWZ1bmN0aW9uIGtpKGEsYixjKXtyZXR1cm4gYyhmdW5jdGlvbigpe29pKGIpJiZwaShhKX0pfWZ1bmN0aW9uIG9pKGEpe3ZhciBiPWEuZ2V0U25hcHNob3Q7YT1hLnZhbHVlO3RyeXt2YXIgYz1iKCk7cmV0dXJuIUhlKGEsYyl9Y2F0Y2goZCl7cmV0dXJuITB9fWZ1bmN0aW9uIHBpKGEpe3ZhciBiPVpnKGEsMSk7bnVsbCE9PWImJm1oKGIsYSwxLC0xKX1cbmZ1bmN0aW9uIHFpKGEpe3ZhciBiPWNpKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT17cGVuZGluZzpudWxsLGludGVybGVhdmVkOm51bGwsbGFuZXM6MCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6ZWksbGFzdFJlbmRlcmVkU3RhdGU6YX07Yi5xdWV1ZT1hO2E9YS5kaXNwYXRjaD1yaS5iaW5kKG51bGwsTixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gbGkoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsLHN0b3JlczpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIHNpKCl7cmV0dXJuIGRpKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiB0aShhLGIsYyxkKXt2YXIgZT1jaSgpO04uZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPWxpKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9XG5mdW5jdGlvbiB1aShhLGIsYyxkKXt2YXIgZT1kaSgpO2Q9dm9pZCAwPT09ZD9udWxsOmQ7dmFyIGY9dm9pZCAwO2lmKG51bGwhPT1PKXt2YXIgZz1PLm1lbW9pemVkU3RhdGU7Zj1nLmRlc3Ryb3k7aWYobnVsbCE9PWQmJldoKGQsZy5kZXBzKSl7ZS5tZW1vaXplZFN0YXRlPWxpKGIsYyxmLGQpO3JldHVybn19Ti5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9bGkoMXxiLGMsZixkKX1mdW5jdGlvbiB2aShhLGIpe3JldHVybiB0aSg4MzkwNjU2LDgsYSxiKX1mdW5jdGlvbiBqaShhLGIpe3JldHVybiB1aSgyMDQ4LDgsYSxiKX1mdW5jdGlvbiB3aShhLGIpe3JldHVybiB1aSg0LDIsYSxiKX1mdW5jdGlvbiB4aShhLGIpe3JldHVybiB1aSg0LDQsYSxiKX1cbmZ1bmN0aW9uIHlpKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gemkoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiB1aSg0LDQseWkuYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gQWkoKXt9ZnVuY3Rpb24gQmkoYSxiKXt2YXIgYz1kaSgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmV2goYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBDaShhLGIpe3ZhciBjPWRpKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZXaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBEaShhLGIsYyl7aWYoMD09PShSaCYyMSkpcmV0dXJuIGEuYmFzZVN0YXRlJiYoYS5iYXNlU3RhdGU9ITEsVWc9ITApLGEubWVtb2l6ZWRTdGF0ZT1jO0hlKGMsYil8fChjPXljKCksTi5sYW5lc3w9YyxoaHw9YyxhLmJhc2VTdGF0ZT0hMCk7cmV0dXJuIGJ9ZnVuY3Rpb24gRWkoYSxiKXt2YXIgYz1DO0M9MCE9PWMmJjQ+Yz9jOjQ7YSghMCk7dmFyIGQ9UWgudHJhbnNpdGlvbjtRaC50cmFuc2l0aW9uPXt9O3RyeXthKCExKSxiKCl9ZmluYWxseXtDPWMsUWgudHJhbnNpdGlvbj1kfX1mdW5jdGlvbiBGaSgpe3JldHVybiBkaSgpLm1lbW9pemVkU3RhdGV9XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9bGgoYSk7Yz17bGFuZTpkLGFjdGlvbjpjLGhhc0VhZ2VyU3RhdGU6ITEsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07aWYoSGkoYSkpSWkoYixjKTtlbHNlIGlmKGM9WWcoYSxiLGMsZCksbnVsbCE9PWMpe3ZhciBlPUwoKTttaChjLGEsZCxlKTtKaShjLGIsZCl9fVxuZnVuY3Rpb24gcmkoYSxiLGMpe3ZhciBkPWxoKGEpLGU9e2xhbmU6ZCxhY3Rpb246YyxoYXNFYWdlclN0YXRlOiExLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O2lmKEhpKGEpKUlpKGIsZSk7ZWxzZXt2YXIgZj1hLmFsdGVybmF0ZTtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1mfHwwPT09Zi5sYW5lcykmJihmPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZikpdHJ5e3ZhciBnPWIubGFzdFJlbmRlcmVkU3RhdGUsaD1mKGcsYyk7ZS5oYXNFYWdlclN0YXRlPSEwO2UuZWFnZXJTdGF0ZT1oO2lmKEhlKGgsZykpe3ZhciBrPWIuaW50ZXJsZWF2ZWQ7bnVsbD09PWs/KGUubmV4dD1lLFhnKGIpKTooZS5uZXh0PWsubmV4dCxrLm5leHQ9ZSk7Yi5pbnRlcmxlYXZlZD1lO3JldHVybn19Y2F0Y2gobCl7fWZpbmFsbHl7fWM9WWcoYSxiLGUsZCk7bnVsbCE9PWMmJihlPUwoKSxtaChjLGEsZCxlKSxKaShjLGIsZCkpfX1cbmZ1bmN0aW9uIEhpKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO3JldHVybiBhPT09Tnx8bnVsbCE9PWImJmI9PT1OfWZ1bmN0aW9uIElpKGEsYil7VGg9U2g9ITA7dmFyIGM9YS5wZW5kaW5nO251bGw9PT1jP2IubmV4dD1iOihiLm5leHQ9Yy5uZXh0LGMubmV4dD1iKTthLnBlbmRpbmc9Yn1mdW5jdGlvbiBKaShhLGIsYyl7aWYoMCE9PShjJjQxOTQyNDApKXt2YXIgZD1iLmxhbmVzO2QmPWEucGVuZGluZ0xhbmVzO2N8PWQ7Yi5sYW5lcz1jO0NjKGEsYyl9fVxudmFyIGFpPXtyZWFkQ29udGV4dDpWZyx1c2VDYWxsYmFjazpRLHVzZUNvbnRleHQ6USx1c2VFZmZlY3Q6USx1c2VJbXBlcmF0aXZlSGFuZGxlOlEsdXNlSW5zZXJ0aW9uRWZmZWN0OlEsdXNlTGF5b3V0RWZmZWN0OlEsdXNlTWVtbzpRLHVzZVJlZHVjZXI6USx1c2VSZWY6USx1c2VTdGF0ZTpRLHVzZURlYnVnVmFsdWU6USx1c2VEZWZlcnJlZFZhbHVlOlEsdXNlVHJhbnNpdGlvbjpRLHVzZU11dGFibGVTb3VyY2U6USx1c2VTeW5jRXh0ZXJuYWxTdG9yZTpRLHVzZUlkOlEsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxZaD17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtjaSgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OlZnLHVzZUVmZmVjdDp2aSx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gdGkoNDE5NDMwOCxcbjQseWkuYmluZChudWxsLGIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiB0aSg0MTk0MzA4LDQsYSxiKX0sdXNlSW5zZXJ0aW9uRWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIHRpKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9Y2koKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX0sdXNlUmVkdWNlcjpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9Y2koKTtiPXZvaWQgMCE9PWM/YyhiKTpiO2QubWVtb2l6ZWRTdGF0ZT1kLmJhc2VTdGF0ZT1iO2E9e3BlbmRpbmc6bnVsbCxpbnRlcmxlYXZlZDpudWxsLGxhbmVzOjAsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07ZC5xdWV1ZT1hO2E9YS5kaXNwYXRjaD1HaS5iaW5kKG51bGwsTixhKTtyZXR1cm5bZC5tZW1vaXplZFN0YXRlLGFdfSx1c2VSZWY6ZnVuY3Rpb24oYSl7dmFyIGI9XG5jaSgpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpxaSx1c2VEZWJ1Z1ZhbHVlOkFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7cmV0dXJuIGNpKCkubWVtb2l6ZWRTdGF0ZT1hfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9cWkoITEpLGI9YVswXTthPUVpLmJpbmQobnVsbCxhWzFdKTtjaSgpLm1lbW9pemVkU3RhdGU9YTtyZXR1cm5bYixhXX0sdXNlTXV0YWJsZVNvdXJjZTpmdW5jdGlvbigpe30sdXNlU3luY0V4dGVybmFsU3RvcmU6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPU4sZT1jaSgpO2lmKEkpe2lmKHZvaWQgMD09PWMpdGhyb3cgRXJyb3IocCg0MDcpKTtjPWMoKX1lbHNle2M9YigpO2lmKG51bGw9PT1SKXRocm93IEVycm9yKHAoMzQ5KSk7MCE9PShSaCYzMCl8fG5pKGQsYixjKX1lLm1lbW9pemVkU3RhdGU9Yzt2YXIgZj17dmFsdWU6YyxnZXRTbmFwc2hvdDpifTtlLnF1ZXVlPWY7dmkoa2kuYmluZChudWxsLGQsXG5mLGEpLFthXSk7ZC5mbGFnc3w9MjA0ODtsaSg5LG1pLmJpbmQobnVsbCxkLGYsYyxiKSx2b2lkIDAsbnVsbCk7cmV0dXJuIGN9LHVzZUlkOmZ1bmN0aW9uKCl7dmFyIGE9Y2koKSxiPVIuaWRlbnRpZmllclByZWZpeDtpZihJKXt2YXIgYz1zZzt2YXIgZD1yZztjPShkJn4oMTw8MzItb2MoZCktMSkpLnRvU3RyaW5nKDMyKStjO2I9XCI6XCIrYitcIlJcIitjO2M9VWgrKzswPGMmJihiKz1cIkhcIitjLnRvU3RyaW5nKDMyKSk7Yis9XCI6XCJ9ZWxzZSBjPVZoKyssYj1cIjpcIitiK1wiclwiK2MudG9TdHJpbmcoMzIpK1wiOlwiO3JldHVybiBhLm1lbW9pemVkU3RhdGU9Yn0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxaaD17cmVhZENvbnRleHQ6VmcsdXNlQ2FsbGJhY2s6QmksdXNlQ29udGV4dDpWZyx1c2VFZmZlY3Q6amksdXNlSW1wZXJhdGl2ZUhhbmRsZTp6aSx1c2VJbnNlcnRpb25FZmZlY3Q6d2ksdXNlTGF5b3V0RWZmZWN0OnhpLHVzZU1lbW86Q2ksdXNlUmVkdWNlcjpmaSx1c2VSZWY6c2ksdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gZmkoZWkpfSxcbnVzZURlYnVnVmFsdWU6QWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1kaSgpO3JldHVybiBEaShiLE8ubWVtb2l6ZWRTdGF0ZSxhKX0sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPWZpKGVpKVswXSxiPWRpKCkubWVtb2l6ZWRTdGF0ZTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpoaSx1c2VTeW5jRXh0ZXJuYWxTdG9yZTppaSx1c2VJZDpGaSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LCRoPXtyZWFkQ29udGV4dDpWZyx1c2VDYWxsYmFjazpCaSx1c2VDb250ZXh0OlZnLHVzZUVmZmVjdDpqaSx1c2VJbXBlcmF0aXZlSGFuZGxlOnppLHVzZUluc2VydGlvbkVmZmVjdDp3aSx1c2VMYXlvdXRFZmZlY3Q6eGksdXNlTWVtbzpDaSx1c2VSZWR1Y2VyOmdpLHVzZVJlZjpzaSx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBnaShlaSl9LHVzZURlYnVnVmFsdWU6QWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1kaSgpO3JldHVybiBudWxsPT09XG5PP2IubWVtb2l6ZWRTdGF0ZT1hOkRpKGIsTy5tZW1vaXplZFN0YXRlLGEpfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9Z2koZWkpWzBdLGI9ZGkoKS5tZW1vaXplZFN0YXRlO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmhpLHVzZVN5bmNFeHRlcm5hbFN0b3JlOmlpLHVzZUlkOkZpLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX07ZnVuY3Rpb24gS2koYSxiKXt0cnl7dmFyIGM9XCJcIixkPWI7ZG8gYys9UGEoZCksZD1kLnJldHVybjt3aGlsZShkKTt2YXIgZT1jfWNhdGNoKGYpe2U9XCJcXG5FcnJvciBnZW5lcmF0aW5nIHN0YWNrOiBcIitmLm1lc3NhZ2UrXCJcXG5cIitmLnN0YWNrfXJldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOmUsZGlnZXN0Om51bGx9fWZ1bmN0aW9uIExpKGEsYixjKXtyZXR1cm57dmFsdWU6YSxzb3VyY2U6bnVsbCxzdGFjazpudWxsIT1jP2M6bnVsbCxkaWdlc3Q6bnVsbCE9Yj9iOm51bGx9fVxuZnVuY3Rpb24gTWkoYSxiKXt0cnl7Y29uc29sZS5lcnJvcihiLnZhbHVlKX1jYXRjaChjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYzt9KX19dmFyIE5pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIE9pKGEsYixjKXtjPWNoKC0xLGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1BpfHwoUGk9ITAsUWk9ZCk7TWkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBSaShhLGIsYyl7Yz1jaCgtMSxjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIGQoZSl9O2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtNaShhLGIpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7TWkoYSxiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1TaT9TaT1uZXcgU2V0KFt0aGlzXSk6U2kuYWRkKHRoaXMpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY31cbmZ1bmN0aW9uIFRpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtpZihudWxsPT09ZCl7ZD1hLnBpbmdDYWNoZT1uZXcgTmk7dmFyIGU9bmV3IFNldDtkLnNldChiLGUpfWVsc2UgZT1kLmdldChiKSx2b2lkIDA9PT1lJiYoZT1uZXcgU2V0LGQuc2V0KGIsZSkpO2UuaGFzKGMpfHwoZS5hZGQoYyksYT1VaS5iaW5kKG51bGwsYSxiLGMpLGIudGhlbihhLGEpKX1mdW5jdGlvbiBWaShhKXtkb3t2YXIgYjtpZihiPTEzPT09YS50YWcpYj1hLm1lbW9pemVkU3RhdGUsYj1udWxsIT09Yj9udWxsIT09Yi5kZWh5ZHJhdGVkPyEwOiExOiEwO2lmKGIpcmV0dXJuIGE7YT1hLnJldHVybn13aGlsZShudWxsIT09YSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBXaShhLGIsYyxkLGUpe2lmKDA9PT0oYS5tb2RlJjEpKXJldHVybiBhPT09Yj9hLmZsYWdzfD02NTUzNjooYS5mbGFnc3w9MTI4LGMuZmxhZ3N8PTEzMTA3MixjLmZsYWdzJj0tNTI4MDUsMT09PWMudGFnJiYobnVsbD09PWMuYWx0ZXJuYXRlP2MudGFnPTE3OihiPWNoKC0xLDEpLGIudGFnPTIsZGgoYyxiLDEpKSksYy5sYW5lc3w9MSksYTthLmZsYWdzfD02NTUzNjthLmxhbmVzPWU7cmV0dXJuIGF9dmFyIFhpPXVhLlJlYWN0Q3VycmVudE93bmVyLFVnPSExO2Z1bmN0aW9uIFlpKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/Q2goYixudWxsLGMsZCk6QmgoYixhLmNoaWxkLGMsZCl9XG5mdW5jdGlvbiBaaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7VGcoYixlKTtkPVhoKGEsYixjLGQsZixlKTtjPWJpKCk7aWYobnVsbCE9PWEmJiFVZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS0yMDUzLGEubGFuZXMmPX5lLCRpKGEsYixlKTtJJiZjJiZ2ZyhiKTtiLmZsYWdzfD0xO1lpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gYWooYSxiLGMsZCxlKXtpZihudWxsPT09YSl7dmFyIGY9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYhYmooZikmJnZvaWQgMD09PWYuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWYsY2ooYSxiLGYsZCxlKTthPXloKGMudHlwZSxudWxsLGQsYixiLm1vZGUsZSk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWY9YS5jaGlsZDtpZigwPT09KGEubGFuZXMmZSkpe3ZhciBnPWYubWVtb2l6ZWRQcm9wcztjPWMuY29tcGFyZTtjPW51bGwhPT1jP2M6SWU7aWYoYyhnLGQpJiZhLnJlZj09PWIucmVmKXJldHVybiAkaShhLGIsZSl9Yi5mbGFnc3w9MTthPXdoKGYsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gY2ooYSxiLGMsZCxlKXtpZihudWxsIT09YSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKEllKGYsZCkmJmEucmVmPT09Yi5yZWYpaWYoVWc9ITEsYi5wZW5kaW5nUHJvcHM9ZD1mLDAhPT0oYS5sYW5lcyZlKSkwIT09KGEuZmxhZ3MmMTMxMDcyKSYmKFVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsJGkoYSxiLGUpfXJldHVybiBkaihhLGIsYyxkLGUpfVxuZnVuY3Rpb24gZWooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGUpaWYoMD09PShiLm1vZGUmMSkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MCxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpudWxsfSxHKGZqLGdqKSxnanw9YztlbHNle2lmKDA9PT0oYyYxMDczNzQxODI0KSlyZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphLGNhY2hlUG9vbDpudWxsLHRyYW5zaXRpb25zOm51bGx9LGIudXBkYXRlUXVldWU9bnVsbCxHKGZqLGdqKSxnanw9YSxudWxsO2IubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjAsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH07ZD1udWxsIT09Zj9mLmJhc2VMYW5lczpjO0coZmosZ2opO2dqfD1kfWVsc2UgbnVsbCE9PVxuZj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsRyhmaixnaiksZ2p8PWQ7WWkoYSxiLGUsYyk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gaGooYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5mbGFnc3w9NTEyLGIuZmxhZ3N8PTIwOTcxNTJ9ZnVuY3Rpb24gZGooYSxiLGMsZCxlKXt2YXIgZj1aZihjKT9YZjpILmN1cnJlbnQ7Zj1ZZihiLGYpO1RnKGIsZSk7Yz1YaChhLGIsYyxkLGYsZSk7ZD1iaSgpO2lmKG51bGwhPT1hJiYhVWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tMjA1MyxhLmxhbmVzJj1+ZSwkaShhLGIsZSk7SSYmZCYmdmcoYik7Yi5mbGFnc3w9MTtZaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGlqKGEsYixjLGQsZSl7aWYoWmYoYykpe3ZhciBmPSEwO2NnKGIpfWVsc2UgZj0hMTtUZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSlqaihhLGIpLHBoKGIsYyxkKSxyaChiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1WZyhsKToobD1aZihjKT9YZjpILmN1cnJlbnQsbD1ZZihiLGwpKTt2YXIgbT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZTtxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8XG4oaCE9PWR8fGshPT1sKSYmcWgoYixnLGQsbCk7JGc9ITE7dmFyIHI9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cjtnaChiLGQsZyxlKTtrPWIubWVtb2l6ZWRTdGF0ZTtoIT09ZHx8ciE9PWt8fFdmLmN1cnJlbnR8fCRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKGtoKGIsYyxtLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD0kZ3x8b2goYixjLGgsZCxyLGssbCkpPyhxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCkpOlxuKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NDE5NDMwOCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00MTk0MzA4KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7YmgoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpMZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO3E9Yi5wZW5kaW5nUHJvcHM7cj1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az1WZyhrKTooaz1aZihjKT9YZjpILmN1cnJlbnQsaz1ZZihiLGspKTt2YXIgeT1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgeXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PXF8fHIhPT1rKSYmcWgoYixnLGQsayk7JGc9ITE7cj1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1yO2doKGIsZCxnLGUpO3ZhciBuPWIubWVtb2l6ZWRTdGF0ZTtoIT09cXx8ciE9PW58fFdmLmN1cnJlbnR8fCRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgeSYmKGtoKGIsYyx5LGQpLG49Yi5tZW1vaXplZFN0YXRlKSwobD0kZ3x8b2goYixjLGwsZCxyLG4sayl8fCExKT8obXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGV8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlJiZnLmNvbXBvbmVudFdpbGxVcGRhdGUoZCxuLGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcbmcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUoZCxuLGspKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGUmJihiLmZsYWdzfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZmxhZ3N8PTEwMjQpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0xMDI0KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9biksZy5wcm9wcz1kLGcuc3RhdGU9bixnLmNvbnRleHQ9ayxkPWwpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnI9PT1cbmEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZyPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MTAyNCksZD0hMSl9cmV0dXJuIGtqKGEsYixjLGQsZixlKX1cbmZ1bmN0aW9uIGtqKGEsYixjLGQsZSxmKXtoaihhLGIpO3ZhciBnPTAhPT0oYi5mbGFncyYxMjgpO2lmKCFkJiYhZylyZXR1cm4gZSYmZGcoYixjLCExKSwkaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtYaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPUJoKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9QmgoYixudWxsLGgsZikpOllpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJmRnKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gbGooYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9hZyhhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZhZyhhLGIuY29udGV4dCwhMSk7SWgoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gbWooYSxiLGMsZCxlKXtJZygpO0pnKGUpO2IuZmxhZ3N8PTI1NjtZaShhLGIsYyxkKTtyZXR1cm4gYi5jaGlsZH12YXIgbmo9e2RlaHlkcmF0ZWQ6bnVsbCx0cmVlQ29udGV4dDpudWxsLHJldHJ5TGFuZTowfTtmdW5jdGlvbiBvaihhKXtyZXR1cm57YmFzZUxhbmVzOmEsY2FjaGVQb29sOm51bGwsdHJhbnNpdGlvbnM6bnVsbH19XG5mdW5jdGlvbiBwaihhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1NLmN1cnJlbnQsZj0hMSxnPTAhPT0oYi5mbGFncyYxMjgpLGg7KGg9Zyl8fChoPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7aWYoaClmPSEwLGIuZmxhZ3MmPS0xMjk7ZWxzZSBpZihudWxsPT09YXx8bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSllfD0xO0coTSxlJjEpO2lmKG51bGw9PT1hKXtFZyhiKTthPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmKGE9YS5kZWh5ZHJhdGVkLG51bGwhPT1hKSlyZXR1cm4gMD09PShiLm1vZGUmMSk/Yi5sYW5lcz0xOlwiJCFcIj09PWEuZGF0YT9iLmxhbmVzPTg6Yi5sYW5lcz0xMDczNzQxODI0LG51bGw7Zz1kLmNoaWxkcmVuO2E9ZC5mYWxsYmFjaztyZXR1cm4gZj8oZD1iLm1vZGUsZj1iLmNoaWxkLGc9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpnfSwwPT09KGQmMSkmJm51bGwhPT1mPyhmLmNoaWxkTGFuZXM9MCxmLnBlbmRpbmdQcm9wcz1cbmcpOmY9cWooZyxkLDAsbnVsbCksYT1BaChhLGQsYyxudWxsKSxmLnJldHVybj1iLGEucmV0dXJuPWIsZi5zaWJsaW5nPWEsYi5jaGlsZD1mLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT1vaihjKSxiLm1lbW9pemVkU3RhdGU9bmosYSk6cmooYixnKX1lPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSYmKGg9ZS5kZWh5ZHJhdGVkLG51bGwhPT1oKSlyZXR1cm4gc2ooYSxiLGcsZCxoLGUsYyk7aWYoZil7Zj1kLmZhbGxiYWNrO2c9Yi5tb2RlO2U9YS5jaGlsZDtoPWUuc2libGluZzt2YXIgaz17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmQuY2hpbGRyZW59OzA9PT0oZyYxKSYmYi5jaGlsZCE9PWU/KGQ9Yi5jaGlsZCxkLmNoaWxkTGFuZXM9MCxkLnBlbmRpbmdQcm9wcz1rLGIuZGVsZXRpb25zPW51bGwpOihkPXdoKGUsayksZC5zdWJ0cmVlRmxhZ3M9ZS5zdWJ0cmVlRmxhZ3MmMTQ2ODAwNjQpO251bGwhPT1oP2Y9d2goaCxmKTooZj1BaChmLGcsYyxudWxsKSxmLmZsYWdzfD0yKTtmLnJldHVybj1cbmI7ZC5yZXR1cm49YjtkLnNpYmxpbmc9ZjtiLmNoaWxkPWQ7ZD1mO2Y9Yi5jaGlsZDtnPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZTtnPW51bGw9PT1nP29qKGMpOntiYXNlTGFuZXM6Zy5iYXNlTGFuZXN8YyxjYWNoZVBvb2w6bnVsbCx0cmFuc2l0aW9uczpnLnRyYW5zaXRpb25zfTtmLm1lbW9pemVkU3RhdGU9ZztmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jO2IubWVtb2l6ZWRTdGF0ZT1uajtyZXR1cm4gZH1mPWEuY2hpbGQ7YT1mLnNpYmxpbmc7ZD13aChmLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmQuY2hpbGRyZW59KTswPT09KGIubW9kZSYxKSYmKGQubGFuZXM9Yyk7ZC5yZXR1cm49YjtkLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGM9Yi5kZWxldGlvbnMsbnVsbD09PWM/KGIuZGVsZXRpb25zPVthXSxiLmZsYWdzfD0xNik6Yy5wdXNoKGEpKTtiLmNoaWxkPWQ7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGR9XG5mdW5jdGlvbiByaihhLGIpe2I9cWooe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Yn0sYS5tb2RlLDAsbnVsbCk7Yi5yZXR1cm49YTtyZXR1cm4gYS5jaGlsZD1ifWZ1bmN0aW9uIHRqKGEsYixjLGQpe251bGwhPT1kJiZKZyhkKTtCaChiLGEuY2hpbGQsbnVsbCxjKTthPXJqKGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4pO2EuZmxhZ3N8PTI7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGF9XG5mdW5jdGlvbiBzaihhLGIsYyxkLGUsZixnKXtpZihjKXtpZihiLmZsYWdzJjI1NilyZXR1cm4gYi5mbGFncyY9LTI1NyxkPUxpKEVycm9yKHAoNDIyKSkpLHRqKGEsYixnLGQpO2lmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpcmV0dXJuIGIuY2hpbGQ9YS5jaGlsZCxiLmZsYWdzfD0xMjgsbnVsbDtmPWQuZmFsbGJhY2s7ZT1iLm1vZGU7ZD1xaih7bW9kZTpcInZpc2libGVcIixjaGlsZHJlbjpkLmNoaWxkcmVufSxlLDAsbnVsbCk7Zj1BaChmLGUsZyxudWxsKTtmLmZsYWdzfD0yO2QucmV0dXJuPWI7Zi5yZXR1cm49YjtkLnNpYmxpbmc9ZjtiLmNoaWxkPWQ7MCE9PShiLm1vZGUmMSkmJkJoKGIsYS5jaGlsZCxudWxsLGcpO2IuY2hpbGQubWVtb2l6ZWRTdGF0ZT1vaihnKTtiLm1lbW9pemVkU3RhdGU9bmo7cmV0dXJuIGZ9aWYoMD09PShiLm1vZGUmMSkpcmV0dXJuIHRqKGEsYixnLG51bGwpO2lmKFwiJCFcIj09PWUuZGF0YSl7ZD1lLm5leHRTaWJsaW5nJiZlLm5leHRTaWJsaW5nLmRhdGFzZXQ7XG5pZihkKXZhciBoPWQuZGdzdDtkPWg7Zj1FcnJvcihwKDQxOSkpO2Q9TGkoZixkLHZvaWQgMCk7cmV0dXJuIHRqKGEsYixnLGQpfWg9MCE9PShnJmEuY2hpbGRMYW5lcyk7aWYoVWd8fGgpe2Q9UjtpZihudWxsIT09ZCl7c3dpdGNoKGcmLWcpe2Nhc2UgNDplPTI7YnJlYWs7Y2FzZSAxNjplPTg7YnJlYWs7Y2FzZSA2NDpjYXNlIDEyODpjYXNlIDI1NjpjYXNlIDUxMjpjYXNlIDEwMjQ6Y2FzZSAyMDQ4OmNhc2UgNDA5NjpjYXNlIDgxOTI6Y2FzZSAxNjM4NDpjYXNlIDMyNzY4OmNhc2UgNjU1MzY6Y2FzZSAxMzEwNzI6Y2FzZSAyNjIxNDQ6Y2FzZSA1MjQyODg6Y2FzZSAxMDQ4NTc2OmNhc2UgMjA5NzE1MjpjYXNlIDQxOTQzMDQ6Y2FzZSA4Mzg4NjA4OmNhc2UgMTY3NzcyMTY6Y2FzZSAzMzU1NDQzMjpjYXNlIDY3MTA4ODY0OmU9MzI7YnJlYWs7Y2FzZSA1MzY4NzA5MTI6ZT0yNjg0MzU0NTY7YnJlYWs7ZGVmYXVsdDplPTB9ZT0wIT09KGUmKGQuc3VzcGVuZGVkTGFuZXN8ZykpPzA6ZTtcbjAhPT1lJiZlIT09Zi5yZXRyeUxhbmUmJihmLnJldHJ5TGFuZT1lLFpnKGEsZSksbWgoZCxhLGUsLTEpKX11aigpO2Q9TGkoRXJyb3IocCg0MjEpKSk7cmV0dXJuIHRqKGEsYixnLGQpfWlmKFwiJD9cIj09PWUuZGF0YSlyZXR1cm4gYi5mbGFnc3w9MTI4LGIuY2hpbGQ9YS5jaGlsZCxiPXZqLmJpbmQobnVsbCxhKSxlLl9yZWFjdFJldHJ5PWIsbnVsbDthPWYudHJlZUNvbnRleHQ7eWc9TGYoZS5uZXh0U2libGluZyk7eGc9YjtJPSEwO3pnPW51bGw7bnVsbCE9PWEmJihvZ1twZysrXT1yZyxvZ1twZysrXT1zZyxvZ1twZysrXT1xZyxyZz1hLmlkLHNnPWEub3ZlcmZsb3cscWc9Yik7Yj1yaihiLGQuY2hpbGRyZW4pO2IuZmxhZ3N8PTQwOTY7cmV0dXJuIGJ9ZnVuY3Rpb24gd2ooYSxiLGMpe2EubGFuZXN8PWI7dmFyIGQ9YS5hbHRlcm5hdGU7bnVsbCE9PWQmJihkLmxhbmVzfD1iKTtTZyhhLnJldHVybixiLGMpfVxuZnVuY3Rpb24geGooYSxiLGMsZCxlKXt2YXIgZj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWY/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbE1vZGU6ZX06KGYuaXNCYWNrd2FyZHM9YixmLnJlbmRlcmluZz1udWxsLGYucmVuZGVyaW5nU3RhcnRUaW1lPTAsZi5sYXN0PWQsZi50YWlsPWMsZi50YWlsTW9kZT1lKX1cbmZ1bmN0aW9uIHlqKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7WWkoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5mbGFnc3w9MTI4O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5mbGFncyYxMjgpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmd2ooYSxjLGIpO2Vsc2UgaWYoMTk9PT1hLnRhZyl3aihhLGMsYik7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUcoTSxkKTtpZigwPT09KGIubW9kZSYxKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09TWgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTt4aihiLCExLGUsYyxmKTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PU1oKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX14aihiLCEwLGMsbnVsbCxmKTticmVhaztjYXNlIFwidG9nZXRoZXJcIjp4aihiLCExLG51bGwsbnVsbCx2b2lkIDApO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBqaihhLGIpezA9PT0oYi5tb2RlJjEpJiZudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKX1mdW5jdGlvbiAkaShhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7aGh8PWIubGFuZXM7aWYoMD09PShjJmIuY2hpbGRMYW5lcykpcmV0dXJuIG51bGw7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHAoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPXdoKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz13aChhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gemooYSxiLGMpe3N3aXRjaChiLnRhZyl7Y2FzZSAzOmxqKGIpO0lnKCk7YnJlYWs7Y2FzZSA1OktoKGIpO2JyZWFrO2Nhc2UgMTpaZihiLnR5cGUpJiZjZyhiKTticmVhaztjYXNlIDQ6SWgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTticmVhaztjYXNlIDEwOnZhciBkPWIudHlwZS5fY29udGV4dCxlPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTtHKE1nLGQuX2N1cnJlbnRWYWx1ZSk7ZC5fY3VycmVudFZhbHVlPWU7YnJlYWs7Y2FzZSAxMzpkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCl7aWYobnVsbCE9PWQuZGVoeWRyYXRlZClyZXR1cm4gRyhNLE0uY3VycmVudCYxKSxiLmZsYWdzfD0xMjgsbnVsbDtpZigwIT09KGMmYi5jaGlsZC5jaGlsZExhbmVzKSlyZXR1cm4gcGooYSxiLGMpO0coTSxNLmN1cnJlbnQmMSk7YT0kaShhLGIsYyk7cmV0dXJuIG51bGwhPT1hP2Euc2libGluZzpudWxsfUcoTSxNLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZcbmIuY2hpbGRMYW5lcyk7aWYoMCE9PShhLmZsYWdzJjEyOCkpe2lmKGQpcmV0dXJuIHlqKGEsYixjKTtiLmZsYWdzfD0xMjh9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsLGUubGFzdEVmZmVjdD1udWxsKTtHKE0sTS5jdXJyZW50KTtpZihkKWJyZWFrO2Vsc2UgcmV0dXJuIG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBiLmxhbmVzPTAsZWooYSxiLGMpfXJldHVybiAkaShhLGIsYyl9dmFyIEFqLEJqLENqLERqO1xuQWo9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O0JqPWZ1bmN0aW9uKCl7fTtcbkNqPWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWEubWVtb2l6ZWRQcm9wcztpZihlIT09ZCl7YT1iLnN0YXRlTm9kZTtIaChFaC5jdXJyZW50KTt2YXIgZj1udWxsO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjplPVlhKGEsZSk7ZD1ZYShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9QSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPUEoe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPUJmKX11YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PWwpe3ZhciBoPWVbbF07Zm9yKGcgaW4gaCloLmhhc093blByb3BlcnR5KGcpJiZcbihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGVhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHwoYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsXG5jKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihlYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRChcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixjKTt2YXIgbD1mO2lmKGIudXBkYXRlUXVldWU9bCliLmZsYWdzfD00fX07RGo9ZnVuY3Rpb24oYSxiLGMsZCl7YyE9PWQmJihiLmZsYWdzfD00KX07XG5mdW5jdGlvbiBFaihhLGIpe2lmKCFJKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBTKGEpe3ZhciBiPW51bGwhPT1hLmFsdGVybmF0ZSYmYS5hbHRlcm5hdGUuY2hpbGQ9PT1hLmNoaWxkLGM9MCxkPTA7aWYoYilmb3IodmFyIGU9YS5jaGlsZDtudWxsIT09ZTspY3w9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZHw9ZS5zdWJ0cmVlRmxhZ3MmMTQ2ODAwNjQsZHw9ZS5mbGFncyYxNDY4MDA2NCxlLnJldHVybj1hLGU9ZS5zaWJsaW5nO2Vsc2UgZm9yKGU9YS5jaGlsZDtudWxsIT09ZTspY3w9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZHw9ZS5zdWJ0cmVlRmxhZ3MsZHw9ZS5mbGFncyxlLnJldHVybj1hLGU9ZS5zaWJsaW5nO2Euc3VidHJlZUZsYWdzfD1kO2EuY2hpbGRMYW5lcz1jO3JldHVybiBifVxuZnVuY3Rpb24gRmooYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3dnKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIFMoYiksbnVsbDtjYXNlIDE6cmV0dXJuIFpmKGIudHlwZSkmJiRmKCksUyhiKSxudWxsO2Nhc2UgMzpkPWIuc3RhdGVOb2RlO0poKCk7RShXZik7RShIKTtPaCgpO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClHZyhiKT9iLmZsYWdzfD00Om51bGw9PT1hfHxhLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkJiYwPT09KGIuZmxhZ3MmMjU2KXx8KGIuZmxhZ3N8PTEwMjQsbnVsbCE9PXpnJiYoR2ooemcpLHpnPW51bGwpKTtCaihhLGIpO1MoYik7cmV0dXJuIG51bGw7Y2FzZSA1OkxoKGIpO3ZhciBlPUhoKEdoLmN1cnJlbnQpO1xuYz1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKUNqKGEsYixjLGQsZSksYS5yZWYhPT1iLnJlZiYmKGIuZmxhZ3N8PTUxMixiLmZsYWdzfD0yMDk3MTUyKTtlbHNle2lmKCFkKXtpZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IocCgxNjYpKTtTKGIpO3JldHVybiBudWxsfWE9SGgoRWguY3VycmVudCk7aWYoR2coYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2RbT2ZdPWI7ZFtQZl09ZjthPTAhPT0oYi5tb2RlJjEpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RChcImNhbmNlbFwiLGQpO0QoXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RChcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZT0wO2U8bGYubGVuZ3RoO2UrKylEKGxmW2VdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpEKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpEKFwiZXJyb3JcIixcbmQpO0QoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpEKFwidG9nZ2xlXCIsZCk7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoZCxmKTtEKFwiaW52YWxpZFwiLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RChcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEQoXCJpbnZhbGlkXCIsZCl9dWIoYyxmKTtlPW51bGw7Zm9yKHZhciBnIGluIGYpaWYoZi5oYXNPd25Qcm9wZXJ0eShnKSl7dmFyIGg9ZltnXTtcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgaD9kLnRleHRDb250ZW50IT09aCYmKCEwIT09Zi5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcmJkFmKGQudGV4dENvbnRlbnQsaCxhKSxlPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKCEwIT09Zi5zdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcmJkFmKGQudGV4dENvbnRlbnQsXG5oLGEpLGU9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTplYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmXCJvblNjcm9sbFwiPT09ZyYmRChcInNjcm9sbFwiLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtkYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPUJmKX1kPWU7Yi51cGRhdGVRdWV1ZT1kO251bGwhPT1kJiYoYi5mbGFnc3w9NCl9ZWxzZXtnPTk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50O1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YSYmKGE9a2IoYykpO1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XG5cInN0cmluZ1wiPT09dHlwZW9mIGQuaXM/YT1nLmNyZWF0ZUVsZW1lbnQoYyx7aXM6ZC5pc30pOihhPWcuY3JlYXRlRWxlbWVudChjKSxcInNlbGVjdFwiPT09YyYmKGc9YSxkLm11bHRpcGxlP2cubXVsdGlwbGU9ITA6ZC5zaXplJiYoZy5zaXplPWQuc2l6ZSkpKTphPWcuY3JlYXRlRWxlbWVudE5TKGEsYyk7YVtPZl09YjthW1BmXT1kO0FqKGEsYiwhMSwhMSk7Yi5zdGF0ZU5vZGU9YTthOntnPXZiKGMsZCk7c3dpdGNoKGMpe2Nhc2UgXCJkaWFsb2dcIjpEKFwiY2FuY2VsXCIsYSk7RChcImNsb3NlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RChcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPGxmLmxlbmd0aDtlKyspRChsZltlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkQoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpEKFwiZXJyb3JcIixcbmEpO0QoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RChcInRvZ2dsZVwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpaYShhLGQpO2U9WWEoYSxkKTtEKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWQ7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZT17d2FzTXVsdGlwbGU6ISFkLm11bHRpcGxlfTtlPUEoe30sZCx7dmFsdWU6dm9pZCAwfSk7RChcImludmFsaWRcIixhKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihhLGQpO2U9Z2IoYSxkKTtEKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXViKGMsZSk7aD1lO2ZvcihmIGluIGgpaWYoaC5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGs9aFtmXTtcInN0eWxlXCI9PT1mP3NiKGEsayk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8oaz1rP2suX19odG1sOnZvaWQgMCxudWxsIT1rJiZuYihhLGspKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2Ygaz8oXCJ0ZXh0YXJlYVwiIT09XG5jfHxcIlwiIT09aykmJm9iKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZvYihhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKGVhLmhhc093blByb3BlcnR5KGYpP251bGwhPWsmJlwib25TY3JvbGxcIj09PWYmJkQoXCJzY3JvbGxcIixhKTpudWxsIT1rJiZ0YShhLGYsayxnKSl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGEpO2RiKGEsZCwhMSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6VmEoYSk7amIoYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOm51bGwhPWQudmFsdWUmJmEuc2V0QXR0cmlidXRlKFwidmFsdWVcIixcIlwiK1NhKGQudmFsdWUpKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5tdWx0aXBsZT0hIWQubXVsdGlwbGU7Zj1kLnZhbHVlO251bGwhPWY/ZmIoYSwhIWQubXVsdGlwbGUsZiwhMSk6bnVsbCE9ZC5kZWZhdWx0VmFsdWUmJmZiKGEsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLFxuITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGUub25DbGljayYmKGEub25jbGljaz1CZil9c3dpdGNoKGMpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6ZD0hIWQuYXV0b0ZvY3VzO2JyZWFrIGE7Y2FzZSBcImltZ1wiOmQ9ITA7YnJlYWsgYTtkZWZhdWx0OmQ9ITF9fWQmJihiLmZsYWdzfD00KX1udWxsIT09Yi5yZWYmJihiLmZsYWdzfD01MTIsYi5mbGFnc3w9MjA5NzE1Mil9UyhiKTtyZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRGooYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHAoMTY2KSk7Yz1IaChHaC5jdXJyZW50KTtIaChFaC5jdXJyZW50KTtpZihHZyhiKSl7ZD1iLnN0YXRlTm9kZTtjPWIubWVtb2l6ZWRQcm9wcztkW09mXT1iO2lmKGY9ZC5ub2RlVmFsdWUhPT1jKWlmKGE9XG54ZyxudWxsIT09YSlzd2l0Y2goYS50YWcpe2Nhc2UgMzpBZihkLm5vZGVWYWx1ZSxjLDAhPT0oYS5tb2RlJjEpKTticmVhaztjYXNlIDU6ITAhPT1hLm1lbW9pemVkUHJvcHMuc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nJiZBZihkLm5vZGVWYWx1ZSxjLDAhPT0oYS5tb2RlJjEpKX1mJiYoYi5mbGFnc3w9NCl9ZWxzZSBkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFtPZl09YixiLnN0YXRlTm9kZT1kfVMoYik7cmV0dXJuIG51bGw7Y2FzZSAxMzpFKE0pO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1hfHxudWxsIT09YS5tZW1vaXplZFN0YXRlJiZudWxsIT09YS5tZW1vaXplZFN0YXRlLmRlaHlkcmF0ZWQpe2lmKEkmJm51bGwhPT15ZyYmMCE9PShiLm1vZGUmMSkmJjA9PT0oYi5mbGFncyYxMjgpKUhnKCksSWcoKSxiLmZsYWdzfD05ODU2MCxmPSExO2Vsc2UgaWYoZj1HZyhiKSxudWxsIT09ZCYmbnVsbCE9PWQuZGVoeWRyYXRlZCl7aWYobnVsbD09PVxuYSl7aWYoIWYpdGhyb3cgRXJyb3IocCgzMTgpKTtmPWIubWVtb2l6ZWRTdGF0ZTtmPW51bGwhPT1mP2YuZGVoeWRyYXRlZDpudWxsO2lmKCFmKXRocm93IEVycm9yKHAoMzE3KSk7ZltPZl09Yn1lbHNlIElnKCksMD09PShiLmZsYWdzJjEyOCkmJihiLm1lbW9pemVkU3RhdGU9bnVsbCksYi5mbGFnc3w9NDtTKGIpO2Y9ITF9ZWxzZSBudWxsIT09emcmJihHaih6Zyksemc9bnVsbCksZj0hMDtpZighZilyZXR1cm4gYi5mbGFncyY2NTUzNj9iOm51bGx9aWYoMCE9PShiLmZsYWdzJjEyOCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7ZCE9PShudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSkmJmQmJihiLmNoaWxkLmZsYWdzfD04MTkyLDAhPT0oYi5tb2RlJjEpJiYobnVsbD09PWF8fDAhPT0oTS5jdXJyZW50JjEpPzA9PT1UJiYoVD0zKTp1aigpKSk7bnVsbCE9PWIudXBkYXRlUXVldWUmJihiLmZsYWdzfD00KTtTKGIpO3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gSmgoKSxcbkJqKGEsYiksbnVsbD09PWEmJnNmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLFMoYiksbnVsbDtjYXNlIDEwOnJldHVybiBSZyhiLnR5cGUuX2NvbnRleHQpLFMoYiksbnVsbDtjYXNlIDE3OnJldHVybiBaZihiLnR5cGUpJiYkZigpLFMoYiksbnVsbDtjYXNlIDE5OkUoTSk7Zj1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWYpcmV0dXJuIFMoYiksbnVsbDtkPTAhPT0oYi5mbGFncyYxMjgpO2c9Zi5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZClFaihmLCExKTtlbHNle2lmKDAhPT1UfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjEyOCkpZm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2c9TWgoYSk7aWYobnVsbCE9PWcpe2IuZmxhZ3N8PTEyODtFaihmLCExKTtkPWcudXBkYXRlUXVldWU7bnVsbCE9PWQmJihiLnVwZGF0ZVF1ZXVlPWQsYi5mbGFnc3w9NCk7Yi5zdWJ0cmVlRmxhZ3M9MDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0xNDY4MDA2Nixcbmc9Zi5hbHRlcm5hdGUsbnVsbD09PWc/KGYuY2hpbGRMYW5lcz0wLGYubGFuZXM9YSxmLmNoaWxkPW51bGwsZi5zdWJ0cmVlRmxhZ3M9MCxmLm1lbW9pemVkUHJvcHM9bnVsbCxmLm1lbW9pemVkU3RhdGU9bnVsbCxmLnVwZGF0ZVF1ZXVlPW51bGwsZi5kZXBlbmRlbmNpZXM9bnVsbCxmLnN0YXRlTm9kZT1udWxsKTooZi5jaGlsZExhbmVzPWcuY2hpbGRMYW5lcyxmLmxhbmVzPWcubGFuZXMsZi5jaGlsZD1nLmNoaWxkLGYuc3VidHJlZUZsYWdzPTAsZi5kZWxldGlvbnM9bnVsbCxmLm1lbW9pemVkUHJvcHM9Zy5tZW1vaXplZFByb3BzLGYubWVtb2l6ZWRTdGF0ZT1nLm1lbW9pemVkU3RhdGUsZi51cGRhdGVRdWV1ZT1nLnVwZGF0ZVF1ZXVlLGYudHlwZT1nLnR5cGUsYT1nLmRlcGVuZGVuY2llcyxmLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0coTSxNLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPVxuYS5zaWJsaW5nfW51bGwhPT1mLnRhaWwmJkIoKT5IaiYmKGIuZmxhZ3N8PTEyOCxkPSEwLEVqKGYsITEpLGIubGFuZXM9NDE5NDMwNCl9ZWxzZXtpZighZClpZihhPU1oKGcpLG51bGwhPT1hKXtpZihiLmZsYWdzfD0xMjgsZD0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRWooZiwhMCksbnVsbD09PWYudGFpbCYmXCJoaWRkZW5cIj09PWYudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIUkpcmV0dXJuIFMoYiksbnVsbH1lbHNlIDIqQigpLWYucmVuZGVyaW5nU3RhcnRUaW1lPkhqJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PTEyOCxkPSEwLEVqKGYsITEpLGIubGFuZXM9NDE5NDMwNCk7Zi5pc0JhY2t3YXJkcz8oZy5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1nKTooYz1mLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWc6Yi5jaGlsZD1nLGYubGFzdD1nKX1pZihudWxsIT09Zi50YWlsKXJldHVybiBiPWYudGFpbCxmLnJlbmRlcmluZz1cbmIsZi50YWlsPWIuc2libGluZyxmLnJlbmRlcmluZ1N0YXJ0VGltZT1CKCksYi5zaWJsaW5nPW51bGwsYz1NLmN1cnJlbnQsRyhNLGQ/YyYxfDI6YyYxKSxiO1MoYik7cmV0dXJuIG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBJaigpLGQ9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PWQmJihiLmZsYWdzfD04MTkyKSxkJiYwIT09KGIubW9kZSYxKT8wIT09KGdqJjEwNzM3NDE4MjQpJiYoUyhiKSxiLnN1YnRyZWVGbGFncyY2JiYoYi5mbGFnc3w9ODE5MikpOlMoYiksbnVsbDtjYXNlIDI0OnJldHVybiBudWxsO2Nhc2UgMjU6cmV0dXJuIG51bGx9dGhyb3cgRXJyb3IocCgxNTYsYi50YWcpKTt9XG5mdW5jdGlvbiBKaihhLGIpe3dnKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAxOnJldHVybiBaZihiLnR5cGUpJiYkZigpLGE9Yi5mbGFncyxhJjY1NTM2PyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgMzpyZXR1cm4gSmgoKSxFKFdmKSxFKEgpLE9oKCksYT1iLmZsYWdzLDAhPT0oYSY2NTUzNikmJjA9PT0oYSYxMjgpPyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgNTpyZXR1cm4gTGgoYiksbnVsbDtjYXNlIDEzOkUoTSk7YT1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe2lmKG51bGw9PT1iLmFsdGVybmF0ZSl0aHJvdyBFcnJvcihwKDM0MCkpO0lnKCl9YT1iLmZsYWdzO3JldHVybiBhJjY1NTM2PyhiLmZsYWdzPWEmLTY1NTM3fDEyOCxiKTpudWxsO2Nhc2UgMTk6cmV0dXJuIEUoTSksbnVsbDtjYXNlIDQ6cmV0dXJuIEpoKCksbnVsbDtjYXNlIDEwOnJldHVybiBSZyhiLnR5cGUuX2NvbnRleHQpLG51bGw7Y2FzZSAyMjpjYXNlIDIzOnJldHVybiBJaigpLFxubnVsbDtjYXNlIDI0OnJldHVybiBudWxsO2RlZmF1bHQ6cmV0dXJuIG51bGx9fXZhciBLaj0hMSxVPSExLExqPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0LFY9bnVsbDtmdW5jdGlvbiBNaihhLGIpe3ZhciBjPWEucmVmO2lmKG51bGwhPT1jKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjKXRyeXtjKG51bGwpfWNhdGNoKGQpe1coYSxiLGQpfWVsc2UgYy5jdXJyZW50PW51bGx9ZnVuY3Rpb24gTmooYSxiLGMpe3RyeXtjKCl9Y2F0Y2goZCl7VyhhLGIsZCl9fXZhciBPaj0hMTtcbmZ1bmN0aW9uIFBqKGEsYil7Q2Y9ZGQ7YT1NZSgpO2lmKE5lKGEpKXtpZihcInNlbGVjdGlvblN0YXJ0XCJpbiBhKXZhciBjPXtzdGFydDphLnNlbGVjdGlvblN0YXJ0LGVuZDphLnNlbGVjdGlvbkVuZH07ZWxzZSBhOntjPShjPWEub3duZXJEb2N1bWVudCkmJmMuZGVmYXVsdFZpZXd8fHdpbmRvdzt2YXIgZD1jLmdldFNlbGVjdGlvbiYmYy5nZXRTZWxlY3Rpb24oKTtpZihkJiYwIT09ZC5yYW5nZUNvdW50KXtjPWQuYW5jaG9yTm9kZTt2YXIgZT1kLmFuY2hvck9mZnNldCxmPWQuZm9jdXNOb2RlO2Q9ZC5mb2N1c09mZnNldDt0cnl7Yy5ub2RlVHlwZSxmLm5vZGVUeXBlfWNhdGNoKEYpe2M9bnVsbDticmVhayBhfXZhciBnPTAsaD0tMSxrPS0xLGw9MCxtPTAscT1hLHI9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB5Ozspe3EhPT1jfHwwIT09ZSYmMyE9PXEubm9kZVR5cGV8fChoPWcrZSk7cSE9PWZ8fDAhPT1kJiYzIT09cS5ub2RlVHlwZXx8KGs9ZytkKTszPT09cS5ub2RlVHlwZSYmKGcrPVxucS5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KHk9cS5maXJzdENoaWxkKSlicmVhaztyPXE7cT15fWZvcig7Oyl7aWYocT09PWEpYnJlYWsgYjtyPT09YyYmKytsPT09ZSYmKGg9Zyk7cj09PWYmJisrbT09PWQmJihrPWcpO2lmKG51bGwhPT0oeT1xLm5leHRTaWJsaW5nKSlicmVhaztxPXI7cj1xLnBhcmVudE5vZGV9cT15fWM9LTE9PT1ofHwtMT09PWs/bnVsbDp7c3RhcnQ6aCxlbmQ6a319ZWxzZSBjPW51bGx9Yz1jfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBjPW51bGw7RGY9e2ZvY3VzZWRFbGVtOmEsc2VsZWN0aW9uUmFuZ2U6Y307ZGQ9ITE7Zm9yKFY9YjtudWxsIT09VjspaWYoYj1WLGE9Yi5jaGlsZCwwIT09KGIuc3VidHJlZUZsYWdzJjEwMjgpJiZudWxsIT09YSlhLnJldHVybj1iLFY9YTtlbHNlIGZvcig7bnVsbCE9PVY7KXtiPVY7dHJ5e3ZhciBuPWIuYWx0ZXJuYXRlO2lmKDAhPT0oYi5mbGFncyYxMDI0KSlzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6YnJlYWs7XG5jYXNlIDE6aWYobnVsbCE9PW4pe3ZhciB0PW4ubWVtb2l6ZWRQcm9wcyxKPW4ubWVtb2l6ZWRTdGF0ZSx4PWIuc3RhdGVOb2RlLHc9eC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP3Q6TGcoYi50eXBlLHQpLEopO3guX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9d31icmVhaztjYXNlIDM6dmFyIHU9Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzsxPT09dS5ub2RlVHlwZT91LnRleHRDb250ZW50PVwiXCI6OT09PXUubm9kZVR5cGUmJnUuZG9jdW1lbnRFbGVtZW50JiZ1LnJlbW92ZUNoaWxkKHUuZG9jdW1lbnRFbGVtZW50KTticmVhaztjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OmJyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IocCgxNjMpKTt9fWNhdGNoKEYpe1coYixiLnJldHVybixGKX1hPWIuc2libGluZztpZihudWxsIT09YSl7YS5yZXR1cm49Yi5yZXR1cm47Vj1hO2JyZWFrfVY9Yi5yZXR1cm59bj1PajtPaj0hMTtyZXR1cm4gbn1cbmZ1bmN0aW9uIFFqKGEsYixjKXt2YXIgZD1iLnVwZGF0ZVF1ZXVlO2Q9bnVsbCE9PWQ/ZC5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWQpe3ZhciBlPWQ9ZC5uZXh0O2Rve2lmKChlLnRhZyZhKT09PWEpe3ZhciBmPWUuZGVzdHJveTtlLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWYmJk5qKGIsYyxmKX1lPWUubmV4dH13aGlsZShlIT09ZCl9fWZ1bmN0aW9uIFJqKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuY3JlYXRlO2MuZGVzdHJveT1kKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1mdW5jdGlvbiBTaihhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09Yil7dmFyIGM9YS5zdGF0ZU5vZGU7c3dpdGNoKGEudGFnKXtjYXNlIDU6YT1jO2JyZWFrO2RlZmF1bHQ6YT1jfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiP2IoYSk6Yi5jdXJyZW50PWF9fVxuZnVuY3Rpb24gVGooYSl7dmFyIGI9YS5hbHRlcm5hdGU7bnVsbCE9PWImJihhLmFsdGVybmF0ZT1udWxsLFRqKGIpKTthLmNoaWxkPW51bGw7YS5kZWxldGlvbnM9bnVsbDthLnNpYmxpbmc9bnVsbDs1PT09YS50YWcmJihiPWEuc3RhdGVOb2RlLG51bGwhPT1iJiYoZGVsZXRlIGJbT2ZdLGRlbGV0ZSBiW1BmXSxkZWxldGUgYltvZl0sZGVsZXRlIGJbUWZdLGRlbGV0ZSBiW1JmXSkpO2Euc3RhdGVOb2RlPW51bGw7YS5yZXR1cm49bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EubWVtb2l6ZWRQcm9wcz1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDthLnVwZGF0ZVF1ZXVlPW51bGx9ZnVuY3Rpb24gVWooYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBWaihhKXthOmZvcig7Oyl7Zm9yKDtudWxsPT09YS5zaWJsaW5nOyl7aWYobnVsbD09PWEucmV0dXJufHxVaihhLnJldHVybikpcmV0dXJuIG51bGw7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2ZvcihhPWEuc2libGluZzs1IT09YS50YWcmJjYhPT1hLnRhZyYmMTghPT1hLnRhZzspe2lmKGEuZmxhZ3MmMiljb250aW51ZSBhO2lmKG51bGw9PT1hLmNoaWxkfHw0PT09YS50YWcpY29udGludWUgYTtlbHNlIGEuY2hpbGQucmV0dXJuPWEsYT1hLmNoaWxkfWlmKCEoYS5mbGFncyYyKSlyZXR1cm4gYS5zdGF0ZU5vZGV9fVxuZnVuY3Rpb24gV2ooYSxiLGMpe3ZhciBkPWEudGFnO2lmKDU9PT1kfHw2PT09ZClhPWEuc3RhdGVOb2RlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPUJmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspV2ooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gWGooYSxiLGMpe3ZhciBkPWEudGFnO2lmKDU9PT1kfHw2PT09ZClhPWEuc3RhdGVOb2RlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihYaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KVhqKGEsYixjKSxhPWEuc2libGluZ312YXIgWD1udWxsLFlqPSExO2Z1bmN0aW9uIFpqKGEsYixjKXtmb3IoYz1jLmNoaWxkO251bGwhPT1jOylhayhhLGIsYyksYz1jLnNpYmxpbmd9XG5mdW5jdGlvbiBhayhhLGIsYyl7aWYobGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsYy5vbkNvbW1pdEZpYmVyVW5tb3VudCl0cnl7bGMub25Db21taXRGaWJlclVubW91bnQoa2MsYyl9Y2F0Y2goaCl7fXN3aXRjaChjLnRhZyl7Y2FzZSA1OlV8fE1qKGMsYik7Y2FzZSA2OnZhciBkPVgsZT1ZajtYPW51bGw7WmooYSxiLGMpO1g9ZDtZaj1lO251bGwhPT1YJiYoWWo/KGE9WCxjPWMuc3RhdGVOb2RlLDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChjKTphLnJlbW92ZUNoaWxkKGMpKTpYLnJlbW92ZUNoaWxkKGMuc3RhdGVOb2RlKSk7YnJlYWs7Y2FzZSAxODpudWxsIT09WCYmKFlqPyhhPVgsYz1jLnN0YXRlTm9kZSw4PT09YS5ub2RlVHlwZT9LZihhLnBhcmVudE5vZGUsYyk6MT09PWEubm9kZVR5cGUmJktmKGEsYyksYmQoYSkpOktmKFgsYy5zdGF0ZU5vZGUpKTticmVhaztjYXNlIDQ6ZD1YO2U9WWo7WD1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO1lqPSEwO1xuWmooYSxiLGMpO1g9ZDtZaj1lO2JyZWFrO2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTppZighVSYmKGQ9Yy51cGRhdGVRdWV1ZSxudWxsIT09ZCYmKGQ9ZC5sYXN0RWZmZWN0LG51bGwhPT1kKSkpe2U9ZD1kLm5leHQ7ZG97dmFyIGY9ZSxnPWYuZGVzdHJveTtmPWYudGFnO3ZvaWQgMCE9PWcmJigwIT09KGYmMik/TmooYyxiLGcpOjAhPT0oZiY0KSYmTmooYyxiLGcpKTtlPWUubmV4dH13aGlsZShlIT09ZCl9WmooYSxiLGMpO2JyZWFrO2Nhc2UgMTppZighVSYmKE1qKGMsYiksZD1jLnN0YXRlTm9kZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsVW5tb3VudCkpdHJ5e2QucHJvcHM9Yy5tZW1vaXplZFByb3BzLGQuc3RhdGU9Yy5tZW1vaXplZFN0YXRlLGQuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChoKXtXKGMsYixoKX1aaihhLGIsYyk7YnJlYWs7Y2FzZSAyMTpaaihhLGIsYyk7YnJlYWs7Y2FzZSAyMjpjLm1vZGUmMT8oVT0oZD1VKXx8bnVsbCE9PVxuYy5tZW1vaXplZFN0YXRlLFpqKGEsYixjKSxVPWQpOlpqKGEsYixjKTticmVhaztkZWZhdWx0OlpqKGEsYixjKX19ZnVuY3Rpb24gYmsoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgTGopO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1jay5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbmZ1bmN0aW9uIGRrKGEsYil7dmFyIGM9Yi5kZWxldGlvbnM7aWYobnVsbCE9PWMpZm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKyspe3ZhciBlPWNbZF07dHJ5e3ZhciBmPWEsZz1iLGg9ZzthOmZvcig7bnVsbCE9PWg7KXtzd2l0Y2goaC50YWcpe2Nhc2UgNTpYPWguc3RhdGVOb2RlO1lqPSExO2JyZWFrIGE7Y2FzZSAzOlg9aC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztZaj0hMDticmVhayBhO2Nhc2UgNDpYPWguc3RhdGVOb2RlLmNvbnRhaW5lckluZm87WWo9ITA7YnJlYWsgYX1oPWgucmV0dXJufWlmKG51bGw9PT1YKXRocm93IEVycm9yKHAoMTYwKSk7YWsoZixnLGUpO1g9bnVsbDtZaj0hMTt2YXIgaz1lLmFsdGVybmF0ZTtudWxsIT09ayYmKGsucmV0dXJuPW51bGwpO2UucmV0dXJuPW51bGx9Y2F0Y2gobCl7VyhlLGIsbCl9fWlmKGIuc3VidHJlZUZsYWdzJjEyODU0KWZvcihiPWIuY2hpbGQ7bnVsbCE9PWI7KWVrKGIsYSksYj1iLnNpYmxpbmd9XG5mdW5jdGlvbiBlayhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlLGQ9YS5mbGFncztzd2l0Y2goYS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpkayhiLGEpO2ZrKGEpO2lmKGQmNCl7dHJ5e1FqKDMsYSxhLnJldHVybiksUmooMyxhKX1jYXRjaCh0KXtXKGEsYS5yZXR1cm4sdCl9dHJ5e1FqKDUsYSxhLnJldHVybil9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDE6ZGsoYixhKTtmayhhKTtkJjUxMiYmbnVsbCE9PWMmJk1qKGMsYy5yZXR1cm4pO2JyZWFrO2Nhc2UgNTpkayhiLGEpO2ZrKGEpO2QmNTEyJiZudWxsIT09YyYmTWooYyxjLnJldHVybik7aWYoYS5mbGFncyYzMil7dmFyIGU9YS5zdGF0ZU5vZGU7dHJ5e29iKGUsXCJcIil9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1pZihkJjQmJihlPWEuc3RhdGVOb2RlLG51bGwhPWUpKXt2YXIgZj1hLm1lbW9pemVkUHJvcHMsZz1udWxsIT09Yz9jLm1lbW9pemVkUHJvcHM6ZixoPWEudHlwZSxrPWEudXBkYXRlUXVldWU7XG5hLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWspdHJ5e1wiaW5wdXRcIj09PWgmJlwicmFkaW9cIj09PWYudHlwZSYmbnVsbCE9Zi5uYW1lJiZhYihlLGYpO3ZiKGgsZyk7dmFyIGw9dmIoaCxmKTtmb3IoZz0wO2c8ay5sZW5ndGg7Zys9Mil7dmFyIG09a1tnXSxxPWtbZysxXTtcInN0eWxlXCI9PT1tP3NiKGUscSk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bT9uYihlLHEpOlwiY2hpbGRyZW5cIj09PW0/b2IoZSxxKTp0YShlLG0scSxsKX1zd2l0Y2goaCl7Y2FzZSBcImlucHV0XCI6YmIoZSxmKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihlLGYpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjp2YXIgcj1lLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU7ZS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZi5tdWx0aXBsZTt2YXIgeT1mLnZhbHVlO251bGwhPXk/ZmIoZSwhIWYubXVsdGlwbGUseSwhMSk6ciE9PSEhZi5tdWx0aXBsZSYmKG51bGwhPWYuZGVmYXVsdFZhbHVlP2ZiKGUsISFmLm11bHRpcGxlLFxuZi5kZWZhdWx0VmFsdWUsITApOmZiKGUsISFmLm11bHRpcGxlLGYubXVsdGlwbGU/W106XCJcIiwhMSkpfWVbUGZdPWZ9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDY6ZGsoYixhKTtmayhhKTtpZihkJjQpe2lmKG51bGw9PT1hLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihwKDE2MikpO2U9YS5zdGF0ZU5vZGU7Zj1hLm1lbW9pemVkUHJvcHM7dHJ5e2Uubm9kZVZhbHVlPWZ9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1icmVhaztjYXNlIDM6ZGsoYixhKTtmayhhKTtpZihkJjQmJm51bGwhPT1jJiZjLm1lbW9pemVkU3RhdGUuaXNEZWh5ZHJhdGVkKXRyeXtiZChiLmNvbnRhaW5lckluZm8pfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX1icmVhaztjYXNlIDQ6ZGsoYixhKTtmayhhKTticmVhaztjYXNlIDEzOmRrKGIsYSk7ZmsoYSk7ZT1hLmNoaWxkO2UuZmxhZ3MmODE5MiYmKGY9bnVsbCE9PWUubWVtb2l6ZWRTdGF0ZSxlLnN0YXRlTm9kZS5pc0hpZGRlbj1mLCFmfHxcbm51bGwhPT1lLmFsdGVybmF0ZSYmbnVsbCE9PWUuYWx0ZXJuYXRlLm1lbW9pemVkU3RhdGV8fChnaz1CKCkpKTtkJjQmJmJrKGEpO2JyZWFrO2Nhc2UgMjI6bT1udWxsIT09YyYmbnVsbCE9PWMubWVtb2l6ZWRTdGF0ZTthLm1vZGUmMT8oVT0obD1VKXx8bSxkayhiLGEpLFU9bCk6ZGsoYixhKTtmayhhKTtpZihkJjgxOTIpe2w9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtpZigoYS5zdGF0ZU5vZGUuaXNIaWRkZW49bCkmJiFtJiYwIT09KGEubW9kZSYxKSlmb3IoVj1hLG09YS5jaGlsZDtudWxsIT09bTspe2ZvcihxPVY9bTtudWxsIT09Vjspe3I9Vjt5PXIuY2hpbGQ7c3dpdGNoKHIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6UWooNCxyLHIucmV0dXJuKTticmVhaztjYXNlIDE6TWoocixyLnJldHVybik7dmFyIG49ci5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIG4uY29tcG9uZW50V2lsbFVubW91bnQpe2Q9cjtjPXIucmV0dXJuO3RyeXtiPWQsbi5wcm9wcz1cbmIubWVtb2l6ZWRQcm9wcyxuLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxuLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2godCl7VyhkLGMsdCl9fWJyZWFrO2Nhc2UgNTpNaihyLHIucmV0dXJuKTticmVhaztjYXNlIDIyOmlmKG51bGwhPT1yLm1lbW9pemVkU3RhdGUpe2hrKHEpO2NvbnRpbnVlfX1udWxsIT09eT8oeS5yZXR1cm49cixWPXkpOmhrKHEpfW09bS5zaWJsaW5nfWE6Zm9yKG09bnVsbCxxPWE7Oyl7aWYoNT09PXEudGFnKXtpZihudWxsPT09bSl7bT1xO3RyeXtlPXEuc3RhdGVOb2RlLGw/KGY9ZS5zdHlsZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5zZXRQcm9wZXJ0eT9mLnNldFByb3BlcnR5KFwiZGlzcGxheVwiLFwibm9uZVwiLFwiaW1wb3J0YW50XCIpOmYuZGlzcGxheT1cIm5vbmVcIik6KGg9cS5zdGF0ZU5vZGUsaz1xLm1lbW9pemVkUHJvcHMuc3R5bGUsZz12b2lkIDAhPT1rJiZudWxsIT09ayYmay5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ay5kaXNwbGF5Om51bGwsaC5zdHlsZS5kaXNwbGF5PVxucmIoXCJkaXNwbGF5XCIsZykpfWNhdGNoKHQpe1coYSxhLnJldHVybix0KX19fWVsc2UgaWYoNj09PXEudGFnKXtpZihudWxsPT09bSl0cnl7cS5zdGF0ZU5vZGUubm9kZVZhbHVlPWw/XCJcIjpxLm1lbW9pemVkUHJvcHN9Y2F0Y2godCl7VyhhLGEucmV0dXJuLHQpfX1lbHNlIGlmKCgyMiE9PXEudGFnJiYyMyE9PXEudGFnfHxudWxsPT09cS5tZW1vaXplZFN0YXRlfHxxPT09YSkmJm51bGwhPT1xLmNoaWxkKXtxLmNoaWxkLnJldHVybj1xO3E9cS5jaGlsZDtjb250aW51ZX1pZihxPT09YSlicmVhayBhO2Zvcig7bnVsbD09PXEuc2libGluZzspe2lmKG51bGw9PT1xLnJldHVybnx8cS5yZXR1cm49PT1hKWJyZWFrIGE7bT09PXEmJihtPW51bGwpO3E9cS5yZXR1cm59bT09PXEmJihtPW51bGwpO3Euc2libGluZy5yZXR1cm49cS5yZXR1cm47cT1xLnNpYmxpbmd9fWJyZWFrO2Nhc2UgMTk6ZGsoYixhKTtmayhhKTtkJjQmJmJrKGEpO2JyZWFrO2Nhc2UgMjE6YnJlYWs7ZGVmYXVsdDpkayhiLFxuYSksZmsoYSl9fWZ1bmN0aW9uIGZrKGEpe3ZhciBiPWEuZmxhZ3M7aWYoYiYyKXt0cnl7YTp7Zm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoVWooYykpe3ZhciBkPWM7YnJlYWsgYX1jPWMucmV0dXJufXRocm93IEVycm9yKHAoMTYwKSk7fXN3aXRjaChkLnRhZyl7Y2FzZSA1OnZhciBlPWQuc3RhdGVOb2RlO2QuZmxhZ3MmMzImJihvYihlLFwiXCIpLGQuZmxhZ3MmPS0zMyk7dmFyIGY9VmooYSk7WGooYSxmLGUpO2JyZWFrO2Nhc2UgMzpjYXNlIDQ6dmFyIGc9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxoPVZqKGEpO1dqKGEsaCxnKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMTYxKSk7fX1jYXRjaChrKXtXKGEsYS5yZXR1cm4sayl9YS5mbGFncyY9LTN9YiY0MDk2JiYoYS5mbGFncyY9LTQwOTcpfWZ1bmN0aW9uIGlrKGEsYixjKXtWPWE7amsoYSxiLGMpfVxuZnVuY3Rpb24gamsoYSxiLGMpe2Zvcih2YXIgZD0wIT09KGEubW9kZSYxKTtudWxsIT09Vjspe3ZhciBlPVYsZj1lLmNoaWxkO2lmKDIyPT09ZS50YWcmJmQpe3ZhciBnPW51bGwhPT1lLm1lbW9pemVkU3RhdGV8fEtqO2lmKCFnKXt2YXIgaD1lLmFsdGVybmF0ZSxrPW51bGwhPT1oJiZudWxsIT09aC5tZW1vaXplZFN0YXRlfHxVO2g9S2o7dmFyIGw9VTtLaj1nO2lmKChVPWspJiYhbClmb3IoVj1lO251bGwhPT1WOylnPVYsaz1nLmNoaWxkLDIyPT09Zy50YWcmJm51bGwhPT1nLm1lbW9pemVkU3RhdGU/a2soZSk6bnVsbCE9PWs/KGsucmV0dXJuPWcsVj1rKTprayhlKTtmb3IoO251bGwhPT1mOylWPWYsamsoZixiLGMpLGY9Zi5zaWJsaW5nO1Y9ZTtLaj1oO1U9bH1sayhhLGIsYyl9ZWxzZSAwIT09KGUuc3VidHJlZUZsYWdzJjg3NzIpJiZudWxsIT09Zj8oZi5yZXR1cm49ZSxWPWYpOmxrKGEsYixjKX19XG5mdW5jdGlvbiBsayhhKXtmb3IoO251bGwhPT1WOyl7dmFyIGI9VjtpZigwIT09KGIuZmxhZ3MmODc3Mikpe3ZhciBjPWIuYWx0ZXJuYXRlO3RyeXtpZigwIT09KGIuZmxhZ3MmODc3Mikpc3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlV8fFJqKDUsYik7YnJlYWs7Y2FzZSAxOnZhciBkPWIuc3RhdGVOb2RlO2lmKGIuZmxhZ3MmNCYmIVUpaWYobnVsbD09PWMpZC5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGU9Yi5lbGVtZW50VHlwZT09PWIudHlwZT9jLm1lbW9pemVkUHJvcHM6TGcoYi50eXBlLGMubWVtb2l6ZWRQcm9wcyk7ZC5jb21wb25lbnREaWRVcGRhdGUoZSxjLm1lbW9pemVkU3RhdGUsZC5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZSl9dmFyIGY9Yi51cGRhdGVRdWV1ZTtudWxsIT09ZiYmaWgoYixmLGQpO2JyZWFrO2Nhc2UgMzp2YXIgZz1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1nKXtjPW51bGw7aWYobnVsbCE9PWIuY2hpbGQpc3dpdGNoKGIuY2hpbGQudGFnKXtjYXNlIDU6Yz1cbmIuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTpjPWIuY2hpbGQuc3RhdGVOb2RlfWloKGIsZyxjKX1icmVhaztjYXNlIDU6dmFyIGg9Yi5zdGF0ZU5vZGU7aWYobnVsbD09PWMmJmIuZmxhZ3MmNCl7Yz1oO3ZhciBrPWIubWVtb2l6ZWRQcm9wcztzd2l0Y2goYi50eXBlKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOmsuYXV0b0ZvY3VzJiZjLmZvY3VzKCk7YnJlYWs7Y2FzZSBcImltZ1wiOmsuc3JjJiYoYy5zcmM9ay5zcmMpfX1icmVhaztjYXNlIDY6YnJlYWs7Y2FzZSA0OmJyZWFrO2Nhc2UgMTI6YnJlYWs7Y2FzZSAxMzppZihudWxsPT09Yi5tZW1vaXplZFN0YXRlKXt2YXIgbD1iLmFsdGVybmF0ZTtpZihudWxsIT09bCl7dmFyIG09bC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1tKXt2YXIgcT1tLmRlaHlkcmF0ZWQ7bnVsbCE9PXEmJmJkKHEpfX19YnJlYWs7Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjE6Y2FzZSAyMjpjYXNlIDIzOmNhc2UgMjU6YnJlYWs7XG5kZWZhdWx0OnRocm93IEVycm9yKHAoMTYzKSk7fVV8fGIuZmxhZ3MmNTEyJiZTaihiKX1jYXRjaChyKXtXKGIsYi5yZXR1cm4scil9fWlmKGI9PT1hKXtWPW51bGw7YnJlYWt9Yz1iLnNpYmxpbmc7aWYobnVsbCE9PWMpe2MucmV0dXJuPWIucmV0dXJuO1Y9YzticmVha31WPWIucmV0dXJufX1mdW5jdGlvbiBoayhhKXtmb3IoO251bGwhPT1WOyl7dmFyIGI9VjtpZihiPT09YSl7Vj1udWxsO2JyZWFrfXZhciBjPWIuc2libGluZztpZihudWxsIT09Yyl7Yy5yZXR1cm49Yi5yZXR1cm47Vj1jO2JyZWFrfVY9Yi5yZXR1cm59fVxuZnVuY3Rpb24ga2soYSl7Zm9yKDtudWxsIT09Vjspe3ZhciBiPVY7dHJ5e3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp2YXIgYz1iLnJldHVybjt0cnl7UmooNCxiKX1jYXRjaChrKXtXKGIsYyxrKX1icmVhaztjYXNlIDE6dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQpe3ZhciBlPWIucmV0dXJuO3RyeXtkLmNvbXBvbmVudERpZE1vdW50KCl9Y2F0Y2goayl7VyhiLGUsayl9fXZhciBmPWIucmV0dXJuO3RyeXtTaihiKX1jYXRjaChrKXtXKGIsZixrKX1icmVhaztjYXNlIDU6dmFyIGc9Yi5yZXR1cm47dHJ5e1NqKGIpfWNhdGNoKGspe1coYixnLGspfX19Y2F0Y2goayl7VyhiLGIucmV0dXJuLGspfWlmKGI9PT1hKXtWPW51bGw7YnJlYWt9dmFyIGg9Yi5zaWJsaW5nO2lmKG51bGwhPT1oKXtoLnJldHVybj1iLnJldHVybjtWPWg7YnJlYWt9Vj1iLnJldHVybn19XG52YXIgbWs9TWF0aC5jZWlsLG5rPXVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsb2s9dWEuUmVhY3RDdXJyZW50T3duZXIscGs9dWEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsSz0wLFI9bnVsbCxZPW51bGwsWj0wLGdqPTAsZmo9VWYoMCksVD0wLHFrPW51bGwsaGg9MCxyaz0wLHNrPTAsdGs9bnVsbCx1az1udWxsLGdrPTAsSGo9SW5maW5pdHksdms9bnVsbCxQaT0hMSxRaT1udWxsLFNpPW51bGwsd2s9ITEseGs9bnVsbCx5az0wLHprPTAsQWs9bnVsbCxCaz0tMSxDaz0wO2Z1bmN0aW9uIEwoKXtyZXR1cm4gMCE9PShLJjYpP0IoKTotMSE9PUJrP0JrOkJrPUIoKX1cbmZ1bmN0aW9uIGxoKGEpe2lmKDA9PT0oYS5tb2RlJjEpKXJldHVybiAxO2lmKDAhPT0oSyYyKSYmMCE9PVopcmV0dXJuIFomLVo7aWYobnVsbCE9PUtnLnRyYW5zaXRpb24pcmV0dXJuIDA9PT1DayYmKENrPXljKCkpLENrO2E9QztpZigwIT09YSlyZXR1cm4gYTthPXdpbmRvdy5ldmVudDthPXZvaWQgMD09PWE/MTY6amQoYS50eXBlKTtyZXR1cm4gYX1mdW5jdGlvbiBtaChhLGIsYyxkKXtpZig1MDx6ayl0aHJvdyB6az0wLEFrPW51bGwsRXJyb3IocCgxODUpKTtBYyhhLGMsZCk7aWYoMD09PShLJjIpfHxhIT09UilhPT09UiYmKDA9PT0oSyYyKSYmKHJrfD1jKSw0PT09VCYmRGsoYSxaKSksRWsoYSxkKSwxPT09YyYmMD09PUsmJjA9PT0oYi5tb2RlJjEpJiYoSGo9QigpKzUwMCxmZyYmamcoKSl9XG5mdW5jdGlvbiBFayhhLGIpe3ZhciBjPWEuY2FsbGJhY2tOb2RlO3djKGEsYik7dmFyIGQ9dWMoYSxhPT09Uj9aOjApO2lmKDA9PT1kKW51bGwhPT1jJiZiYyhjKSxhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tQcmlvcml0eT0wO2Vsc2UgaWYoYj1kJi1kLGEuY2FsbGJhY2tQcmlvcml0eSE9PWIpe251bGwhPWMmJmJjKGMpO2lmKDE9PT1iKTA9PT1hLnRhZz9pZyhGay5iaW5kKG51bGwsYSkpOmhnKEZrLmJpbmQobnVsbCxhKSksSmYoZnVuY3Rpb24oKXswPT09KEsmNikmJmpnKCl9KSxjPW51bGw7ZWxzZXtzd2l0Y2goRGMoZCkpe2Nhc2UgMTpjPWZjO2JyZWFrO2Nhc2UgNDpjPWdjO2JyZWFrO2Nhc2UgMTY6Yz1oYzticmVhaztjYXNlIDUzNjg3MDkxMjpjPWpjO2JyZWFrO2RlZmF1bHQ6Yz1oY31jPUdrKGMsSGsuYmluZChudWxsLGEpKX1hLmNhbGxiYWNrUHJpb3JpdHk9YjthLmNhbGxiYWNrTm9kZT1jfX1cbmZ1bmN0aW9uIEhrKGEsYil7Qms9LTE7Q2s9MDtpZigwIT09KEsmNikpdGhyb3cgRXJyb3IocCgzMjcpKTt2YXIgYz1hLmNhbGxiYWNrTm9kZTtpZihJaygpJiZhLmNhbGxiYWNrTm9kZSE9PWMpcmV0dXJuIG51bGw7dmFyIGQ9dWMoYSxhPT09Uj9aOjApO2lmKDA9PT1kKXJldHVybiBudWxsO2lmKDAhPT0oZCYzMCl8fDAhPT0oZCZhLmV4cGlyZWRMYW5lcyl8fGIpYj1KayhhLGQpO2Vsc2V7Yj1kO3ZhciBlPUs7S3w9Mjt2YXIgZj1LaygpO2lmKFIhPT1hfHxaIT09Yil2az1udWxsLEhqPUIoKSs1MDAsTGsoYSxiKTtkbyB0cnl7TWsoKTticmVha31jYXRjaChoKXtOayhhLGgpfXdoaWxlKDEpO1FnKCk7bmsuY3VycmVudD1mO0s9ZTtudWxsIT09WT9iPTA6KFI9bnVsbCxaPTAsYj1UKX1pZigwIT09Yil7Mj09PWImJihlPXhjKGEpLDAhPT1lJiYoZD1lLGI9T2soYSxlKSkpO2lmKDE9PT1iKXRocm93IGM9cWssTGsoYSwwKSxEayhhLGQpLEVrKGEsQigpKSxjO2lmKDY9PT1iKURrKGEsZCk7XG5lbHNle2U9YS5jdXJyZW50LmFsdGVybmF0ZTtpZigwPT09KGQmMzApJiYhUGsoZSkmJihiPUprKGEsZCksMj09PWImJihmPXhjKGEpLDAhPT1mJiYoZD1mLGI9T2soYSxmKSkpLDE9PT1iKSl0aHJvdyBjPXFrLExrKGEsMCksRGsoYSxkKSxFayhhLEIoKSksYzthLmZpbmlzaGVkV29yaz1lO2EuZmluaXNoZWRMYW5lcz1kO3N3aXRjaChiKXtjYXNlIDA6Y2FzZSAxOnRocm93IEVycm9yKHAoMzQ1KSk7Y2FzZSAyOlFrKGEsdWssdmspO2JyZWFrO2Nhc2UgMzpEayhhLGQpO2lmKChkJjEzMDAyMzQyNCk9PT1kJiYoYj1nays1MDAtQigpLDEwPGIpKXtpZigwIT09dWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmZCkhPT1kKXtMKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZlO2JyZWFrfWEudGltZW91dEhhbmRsZT1GZihRay5iaW5kKG51bGwsYSx1ayx2ayksYik7YnJlYWt9UWsoYSx1ayx2ayk7YnJlYWs7Y2FzZSA0OkRrKGEsZCk7aWYoKGQmNDE5NDI0MCk9PT1cbmQpYnJlYWs7Yj1hLmV2ZW50VGltZXM7Zm9yKGU9LTE7MDxkOyl7dmFyIGc9MzEtb2MoZCk7Zj0xPDxnO2c9YltnXTtnPmUmJihlPWcpO2QmPX5mfWQ9ZTtkPUIoKS1kO2Q9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqbWsoZC8xOTYwKSktZDtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9RmYoUWsuYmluZChudWxsLGEsdWssdmspLGQpO2JyZWFrfVFrKGEsdWssdmspO2JyZWFrO2Nhc2UgNTpRayhhLHVrLHZrKTticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHAoMzI5KSk7fX19RWsoYSxCKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWM/SGsuYmluZChudWxsLGEpOm51bGx9XG5mdW5jdGlvbiBPayhhLGIpe3ZhciBjPXRrO2EuY3VycmVudC5tZW1vaXplZFN0YXRlLmlzRGVoeWRyYXRlZCYmKExrKGEsYikuZmxhZ3N8PTI1Nik7YT1KayhhLGIpOzIhPT1hJiYoYj11ayx1az1jLG51bGwhPT1iJiZHaihiKSk7cmV0dXJuIGF9ZnVuY3Rpb24gR2ooYSl7bnVsbD09PXVrP3VrPWE6dWsucHVzaC5hcHBseSh1ayxhKX1cbmZ1bmN0aW9uIFBrKGEpe2Zvcih2YXIgYj1hOzspe2lmKGIuZmxhZ3MmMTYzODQpe3ZhciBjPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWMmJihjPWMuc3RvcmVzLG51bGwhPT1jKSlmb3IodmFyIGQ9MDtkPGMubGVuZ3RoO2QrKyl7dmFyIGU9Y1tkXSxmPWUuZ2V0U25hcHNob3Q7ZT1lLnZhbHVlO3RyeXtpZighSGUoZigpLGUpKXJldHVybiExfWNhdGNoKGcpe3JldHVybiExfX19Yz1iLmNoaWxkO2lmKGIuc3VidHJlZUZsYWdzJjE2Mzg0JiZudWxsIT09YyljLnJldHVybj1iLGI9YztlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7bnVsbD09PWIuc2libGluZzspe2lmKG51bGw9PT1iLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiEwO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuITB9XG5mdW5jdGlvbiBEayhhLGIpe2ImPX5zaztiJj1+cms7YS5zdXNwZW5kZWRMYW5lc3w9YjthLnBpbmdlZExhbmVzJj1+Yjtmb3IoYT1hLmV4cGlyYXRpb25UaW1lczswPGI7KXt2YXIgYz0zMS1vYyhiKSxkPTE8PGM7YVtjXT0tMTtiJj1+ZH19ZnVuY3Rpb24gRmsoYSl7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7SWsoKTt2YXIgYj11YyhhLDApO2lmKDA9PT0oYiYxKSlyZXR1cm4gRWsoYSxCKCkpLG51bGw7dmFyIGM9SmsoYSxiKTtpZigwIT09YS50YWcmJjI9PT1jKXt2YXIgZD14YyhhKTswIT09ZCYmKGI9ZCxjPU9rKGEsZCkpfWlmKDE9PT1jKXRocm93IGM9cWssTGsoYSwwKSxEayhhLGIpLEVrKGEsQigpKSxjO2lmKDY9PT1jKXRocm93IEVycm9yKHAoMzQ1KSk7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtRayhhLHVrLHZrKTtFayhhLEIoKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBSayhhLGIpe3ZhciBjPUs7S3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtLPWMsMD09PUsmJihIaj1CKCkrNTAwLGZnJiZqZygpKX19ZnVuY3Rpb24gU2soYSl7bnVsbCE9PXhrJiYwPT09eGsudGFnJiYwPT09KEsmNikmJklrKCk7dmFyIGI9SztLfD0xO3ZhciBjPXBrLnRyYW5zaXRpb24sZD1DO3RyeXtpZihway50cmFuc2l0aW9uPW51bGwsQz0xLGEpcmV0dXJuIGEoKX1maW5hbGx5e0M9ZCxway50cmFuc2l0aW9uPWMsSz1iLDA9PT0oSyY2KSYmamcoKX19ZnVuY3Rpb24gSWooKXtnaj1mai5jdXJyZW50O0UoZmopfVxuZnVuY3Rpb24gTGsoYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRMYW5lcz0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsR2YoYykpO2lmKG51bGwhPT1ZKWZvcihjPVkucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yzt3ZyhkKTtzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmJGYoKTticmVhaztjYXNlIDM6SmgoKTtFKFdmKTtFKEgpO09oKCk7YnJlYWs7Y2FzZSA1OkxoKGQpO2JyZWFrO2Nhc2UgNDpKaCgpO2JyZWFrO2Nhc2UgMTM6RShNKTticmVhaztjYXNlIDE5OkUoTSk7YnJlYWs7Y2FzZSAxMDpSZyhkLnR5cGUuX2NvbnRleHQpO2JyZWFrO2Nhc2UgMjI6Y2FzZSAyMzpJaigpfWM9Yy5yZXR1cm59Uj1hO1k9YT13aChhLmN1cnJlbnQsbnVsbCk7Wj1naj1iO1Q9MDtxaz1udWxsO3NrPXJrPWhoPTA7dWs9dGs9bnVsbDtpZihudWxsIT09V2cpe2ZvcihiPVxuMDtiPFdnLmxlbmd0aDtiKyspaWYoYz1XZ1tiXSxkPWMuaW50ZXJsZWF2ZWQsbnVsbCE9PWQpe2MuaW50ZXJsZWF2ZWQ9bnVsbDt2YXIgZT1kLm5leHQsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe3ZhciBnPWYubmV4dDtmLm5leHQ9ZTtkLm5leHQ9Z31jLnBlbmRpbmc9ZH1XZz1udWxsfXJldHVybiBhfVxuZnVuY3Rpb24gTmsoYSxiKXtkb3t2YXIgYz1ZO3RyeXtRZygpO1BoLmN1cnJlbnQ9YWk7aWYoU2gpe2Zvcih2YXIgZD1OLm1lbW9pemVkU3RhdGU7bnVsbCE9PWQ7KXt2YXIgZT1kLnF1ZXVlO251bGwhPT1lJiYoZS5wZW5kaW5nPW51bGwpO2Q9ZC5uZXh0fVNoPSExfVJoPTA7UD1PPU49bnVsbDtUaD0hMTtVaD0wO29rLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtUPTE7cWs9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1aO2guZmxhZ3N8PTMyNzY4O2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWssbT1oLHE9bS50YWc7aWYoMD09PShtLm1vZGUmMSkmJigwPT09cXx8MTE9PT1xfHwxNT09PXEpKXt2YXIgcj1tLmFsdGVybmF0ZTtyPyhtLnVwZGF0ZVF1ZXVlPXIudXBkYXRlUXVldWUsbS5tZW1vaXplZFN0YXRlPXIubWVtb2l6ZWRTdGF0ZSxcbm0ubGFuZXM9ci5sYW5lcyk6KG0udXBkYXRlUXVldWU9bnVsbCxtLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIHk9VmkoZyk7aWYobnVsbCE9PXkpe3kuZmxhZ3MmPS0yNTc7V2koeSxnLGgsZixiKTt5Lm1vZGUmMSYmVGkoZixsLGIpO2I9eTtrPWw7dmFyIG49Yi51cGRhdGVRdWV1ZTtpZihudWxsPT09bil7dmFyIHQ9bmV3IFNldDt0LmFkZChrKTtiLnVwZGF0ZVF1ZXVlPXR9ZWxzZSBuLmFkZChrKTticmVhayBhfWVsc2V7aWYoMD09PShiJjEpKXtUaShmLGwsYik7dWooKTticmVhayBhfWs9RXJyb3IocCg0MjYpKX19ZWxzZSBpZihJJiZoLm1vZGUmMSl7dmFyIEo9VmkoZyk7aWYobnVsbCE9PUopezA9PT0oSi5mbGFncyY2NTUzNikmJihKLmZsYWdzfD0yNTYpO1dpKEosZyxoLGYsYik7SmcoS2koayxoKSk7YnJlYWsgYX19Zj1rPUtpKGssaCk7NCE9PVQmJihUPTIpO251bGw9PT10az90az1bZl06dGsucHVzaChmKTtmPWc7ZG97c3dpdGNoKGYudGFnKXtjYXNlIDM6Zi5mbGFnc3w9NjU1MzY7XG5iJj0tYjtmLmxhbmVzfD1iO3ZhciB4PU9pKGYsayxiKTtmaChmLHgpO2JyZWFrIGE7Y2FzZSAxOmg9azt2YXIgdz1mLnR5cGUsdT1mLnN0YXRlTm9kZTtpZigwPT09KGYuZmxhZ3MmMTI4KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3LmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PXUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB1LmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVNpfHwhU2kuaGFzKHUpKSkpe2YuZmxhZ3N8PTY1NTM2O2ImPS1iO2YubGFuZXN8PWI7dmFyIEY9UmkoZixoLGIpO2ZoKGYsRik7YnJlYWsgYX19Zj1mLnJldHVybn13aGlsZShudWxsIT09Zil9VGsoYyl9Y2F0Y2gobmEpe2I9bmE7WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1mdW5jdGlvbiBLaygpe3ZhciBhPW5rLmN1cnJlbnQ7bmsuY3VycmVudD1haTtyZXR1cm4gbnVsbD09PWE/YWk6YX1cbmZ1bmN0aW9uIHVqKCl7aWYoMD09PVR8fDM9PT1UfHwyPT09VClUPTQ7bnVsbD09PVJ8fDA9PT0oaGgmMjY4NDM1NDU1KSYmMD09PShyayYyNjg0MzU0NTUpfHxEayhSLFopfWZ1bmN0aW9uIEprKGEsYil7dmFyIGM9SztLfD0yO3ZhciBkPUtrKCk7aWYoUiE9PWF8fFohPT1iKXZrPW51bGwsTGsoYSxiKTtkbyB0cnl7VWsoKTticmVha31jYXRjaChlKXtOayhhLGUpfXdoaWxlKDEpO1FnKCk7Sz1jO25rLmN1cnJlbnQ9ZDtpZihudWxsIT09WSl0aHJvdyBFcnJvcihwKDI2MSkpO1I9bnVsbDtaPTA7cmV0dXJuIFR9ZnVuY3Rpb24gVWsoKXtmb3IoO251bGwhPT1ZOylWayhZKX1mdW5jdGlvbiBNaygpe2Zvcig7bnVsbCE9PVkmJiFjYygpOylWayhZKX1mdW5jdGlvbiBWayhhKXt2YXIgYj1XayhhLmFsdGVybmF0ZSxhLGdqKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWI/VGsoYSk6WT1iO29rLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFRrKGEpe3ZhciBiPWE7ZG97dmFyIGM9Yi5hbHRlcm5hdGU7YT1iLnJldHVybjtpZigwPT09KGIuZmxhZ3MmMzI3NjgpKXtpZihjPUZqKGMsYixnaiksbnVsbCE9PWMpe1k9YztyZXR1cm59fWVsc2V7Yz1KaihjLGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0zMjc2NztZPWM7cmV0dXJufWlmKG51bGwhPT1hKWEuZmxhZ3N8PTMyNzY4LGEuc3VidHJlZUZsYWdzPTAsYS5kZWxldGlvbnM9bnVsbDtlbHNle1Q9NjtZPW51bGw7cmV0dXJufX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVQmJihUPTUpfWZ1bmN0aW9uIFFrKGEsYixjKXt2YXIgZD1DLGU9cGsudHJhbnNpdGlvbjt0cnl7cGsudHJhbnNpdGlvbj1udWxsLEM9MSxYayhhLGIsYyxkKX1maW5hbGx5e3BrLnRyYW5zaXRpb249ZSxDPWR9cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBYayhhLGIsYyxkKXtkbyBJaygpO3doaWxlKG51bGwhPT14ayk7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzI3KSk7Yz1hLmZpbmlzaGVkV29yazt2YXIgZT1hLmZpbmlzaGVkTGFuZXM7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHAoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDthLmNhbGxiYWNrUHJpb3JpdHk9MDt2YXIgZj1jLmxhbmVzfGMuY2hpbGRMYW5lcztCYyhhLGYpO2E9PT1SJiYoWT1SPW51bGwsWj0wKTswPT09KGMuc3VidHJlZUZsYWdzJjIwNjQpJiYwPT09KGMuZmxhZ3MmMjA2NCl8fHdrfHwod2s9ITAsR2soaGMsZnVuY3Rpb24oKXtJaygpO3JldHVybiBudWxsfSkpO2Y9MCE9PShjLmZsYWdzJjE1OTkwKTtpZigwIT09KGMuc3VidHJlZUZsYWdzJjE1OTkwKXx8Zil7Zj1way50cmFuc2l0aW9uO3BrLnRyYW5zaXRpb249bnVsbDtcbnZhciBnPUM7Qz0xO3ZhciBoPUs7S3w9NDtvay5jdXJyZW50PW51bGw7UGooYSxjKTtlayhjLGEpO09lKERmKTtkZD0hIUNmO0RmPUNmPW51bGw7YS5jdXJyZW50PWM7aWsoYyxhLGUpO2RjKCk7Sz1oO0M9Zztway50cmFuc2l0aW9uPWZ9ZWxzZSBhLmN1cnJlbnQ9Yzt3ayYmKHdrPSExLHhrPWEseWs9ZSk7Zj1hLnBlbmRpbmdMYW5lczswPT09ZiYmKFNpPW51bGwpO21jKGMuc3RhdGVOb2RlLGQpO0VrKGEsQigpKTtpZihudWxsIT09Yilmb3IoZD1hLm9uUmVjb3ZlcmFibGVFcnJvcixjPTA7YzxiLmxlbmd0aDtjKyspZT1iW2NdLGQoZS52YWx1ZSx7Y29tcG9uZW50U3RhY2s6ZS5zdGFjayxkaWdlc3Q6ZS5kaWdlc3R9KTtpZihQaSl0aHJvdyBQaT0hMSxhPVFpLFFpPW51bGwsYTswIT09KHlrJjEpJiYwIT09YS50YWcmJklrKCk7Zj1hLnBlbmRpbmdMYW5lczswIT09KGYmMSk/YT09PUFrP3prKys6KHprPTAsQWs9YSk6ems9MDtqZygpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gSWsoKXtpZihudWxsIT09eGspe3ZhciBhPURjKHlrKSxiPXBrLnRyYW5zaXRpb24sYz1DO3RyeXtway50cmFuc2l0aW9uPW51bGw7Qz0xNj5hPzE2OmE7aWYobnVsbD09PXhrKXZhciBkPSExO2Vsc2V7YT14azt4az1udWxsO3lrPTA7aWYoMCE9PShLJjYpKXRocm93IEVycm9yKHAoMzMxKSk7dmFyIGU9SztLfD00O2ZvcihWPWEuY3VycmVudDtudWxsIT09Vjspe3ZhciBmPVYsZz1mLmNoaWxkO2lmKDAhPT0oVi5mbGFncyYxNikpe3ZhciBoPWYuZGVsZXRpb25zO2lmKG51bGwhPT1oKXtmb3IodmFyIGs9MDtrPGgubGVuZ3RoO2srKyl7dmFyIGw9aFtrXTtmb3IoVj1sO251bGwhPT1WOyl7dmFyIG09Vjtzd2l0Y2gobS50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6UWooOCxtLGYpfXZhciBxPW0uY2hpbGQ7aWYobnVsbCE9PXEpcS5yZXR1cm49bSxWPXE7ZWxzZSBmb3IoO251bGwhPT1WOyl7bT1WO3ZhciByPW0uc2libGluZyx5PW0ucmV0dXJuO1RqKG0pO2lmKG09PT1cbmwpe1Y9bnVsbDticmVha31pZihudWxsIT09cil7ci5yZXR1cm49eTtWPXI7YnJlYWt9Vj15fX19dmFyIG49Zi5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe3ZhciB0PW4uY2hpbGQ7aWYobnVsbCE9PXQpe24uY2hpbGQ9bnVsbDtkb3t2YXIgSj10LnNpYmxpbmc7dC5zaWJsaW5nPW51bGw7dD1KfXdoaWxlKG51bGwhPT10KX19Vj1mfX1pZigwIT09KGYuc3VidHJlZUZsYWdzJjIwNjQpJiZudWxsIT09ZylnLnJldHVybj1mLFY9ZztlbHNlIGI6Zm9yKDtudWxsIT09Vjspe2Y9VjtpZigwIT09KGYuZmxhZ3MmMjA0OCkpc3dpdGNoKGYudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OlFqKDksZixmLnJldHVybil9dmFyIHg9Zi5zaWJsaW5nO2lmKG51bGwhPT14KXt4LnJldHVybj1mLnJldHVybjtWPXg7YnJlYWsgYn1WPWYucmV0dXJufX12YXIgdz1hLmN1cnJlbnQ7Zm9yKFY9dztudWxsIT09Vjspe2c9Vjt2YXIgdT1nLmNoaWxkO2lmKDAhPT0oZy5zdWJ0cmVlRmxhZ3MmMjA2NCkmJm51bGwhPT1cbnUpdS5yZXR1cm49ZyxWPXU7ZWxzZSBiOmZvcihnPXc7bnVsbCE9PVY7KXtoPVY7aWYoMCE9PShoLmZsYWdzJjIwNDgpKXRyeXtzd2l0Y2goaC50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6UmooOSxoKX19Y2F0Y2gobmEpe1coaCxoLnJldHVybixuYSl9aWYoaD09PWcpe1Y9bnVsbDticmVhayBifXZhciBGPWguc2libGluZztpZihudWxsIT09Ril7Ri5yZXR1cm49aC5yZXR1cm47Vj1GO2JyZWFrIGJ9Vj1oLnJldHVybn19Sz1lO2pnKCk7aWYobGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBsYy5vblBvc3RDb21taXRGaWJlclJvb3QpdHJ5e2xjLm9uUG9zdENvbW1pdEZpYmVyUm9vdChrYyxhKX1jYXRjaChuYSl7fWQ9ITB9cmV0dXJuIGR9ZmluYWxseXtDPWMscGsudHJhbnNpdGlvbj1ifX1yZXR1cm4hMX1mdW5jdGlvbiBZayhhLGIsYyl7Yj1LaShjLGIpO2I9T2koYSxiLDEpO2E9ZGgoYSxiLDEpO2I9TCgpO251bGwhPT1hJiYoQWMoYSwxLGIpLEVrKGEsYikpfVxuZnVuY3Rpb24gVyhhLGIsYyl7aWYoMz09PWEudGFnKVlrKGEsYSxjKTtlbHNlIGZvcig7bnVsbCE9PWI7KXtpZigzPT09Yi50YWcpe1lrKGIsYSxjKTticmVha31lbHNlIGlmKDE9PT1iLnRhZyl7dmFyIGQ9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVNpfHwhU2kuaGFzKGQpKSl7YT1LaShjLGEpO2E9UmkoYixhLDEpO2I9ZGgoYixhLDEpO2E9TCgpO251bGwhPT1iJiYoQWMoYiwxLGEpLEVrKGIsYSkpO2JyZWFrfX1iPWIucmV0dXJufX1cbmZ1bmN0aW9uIFVpKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7Yj1MKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1I9PT1hJiYoWiZjKT09PWMmJig0PT09VHx8Mz09PVQmJihaJjEzMDAyMzQyNCk9PT1aJiY1MDA+QigpLWdrP0xrKGEsMCk6c2t8PWMpO0VrKGEsYil9ZnVuY3Rpb24gWmsoYSxiKXswPT09YiYmKDA9PT0oYS5tb2RlJjEpP2I9MTooYj1zYyxzYzw8PTEsMD09PShzYyYxMzAwMjM0MjQpJiYoc2M9NDE5NDMwNCkpKTt2YXIgYz1MKCk7YT1aZyhhLGIpO251bGwhPT1hJiYoQWMoYSxiLGMpLEVrKGEsYykpfWZ1bmN0aW9uIHZqKGEpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZSxjPTA7bnVsbCE9PWImJihjPWIucmV0cnlMYW5lKTtaayhhLGMpfVxuZnVuY3Rpb24gY2soYSxiKXt2YXIgYz0wO3N3aXRjaChhLnRhZyl7Y2FzZSAxMzp2YXIgZD1hLnN0YXRlTm9kZTt2YXIgZT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihjPWUucmV0cnlMYW5lKTticmVhaztjYXNlIDE5OmQ9YS5zdGF0ZU5vZGU7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihwKDMxNCkpO31udWxsIT09ZCYmZC5kZWxldGUoYik7WmsoYSxjKX12YXIgV2s7XG5Xaz1mdW5jdGlvbihhLGIsYyl7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fFdmLmN1cnJlbnQpVWc9ITA7ZWxzZXtpZigwPT09KGEubGFuZXMmYykmJjA9PT0oYi5mbGFncyYxMjgpKXJldHVybiBVZz0hMSx6aihhLGIsYyk7VWc9MCE9PShhLmZsYWdzJjEzMTA3Mik/ITA6ITF9ZWxzZSBVZz0hMSxJJiYwIT09KGIuZmxhZ3MmMTA0ODU3NikmJnVnKGIsbmcsYi5pbmRleCk7Yi5sYW5lcz0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOnZhciBkPWIudHlwZTtqaihhLGIpO2E9Yi5wZW5kaW5nUHJvcHM7dmFyIGU9WWYoYixILmN1cnJlbnQpO1RnKGIsYyk7ZT1YaChudWxsLGIsZCxhLGUsYyk7dmFyIGY9YmkoKTtiLmZsYWdzfD0xO1wib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZj8oYi50YWc9MSxiLm1lbW9pemVkU3RhdGU9bnVsbCxiLnVwZGF0ZVF1ZXVlPVxubnVsbCxaZihkKT8oZj0hMCxjZyhiKSk6Zj0hMSxiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsLGFoKGIpLGUudXBkYXRlcj1uaCxiLnN0YXRlTm9kZT1lLGUuX3JlYWN0SW50ZXJuYWxzPWIscmgoYixkLGEsYyksYj1raihudWxsLGIsZCwhMCxmLGMpKTooYi50YWc9MCxJJiZmJiZ2ZyhiKSxZaShudWxsLGIsZSxjKSxiPWIuY2hpbGQpO3JldHVybiBiO2Nhc2UgMTY6ZD1iLmVsZW1lbnRUeXBlO2E6e2pqKGEsYik7YT1iLnBlbmRpbmdQcm9wcztlPWQuX2luaXQ7ZD1lKGQuX3BheWxvYWQpO2IudHlwZT1kO2U9Yi50YWc9JGsoZCk7YT1MZyhkLGEpO3N3aXRjaChlKXtjYXNlIDA6Yj1kaihudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9aWoobnVsbCxiLGQsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1aaShudWxsLGIsZCxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWFqKG51bGwsYixkLExnKGQudHlwZSxhKSxjKTticmVhayBhfXRocm93IEVycm9yKHAoMzA2LFxuZCxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxkaihhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxpaihhLGIsZCxlLGMpO2Nhc2UgMzphOntsaihiKTtpZihudWxsPT09YSl0aHJvdyBFcnJvcihwKDM4NykpO2Q9Yi5wZW5kaW5nUHJvcHM7Zj1iLm1lbW9pemVkU3RhdGU7ZT1mLmVsZW1lbnQ7YmgoYSxiKTtnaChiLGQsbnVsbCxjKTt2YXIgZz1iLm1lbW9pemVkU3RhdGU7ZD1nLmVsZW1lbnQ7aWYoZi5pc0RlaHlkcmF0ZWQpaWYoZj17ZWxlbWVudDpkLGlzRGVoeWRyYXRlZDohMSxjYWNoZTpnLmNhY2hlLHBlbmRpbmdTdXNwZW5zZUJvdW5kYXJpZXM6Zy5wZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzLHRyYW5zaXRpb25zOmcudHJhbnNpdGlvbnN9LGIudXBkYXRlUXVldWUuYmFzZVN0YXRlPVxuZixiLm1lbW9pemVkU3RhdGU9ZixiLmZsYWdzJjI1Nil7ZT1LaShFcnJvcihwKDQyMykpLGIpO2I9bWooYSxiLGQsYyxlKTticmVhayBhfWVsc2UgaWYoZCE9PWUpe2U9S2koRXJyb3IocCg0MjQpKSxiKTtiPW1qKGEsYixkLGMsZSk7YnJlYWsgYX1lbHNlIGZvcih5Zz1MZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLHhnPWIsST0hMCx6Zz1udWxsLGM9Q2goYixudWxsLGQsYyksYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3w0MDk2LGM9Yy5zaWJsaW5nO2Vsc2V7SWcoKTtpZihkPT09ZSl7Yj0kaShhLGIsYyk7YnJlYWsgYX1ZaShhLGIsZCxjKX1iPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBLaChiKSxudWxsPT09YSYmRWcoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixFZihkLGUpP2c9bnVsbDpudWxsIT09ZiYmRWYoZCxmKSYmKGIuZmxhZ3N8PTMyKSxcbmhqKGEsYiksWWkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZFZyhiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHBqKGEsYixjKTtjYXNlIDQ6cmV0dXJuIEloKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPUJoKGIsbnVsbCxkLGMpOllpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6TGcoZCxlKSxaaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gWWkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBZaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBZaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zj1iLm1lbW9pemVkUHJvcHM7XG5nPWUudmFsdWU7RyhNZyxkLl9jdXJyZW50VmFsdWUpO2QuX2N1cnJlbnRWYWx1ZT1nO2lmKG51bGwhPT1mKWlmKEhlKGYudmFsdWUsZykpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhV2YuY3VycmVudCl7Yj0kaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoZj1iLmNoaWxkLG51bGwhPT1mJiYoZi5yZXR1cm49Yik7bnVsbCE9PWY7KXt2YXIgaD1mLmRlcGVuZGVuY2llcztpZihudWxsIT09aCl7Zz1mLmNoaWxkO2Zvcih2YXIgaz1oLmZpcnN0Q29udGV4dDtudWxsIT09azspe2lmKGsuY29udGV4dD09PWQpe2lmKDE9PT1mLnRhZyl7az1jaCgtMSxjJi1jKTtrLnRhZz0yO3ZhciBsPWYudXBkYXRlUXVldWU7aWYobnVsbCE9PWwpe2w9bC5zaGFyZWQ7dmFyIG09bC5wZW5kaW5nO251bGw9PT1tP2submV4dD1rOihrLm5leHQ9bS5uZXh0LG0ubmV4dD1rKTtsLnBlbmRpbmc9a319Zi5sYW5lc3w9YztrPWYuYWx0ZXJuYXRlO251bGwhPT1rJiYoay5sYW5lc3w9Yyk7U2coZi5yZXR1cm4sXG5jLGIpO2gubGFuZXN8PWM7YnJlYWt9az1rLm5leHR9fWVsc2UgaWYoMTA9PT1mLnRhZylnPWYudHlwZT09PWIudHlwZT9udWxsOmYuY2hpbGQ7ZWxzZSBpZigxOD09PWYudGFnKXtnPWYucmV0dXJuO2lmKG51bGw9PT1nKXRocm93IEVycm9yKHAoMzQxKSk7Zy5sYW5lc3w9YztoPWcuYWx0ZXJuYXRlO251bGwhPT1oJiYoaC5sYW5lc3w9Yyk7U2coZyxjLGIpO2c9Zi5zaWJsaW5nfWVsc2UgZz1mLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWY7ZWxzZSBmb3IoZz1mO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31mPWcuc2libGluZztpZihudWxsIT09Zil7Zi5yZXR1cm49Zy5yZXR1cm47Zz1mO2JyZWFrfWc9Zy5yZXR1cm59Zj1nfVlpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGQ9Yi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sVGcoYixjKSxlPVZnKGUpLGQ9ZChlKSxiLmZsYWdzfD0xLFlpKGEsYixkLGMpLFxuYi5jaGlsZDtjYXNlIDE0OnJldHVybiBkPWIudHlwZSxlPUxnKGQsYi5wZW5kaW5nUHJvcHMpLGU9TGcoZC50eXBlLGUpLGFqKGEsYixkLGUsYyk7Y2FzZSAxNTpyZXR1cm4gY2ooYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpMZyhkLGUpLGpqKGEsYiksYi50YWc9MSxaZihkKT8oYT0hMCxjZyhiKSk6YT0hMSxUZyhiLGMpLHBoKGIsZCxlKSxyaChiLGQsZSxjKSxraihudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIHlqKGEsYixjKTtjYXNlIDIyOnJldHVybiBlaihhLGIsYyl9dGhyb3cgRXJyb3IocCgxNTYsYi50YWcpKTt9O2Z1bmN0aW9uIEdrKGEsYil7cmV0dXJuIGFjKGEsYil9XG5mdW5jdGlvbiBhbChhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuc3VidHJlZUZsYWdzPXRoaXMuZmxhZ3M9MDt0aGlzLmRlbGV0aW9ucz1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBCZyhhLGIsYyxkKXtyZXR1cm4gbmV3IGFsKGEsYixjLGQpfWZ1bmN0aW9uIGJqKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiAkayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYmooYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PURhKXJldHVybiAxMTtpZihhPT09R2EpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gd2goYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1CZyhhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLnN1YnRyZWVGbGFncz0wLGMuZGVsZXRpb25zPW51bGwpO2MuZmxhZ3M9YS5mbGFncyYxNDY4MDA2NDtjLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzO2MubGFuZXM9YS5sYW5lcztjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2xhbmVzOmIubGFuZXMsZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0fTtcbmMuc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24geWgoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWJqKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHlhOnJldHVybiBBaChjLmNoaWxkcmVuLGUsZixiKTtjYXNlIHphOmc9ODtlfD04O2JyZWFrO2Nhc2UgQWE6cmV0dXJuIGE9QmcoMTIsYyxiLGV8MiksYS5lbGVtZW50VHlwZT1BYSxhLmxhbmVzPWYsYTtjYXNlIEVhOnJldHVybiBhPUJnKDEzLGMsYixlKSxhLmVsZW1lbnRUeXBlPUVhLGEubGFuZXM9ZixhO2Nhc2UgRmE6cmV0dXJuIGE9QmcoMTksYyxiLGUpLGEuZWxlbWVudFR5cGU9RmEsYS5sYW5lcz1mLGE7Y2FzZSBJYTpyZXR1cm4gcWooYyxlLGYsYik7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIEJhOmc9MTA7YnJlYWsgYTtjYXNlIENhOmc9OTticmVhayBhO2Nhc2UgRGE6Zz0xMTtcbmJyZWFrIGE7Y2FzZSBHYTpnPTE0O2JyZWFrIGE7Y2FzZSBIYTpnPTE2O2Q9bnVsbDticmVhayBhfXRocm93IEVycm9yKHAoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9QmcoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBBaChhLGIsYyxkKXthPUJnKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBxaihhLGIsYyxkKXthPUJnKDIyLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YzthLnN0YXRlTm9kZT17aXNIaWRkZW46ITF9O3JldHVybiBhfWZ1bmN0aW9uIHhoKGEsYixjKXthPUJnKDYsYSxudWxsLGIpO2EubGFuZXM9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIHpoKGEsYixjKXtiPUJnKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmxhbmVzPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gYmwoYSxiLGMsZCxlKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLmNhbGxiYWNrTm9kZT10aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz16YygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz16YygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz16YygwKTt0aGlzLmlkZW50aWZpZXJQcmVmaXg9ZDt0aGlzLm9uUmVjb3ZlcmFibGVFcnJvcj1lO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1cbm51bGx9ZnVuY3Rpb24gY2woYSxiLGMsZCxlLGYsZyxoLGspe2E9bmV3IGJsKGEsYixjLGgsayk7MT09PWI/KGI9MSwhMD09PWYmJihifD04KSk6Yj0wO2Y9QmcoMyxudWxsLG51bGwsYik7YS5jdXJyZW50PWY7Zi5zdGF0ZU5vZGU9YTtmLm1lbW9pemVkU3RhdGU9e2VsZW1lbnQ6ZCxpc0RlaHlkcmF0ZWQ6YyxjYWNoZTpudWxsLHRyYW5zaXRpb25zOm51bGwscGVuZGluZ1N1c3BlbnNlQm91bmRhcmllczpudWxsfTthaChmKTtyZXR1cm4gYX1mdW5jdGlvbiBkbChhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOndhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxuZnVuY3Rpb24gZWwoYSl7aWYoIWEpcmV0dXJuIFZmO2E9YS5fcmVhY3RJbnRlcm5hbHM7YTp7aWYoVmIoYSkhPT1hfHwxIT09YS50YWcpdGhyb3cgRXJyb3IocCgxNzApKTt2YXIgYj1hO2Rve3N3aXRjaChiLnRhZyl7Y2FzZSAzOmI9Yi5zdGF0ZU5vZGUuY29udGV4dDticmVhayBhO2Nhc2UgMTppZihaZihiLnR5cGUpKXtiPWIuc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGF9fWI9Yi5yZXR1cm59d2hpbGUobnVsbCE9PWIpO3Rocm93IEVycm9yKHAoMTcxKSk7fWlmKDE9PT1hLnRhZyl7dmFyIGM9YS50eXBlO2lmKFpmKGMpKXJldHVybiBiZyhhLGMsYil9cmV0dXJuIGJ9XG5mdW5jdGlvbiBmbChhLGIsYyxkLGUsZixnLGgsayl7YT1jbChjLGQsITAsYSxlLGYsZyxoLGspO2EuY29udGV4dD1lbChudWxsKTtjPWEuY3VycmVudDtkPUwoKTtlPWxoKGMpO2Y9Y2goZCxlKTtmLmNhbGxiYWNrPXZvaWQgMCE9PWImJm51bGwhPT1iP2I6bnVsbDtkaChjLGYsZSk7YS5jdXJyZW50LmxhbmVzPWU7QWMoYSxlLGQpO0VrKGEsZCk7cmV0dXJuIGF9ZnVuY3Rpb24gZ2woYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9TCgpLGc9bGgoZSk7Yz1lbChjKTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWNoKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09ZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO2E9ZGgoZSxiLGcpO251bGwhPT1hJiYobWgoYSxlLGcsZiksZWgoYSxlLGcpKTtyZXR1cm4gZ31cbmZ1bmN0aW9uIGhsKGEpe2E9YS5jdXJyZW50O2lmKCFhLmNoaWxkKXJldHVybiBudWxsO3N3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZTtkZWZhdWx0OnJldHVybiBhLmNoaWxkLnN0YXRlTm9kZX19ZnVuY3Rpb24gaWwoYSxiKXthPWEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YSYmbnVsbCE9PWEuZGVoeWRyYXRlZCl7dmFyIGM9YS5yZXRyeUxhbmU7YS5yZXRyeUxhbmU9MCE9PWMmJmM8Yj9jOmJ9fWZ1bmN0aW9uIGpsKGEsYil7aWwoYSxiKTsoYT1hLmFsdGVybmF0ZSkmJmlsKGEsYil9ZnVuY3Rpb24ga2woKXtyZXR1cm4gbnVsbH12YXIgbGw9XCJmdW5jdGlvblwiPT09dHlwZW9mIHJlcG9ydEVycm9yP3JlcG9ydEVycm9yOmZ1bmN0aW9uKGEpe2NvbnNvbGUuZXJyb3IoYSl9O2Z1bmN0aW9uIG1sKGEpe3RoaXMuX2ludGVybmFsUm9vdD1hfVxubmwucHJvdG90eXBlLnJlbmRlcj1tbC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2ludGVybmFsUm9vdDtpZihudWxsPT09Yil0aHJvdyBFcnJvcihwKDQwOSkpO2dsKGEsYixudWxsLG51bGwpfTtubC5wcm90b3R5cGUudW5tb3VudD1tbC5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdDtpZihudWxsIT09YSl7dGhpcy5faW50ZXJuYWxSb290PW51bGw7dmFyIGI9YS5jb250YWluZXJJbmZvO1NrKGZ1bmN0aW9uKCl7Z2wobnVsbCxhLG51bGwsbnVsbCl9KTtiW3VmXT1udWxsfX07ZnVuY3Rpb24gbmwoYSl7dGhpcy5faW50ZXJuYWxSb290PWF9XG5ubC5wcm90b3R5cGUudW5zdGFibGVfc2NoZWR1bGVIeWRyYXRpb249ZnVuY3Rpb24oYSl7aWYoYSl7dmFyIGI9SGMoKTthPXtibG9ja2VkT246bnVsbCx0YXJnZXQ6YSxwcmlvcml0eTpifTtmb3IodmFyIGM9MDtjPFFjLmxlbmd0aCYmMCE9PWImJmI8UWNbY10ucHJpb3JpdHk7YysrKTtRYy5zcGxpY2UoYywwLGEpOzA9PT1jJiZWYyhhKX19O2Z1bmN0aW9uIG9sKGEpe3JldHVybiEoIWF8fDEhPT1hLm5vZGVUeXBlJiY5IT09YS5ub2RlVHlwZSYmMTEhPT1hLm5vZGVUeXBlKX1mdW5jdGlvbiBwbChhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24gcWwoKXt9XG5mdW5jdGlvbiBybChhLGIsYyxkLGUpe2lmKGUpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZj1kO2Q9ZnVuY3Rpb24oKXt2YXIgYT1obChnKTtmLmNhbGwoYSl9fXZhciBnPWZsKGIsZCxhLDAsbnVsbCwhMSwhMSxcIlwiLHFsKTthLl9yZWFjdFJvb3RDb250YWluZXI9ZzthW3VmXT1nLmN1cnJlbnQ7c2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO1NrKCk7cmV0dXJuIGd9Zm9yKDtlPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGUpO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgaD1kO2Q9ZnVuY3Rpb24oKXt2YXIgYT1obChrKTtoLmNhbGwoYSl9fXZhciBrPWNsKGEsMCwhMSxudWxsLG51bGwsITEsITEsXCJcIixxbCk7YS5fcmVhY3RSb290Q29udGFpbmVyPWs7YVt1Zl09ay5jdXJyZW50O3NmKDg9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphKTtTayhmdW5jdGlvbigpe2dsKGIsayxjLGQpfSk7cmV0dXJuIGt9XG5mdW5jdGlvbiBzbChhLGIsYyxkLGUpe3ZhciBmPWMuX3JlYWN0Um9vdENvbnRhaW5lcjtpZihmKXt2YXIgZz1mO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1obChnKTtoLmNhbGwoYSl9fWdsKGIsZyxhLGUpfWVsc2UgZz1ybChjLGIsYSxlLGQpO3JldHVybiBobChnKX1FYz1mdW5jdGlvbihhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMzp2YXIgYj1hLnN0YXRlTm9kZTtpZihiLmN1cnJlbnQubWVtb2l6ZWRTdGF0ZS5pc0RlaHlkcmF0ZWQpe3ZhciBjPXRjKGIucGVuZGluZ0xhbmVzKTswIT09YyYmKENjKGIsY3wxKSxFayhiLEIoKSksMD09PShLJjYpJiYoSGo9QigpKzUwMCxqZygpKSl9YnJlYWs7Y2FzZSAxMzpTayhmdW5jdGlvbigpe3ZhciBiPVpnKGEsMSk7aWYobnVsbCE9PWIpe3ZhciBjPUwoKTttaChiLGEsMSxjKX19KSxqbChhLDEpfX07XG5GYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1aZyhhLDEzNDIxNzcyOCk7aWYobnVsbCE9PWIpe3ZhciBjPUwoKTttaChiLGEsMTM0MjE3NzI4LGMpfWpsKGEsMTM0MjE3NzI4KX19O0djPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWxoKGEpLGM9WmcoYSxiKTtpZihudWxsIT09Yyl7dmFyIGQ9TCgpO21oKGMsYSxiLGQpfWpsKGEsYil9fTtIYz1mdW5jdGlvbigpe3JldHVybiBDfTtJYz1mdW5jdGlvbihhLGIpe3ZhciBjPUM7dHJ5e3JldHVybiBDPWEsYigpfWZpbmFsbHl7Qz1jfX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmJiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcihwKDkwKSk7V2EoZCk7YmIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVJrO0hiPVNrO1xudmFyIHRsPXt1c2luZ0NsaWVudEVudHJ5UG9pbnQ6ITEsRXZlbnRzOltDYix1ZSxEYixFYixGYixSa119LHVsPXtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTpXYyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE4LjIuMFwiLHJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn07XG52YXIgdmw9e2J1bmRsZVR5cGU6dWwuYnVuZGxlVHlwZSx2ZXJzaW9uOnVsLnZlcnNpb24scmVuZGVyZXJQYWNrYWdlTmFtZTp1bC5yZW5kZXJlclBhY2thZ2VOYW1lLHJlbmRlcmVyQ29uZmlnOnVsLnJlbmRlcmVyQ29uZmlnLG92ZXJyaWRlSG9va1N0YXRlOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVIb29rU3RhdGVSZW5hbWVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wczpudWxsLG92ZXJyaWRlUHJvcHNEZWxldGVQYXRoOm51bGwsb3ZlcnJpZGVQcm9wc1JlbmFtZVBhdGg6bnVsbCxzZXRFcnJvckhhbmRsZXI6bnVsbCxzZXRTdXNwZW5zZUhhbmRsZXI6bnVsbCxzY2hlZHVsZVVwZGF0ZTpudWxsLGN1cnJlbnREaXNwYXRjaGVyUmVmOnVhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1aYihhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6dWwuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2V8fFxua2wsZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbCxyZWNvbmNpbGVyVmVyc2lvbjpcIjE4LjIuMC1uZXh0LTllM2I3NzJiOC0yMDIyMDYwOFwifTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHdsPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZighd2wuaXNEaXNhYmxlZCYmd2wuc3VwcG9ydHNGaWJlcil0cnl7a2M9d2wuaW5qZWN0KHZsKSxsYz13bH1jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9dGw7XG5leHBvcnRzLmNyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFvbChiKSl0aHJvdyBFcnJvcihwKDIwMCkpO3JldHVybiBkbChhLGIsbnVsbCxjKX07ZXhwb3J0cy5jcmVhdGVSb290PWZ1bmN0aW9uKGEsYil7aWYoIW9sKGEpKXRocm93IEVycm9yKHAoMjk5KSk7dmFyIGM9ITEsZD1cIlwiLGU9bGw7bnVsbCE9PWImJnZvaWQgMCE9PWImJighMD09PWIudW5zdGFibGVfc3RyaWN0TW9kZSYmKGM9ITApLHZvaWQgMCE9PWIuaWRlbnRpZmllclByZWZpeCYmKGQ9Yi5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1iLm9uUmVjb3ZlcmFibGVFcnJvciYmKGU9Yi5vblJlY292ZXJhYmxlRXJyb3IpKTtiPWNsKGEsMSwhMSxudWxsLG51bGwsYywhMSxkLGUpO2FbdWZdPWIuY3VycmVudDtzZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7cmV0dXJuIG5ldyBtbChiKX07XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHAoMTg4KSk7YT1PYmplY3Qua2V5cyhhKS5qb2luKFwiLFwiKTt0aHJvdyBFcnJvcihwKDI2OCxhKSk7fWE9WmIoYik7YT1udWxsPT09YT9udWxsOmEuc3RhdGVOb2RlO3JldHVybiBhfTtleHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhKXtyZXR1cm4gU2soYSl9O2V4cG9ydHMuaHlkcmF0ZT1mdW5jdGlvbihhLGIsYyl7aWYoIXBsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIHNsKG51bGwsYSxiLCEwLGMpfTtcbmV4cG9ydHMuaHlkcmF0ZVJvb3Q9ZnVuY3Rpb24oYSxiLGMpe2lmKCFvbChhKSl0aHJvdyBFcnJvcihwKDQwNSkpO3ZhciBkPW51bGwhPWMmJmMuaHlkcmF0ZWRTb3VyY2VzfHxudWxsLGU9ITEsZj1cIlwiLGc9bGw7bnVsbCE9PWMmJnZvaWQgMCE9PWMmJighMD09PWMudW5zdGFibGVfc3RyaWN0TW9kZSYmKGU9ITApLHZvaWQgMCE9PWMuaWRlbnRpZmllclByZWZpeCYmKGY9Yy5pZGVudGlmaWVyUHJlZml4KSx2b2lkIDAhPT1jLm9uUmVjb3ZlcmFibGVFcnJvciYmKGc9Yy5vblJlY292ZXJhYmxlRXJyb3IpKTtiPWZsKGIsbnVsbCxhLDEsbnVsbCE9Yz9jOm51bGwsZSwhMSxmLGcpO2FbdWZdPWIuY3VycmVudDtzZihhKTtpZihkKWZvcihhPTA7YTxkLmxlbmd0aDthKyspYz1kW2FdLGU9Yy5fZ2V0VmVyc2lvbixlPWUoYy5fc291cmNlKSxudWxsPT1iLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yi5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtjLGVdOmIubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGMsXG5lKTtyZXR1cm4gbmV3IG5sKGIpfTtleHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXBsKGIpKXRocm93IEVycm9yKHAoMjAwKSk7cmV0dXJuIHNsKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXBsKGEpKXRocm93IEVycm9yKHAoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhTayhmdW5jdGlvbigpe3NsKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVt1Zl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVJrO1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcGwoYykpdGhyb3cgRXJyb3IocCgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcihwKDM4KSk7cmV0dXJuIHNsKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxOC4yLjAtbmV4dC05ZTNiNzcyYjgtMjAyMjA2MDhcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIG0gPSByZXF1aXJlKCdyZWFjdC1kb20nKTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IG0uY3JlYXRlUm9vdDtcbiAgZXhwb3J0cy5oeWRyYXRlUm9vdCA9IG0uaHlkcmF0ZVJvb3Q7XG59IGVsc2Uge1xuICB2YXIgaSA9IG0uX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ7XG4gIGV4cG9ydHMuY3JlYXRlUm9vdCA9IGZ1bmN0aW9uKGMsIG8pIHtcbiAgICBpLnVzaW5nQ2xpZW50RW50cnlQb2ludCA9IHRydWU7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBtLmNyZWF0ZVJvb3QoYywgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xuICBleHBvcnRzLmh5ZHJhdGVSb290ID0gZnVuY3Rpb24oYywgaCwgbykge1xuICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG0uaHlkcmF0ZVJvb3QoYywgaCwgbyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGkudXNpbmdDbGllbnRFbnRyeVBvaW50ID0gZmFsc2U7XG4gICAgfVxuICB9O1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBjaGVja0RDRSgpIHtcbiAgLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuICBpZiAoXG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIC8vIFRoaXMgYnJhbmNoIGlzIHVucmVhY2hhYmxlIGJlY2F1c2UgdGhpcyBmdW5jdGlvbiBpcyBvbmx5IGNhbGxlZFxuICAgIC8vIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgY29uZGl0aW9uIGlzIHRydWUgb25seSBpbiBkZXZlbG9wbWVudC5cbiAgICAvLyBUaGVyZWZvcmUgaWYgdGhlIGJyYW5jaCBpcyBzdGlsbCBoZXJlLCBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2Fzbid0XG4gICAgLy8gcHJvcGVybHkgYXBwbGllZC5cbiAgICAvLyBEb24ndCBjaGFuZ2UgdGhlIG1lc3NhZ2UuIFJlYWN0IERldlRvb2xzIHJlbGllcyBvbiBpdC4gQWxzbyBtYWtlIHN1cmVcbiAgICAvLyB0aGlzIG1lc3NhZ2UgZG9lc24ndCBvY2N1ciBlbHNld2hlcmUgaW4gdGhpcyBmdW5jdGlvbiwgb3IgaXQgd2lsbCBjYXVzZVxuICAgIC8vIGEgZmFsc2UgcG9zaXRpdmUuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdeX14nKTtcbiAgfVxuICB0cnkge1xuICAgIC8vIFZlcmlmeSB0aGF0IHRoZSBjb2RlIGFib3ZlIGhhcyBiZWVuIGRlYWQgY29kZSBlbGltaW5hdGVkIChEQ0UnZCkuXG4gICAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLmNoZWNrRENFKGNoZWNrRENFKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gRGV2VG9vbHMgc2hvdWxkbid0IGNyYXNoIFJlYWN0LCBubyBtYXR0ZXIgd2hhdC5cbiAgICAvLyBXZSBzaG91bGQgc3RpbGwgcmVwb3J0IGluIGNhc2Ugd2UgYnJlYWsgdGhpcyBjb2RlLlxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgfVxufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAvLyBEQ0UgY2hlY2sgc2hvdWxkIGhhcHBlbiBiZWZvcmUgUmVhY3RET00gYnVuZGxlIGV4ZWN1dGVzIHNvIHRoYXRcbiAgLy8gRGV2VG9vbHMgY2FuIHJlcG9ydCBiYWQgbWluaWZpY2F0aW9uIGR1cmluZyBpbmplY3Rpb24uXG4gIGNoZWNrRENFKCk7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBsPVN5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpLG49U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKSxwPVN5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKSxxPVN5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKSxyPVN5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKSx0PVN5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKSx1PVN5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpLHY9U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpLHc9U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpLHg9U3ltYm9sLmZvcihcInJlYWN0Lm1lbW9cIikseT1TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKSx6PVN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBBKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT16JiZhW3pdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9XG52YXIgQj17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sQz1PYmplY3QuYXNzaWduLEQ9e307ZnVuY3Rpb24gRShhLGIsZSl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1EO3RoaXMudXBkYXRlcj1lfHxCfUUucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307XG5FLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3IoXCJzZXRTdGF0ZSguLi4pOiB0YWtlcyBhbiBvYmplY3Qgb2Ygc3RhdGUgdmFyaWFibGVzIHRvIHVwZGF0ZSBvciBhIGZ1bmN0aW9uIHdoaWNoIHJldHVybnMgYW4gb2JqZWN0IG9mIHN0YXRlIHZhcmlhYmxlcy5cIik7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtFLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtmdW5jdGlvbiBGKCl7fUYucHJvdG90eXBlPUUucHJvdG90eXBlO2Z1bmN0aW9uIEcoYSxiLGUpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9RDt0aGlzLnVwZGF0ZXI9ZXx8Qn12YXIgSD1HLnByb3RvdHlwZT1uZXcgRjtcbkguY29uc3RydWN0b3I9RztDKEgsRS5wcm90b3R5cGUpO0guaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEk9QXJyYXkuaXNBcnJheSxKPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksSz17Y3VycmVudDpudWxsfSxMPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBNKGEsYixlKXt2YXIgZCxjPXt9LGs9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoZCBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoaz1cIlwiK2Iua2V5KSxiKUouY2FsbChiLGQpJiYhTC5oYXNPd25Qcm9wZXJ0eShkKSYmKGNbZF09YltkXSk7dmFyIGc9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1nKWMuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Zyl7Zm9yKHZhciBmPUFycmF5KGcpLG09MDttPGc7bSsrKWZbbV09YXJndW1lbnRzW20rMl07Yy5jaGlsZHJlbj1mfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihkIGluIGc9YS5kZWZhdWx0UHJvcHMsZyl2b2lkIDA9PT1jW2RdJiYoY1tkXT1nW2RdKTtyZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEsa2V5OmsscmVmOmgscHJvcHM6Yyxfb3duZXI6Sy5jdXJyZW50fX1cbmZ1bmN0aW9uIE4oYSxiKXtyZXR1cm57JCR0eXBlb2Y6bCx0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIE8oYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PWx9ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIithLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBQPS9cXC8rL2c7ZnVuY3Rpb24gUShhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShcIlwiK2Eua2V5KTpiLnRvU3RyaW5nKDM2KX1cbmZ1bmN0aW9uIFIoYSxiLGUsZCxjKXt2YXIgaz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09a3x8XCJib29sZWFuXCI9PT1rKWE9bnVsbDt2YXIgaD0hMTtpZihudWxsPT09YSloPSEwO2Vsc2Ugc3dpdGNoKGspe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6aD0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbDpjYXNlIG46aD0hMH19aWYoaClyZXR1cm4gaD1hLGM9YyhoKSxhPVwiXCI9PT1kP1wiLlwiK1EoaCwwKTpkLEkoYyk/KGU9XCJcIixudWxsIT1hJiYoZT1hLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIiksUihjLGIsZSxcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBhfSkpOm51bGwhPWMmJihPKGMpJiYoYz1OKGMsZSsoIWMua2V5fHxoJiZoLmtleT09PWMua2V5P1wiXCI6KFwiXCIrYy5rZXkpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIikrYSkpLGIucHVzaChjKSksMTtoPTA7ZD1cIlwiPT09ZD9cIi5cIjpkK1wiOlwiO2lmKEkoYSkpZm9yKHZhciBnPTA7ZzxhLmxlbmd0aDtnKyspe2s9XG5hW2ddO3ZhciBmPWQrUShrLGcpO2grPVIoayxiLGUsZixjKX1lbHNlIGlmKGY9QShhKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksZz0wOyEoaz1hLm5leHQoKSkuZG9uZTspaz1rLnZhbHVlLGY9ZCtRKGssZysrKSxoKz1SKGssYixlLGYsYyk7ZWxzZSBpZihcIm9iamVjdFwiPT09ayl0aHJvdyBiPVN0cmluZyhhKSxFcnJvcihcIk9iamVjdHMgYXJlIG5vdCB2YWxpZCBhcyBhIFJlYWN0IGNoaWxkIChmb3VuZDogXCIrKFwiW29iamVjdCBPYmplY3RdXCI9PT1iP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmIpK1wiKS4gSWYgeW91IG1lYW50IHRvIHJlbmRlciBhIGNvbGxlY3Rpb24gb2YgY2hpbGRyZW4sIHVzZSBhbiBhcnJheSBpbnN0ZWFkLlwiKTtyZXR1cm4gaH1cbmZ1bmN0aW9uIFMoYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGQ9W10sYz0wO1IoYSxkLFwiXCIsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYi5jYWxsKGUsYSxjKyspfSk7cmV0dXJuIGR9ZnVuY3Rpb24gVChhKXtpZigtMT09PWEuX3N0YXR1cyl7dmFyIGI9YS5fcmVzdWx0O2I9YigpO2IudGhlbihmdW5jdGlvbihiKXtpZigwPT09YS5fc3RhdHVzfHwtMT09PWEuX3N0YXR1cylhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yn0sZnVuY3Rpb24oYil7aWYoMD09PWEuX3N0YXR1c3x8LTE9PT1hLl9zdGF0dXMpYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWJ9KTstMT09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0wLGEuX3Jlc3VsdD1iKX1pZigxPT09YS5fc3RhdHVzKXJldHVybiBhLl9yZXN1bHQuZGVmYXVsdDt0aHJvdyBhLl9yZXN1bHQ7fVxudmFyIFU9e2N1cnJlbnQ6bnVsbH0sVj17dHJhbnNpdGlvbjpudWxsfSxXPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlUsUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6VixSZWFjdEN1cnJlbnRPd25lcjpLfTtleHBvcnRzLkNoaWxkcmVuPXttYXA6Uyxmb3JFYWNoOmZ1bmN0aW9uKGEsYixlKXtTKGEsZnVuY3Rpb24oKXtiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sZSl9LGNvdW50OmZ1bmN0aW9uKGEpe3ZhciBiPTA7UyhhLGZ1bmN0aW9uKCl7YisrfSk7cmV0dXJuIGJ9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIFMoYSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pfHxbXX0sb25seTpmdW5jdGlvbihhKXtpZighTyhhKSl0aHJvdyBFcnJvcihcIlJlYWN0LkNoaWxkcmVuLm9ubHkgZXhwZWN0ZWQgdG8gcmVjZWl2ZSBhIHNpbmdsZSBSZWFjdCBlbGVtZW50IGNoaWxkLlwiKTtyZXR1cm4gYX19O2V4cG9ydHMuQ29tcG9uZW50PUU7ZXhwb3J0cy5GcmFnbWVudD1wO1xuZXhwb3J0cy5Qcm9maWxlcj1yO2V4cG9ydHMuUHVyZUNvbXBvbmVudD1HO2V4cG9ydHMuU3RyaWN0TW9kZT1xO2V4cG9ydHMuU3VzcGVuc2U9dztleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPVc7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsZSl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoXCJSZWFjdC5jbG9uZUVsZW1lbnQoLi4uKTogVGhlIGFyZ3VtZW50IG11c3QgYmUgYSBSZWFjdCBlbGVtZW50LCBidXQgeW91IHBhc3NlZCBcIithK1wiLlwiKTt2YXIgZD1DKHt9LGEucHJvcHMpLGM9YS5rZXksaz1hLnJlZixoPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZixoPUsuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihjPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZz1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihmIGluIGIpSi5jYWxsKGIsZikmJiFMLmhhc093blByb3BlcnR5KGYpJiYoZFtmXT12b2lkIDA9PT1iW2ZdJiZ2b2lkIDAhPT1nP2dbZl06YltmXSl9dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Zil7Zz1BcnJheShmKTtcbmZvcih2YXIgbT0wO208ZjttKyspZ1ttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWd9cmV0dXJueyQkdHlwZW9mOmwsdHlwZTphLnR5cGUsa2V5OmMscmVmOmsscHJvcHM6ZCxfb3duZXI6aH19O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhKXthPXskJHR5cGVvZjp1LF9jdXJyZW50VmFsdWU6YSxfY3VycmVudFZhbHVlMjphLF90aHJlYWRDb3VudDowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbCxfZGVmYXVsdFZhbHVlOm51bGwsX2dsb2JhbE5hbWU6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6dCxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfTtleHBvcnRzLmNyZWF0ZUVsZW1lbnQ9TTtleHBvcnRzLmNyZWF0ZUZhY3Rvcnk9ZnVuY3Rpb24oYSl7dmFyIGI9TS5iaW5kKG51bGwsYSk7Yi50eXBlPWE7cmV0dXJuIGJ9O2V4cG9ydHMuY3JlYXRlUmVmPWZ1bmN0aW9uKCl7cmV0dXJue2N1cnJlbnQ6bnVsbH19O1xuZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp2LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1PO2V4cG9ydHMubGF6eT1mdW5jdGlvbihhKXtyZXR1cm57JCR0eXBlb2Y6eSxfcGF5bG9hZDp7X3N0YXR1czotMSxfcmVzdWx0OmF9LF9pbml0OlR9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6eCx0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMuc3RhcnRUcmFuc2l0aW9uPWZ1bmN0aW9uKGEpe3ZhciBiPVYudHJhbnNpdGlvbjtWLnRyYW5zaXRpb249e307dHJ5e2EoKX1maW5hbGx5e1YudHJhbnNpdGlvbj1ifX07ZXhwb3J0cy51bnN0YWJsZV9hY3Q9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcihcImFjdCguLi4pIGlzIG5vdCBzdXBwb3J0ZWQgaW4gcHJvZHVjdGlvbiBidWlsZHMgb2YgUmVhY3QuXCIpO307XG5leHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSl7cmV0dXJuIFUuY3VycmVudC51c2VDb250ZXh0KGEpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRGVmZXJyZWRWYWx1ZT1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZURlZmVycmVkVmFsdWUoYSl9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJZD1mdW5jdGlvbigpe3JldHVybiBVLmN1cnJlbnQudXNlSWQoKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixlKXtyZXR1cm4gVS5jdXJyZW50LnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGUpfTtcbmV4cG9ydHMudXNlSW5zZXJ0aW9uRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFUuY3VycmVudC51c2VJbnNlcnRpb25FZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVS5jdXJyZW50LnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixlKXtyZXR1cm4gVS5jdXJyZW50LnVzZVJlZHVjZXIoYSxiLGUpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gVS5jdXJyZW50LnVzZVN0YXRlKGEpfTtleHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlPWZ1bmN0aW9uKGEsYixlKXtyZXR1cm4gVS5jdXJyZW50LnVzZVN5bmNFeHRlcm5hbFN0b3JlKGEsYixlKX07XG5leHBvcnRzLnVzZVRyYW5zaXRpb249ZnVuY3Rpb24oKXtyZXR1cm4gVS5jdXJyZW50LnVzZVRyYW5zaXRpb24oKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTguMi4wXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQGxpY2Vuc2UgUmVhY3RcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7ZnVuY3Rpb24gZihhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7MDxjOyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYoMDxnKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBoKGEpe3JldHVybiAwPT09YS5sZW5ndGg/bnVsbDphWzBdfWZ1bmN0aW9uIGsoYSl7aWYoMD09PWEubGVuZ3RoKXJldHVybiBudWxsO3ZhciBiPWFbMF0sYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoLHc9ZT4+PjE7ZDx3Oyl7dmFyIG09MiooZCsxKS0xLEM9YVttXSxuPW0rMSx4PWFbbl07aWYoMD5nKEMsYykpbjxlJiYwPmcoeCxDKT8oYVtkXT14LGFbbl09YyxkPW4pOihhW2RdPUMsYVttXT1jLGQ9bSk7ZWxzZSBpZihuPGUmJjA+Zyh4LGMpKWFbZF09eCxhW25dPWMsZD1uO2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9XG5mdW5jdGlvbiBnKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfWlmKFwib2JqZWN0XCI9PT10eXBlb2YgcGVyZm9ybWFuY2UmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBwZXJmb3JtYW5jZS5ub3cpe3ZhciBsPXBlcmZvcm1hbmNlO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGwubm93KCl9fWVsc2V7dmFyIHA9RGF0ZSxxPXAubm93KCk7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gcC5ub3coKS1xfX12YXIgcj1bXSx0PVtdLHU9MSx2PW51bGwseT0zLHo9ITEsQT0hMSxCPSExLEQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDpudWxsLEU9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6bnVsbCxGPVwidW5kZWZpbmVkXCIhPT10eXBlb2Ygc2V0SW1tZWRpYXRlP3NldEltbWVkaWF0ZTpudWxsO1xuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBuYXZpZ2F0b3ImJnZvaWQgMCE9PW5hdmlnYXRvci5zY2hlZHVsaW5nJiZ2b2lkIDAhPT1uYXZpZ2F0b3Iuc2NoZWR1bGluZy5pc0lucHV0UGVuZGluZyYmbmF2aWdhdG9yLnNjaGVkdWxpbmcuaXNJbnB1dFBlbmRpbmcuYmluZChuYXZpZ2F0b3Iuc2NoZWR1bGluZyk7ZnVuY3Rpb24gRyhhKXtmb3IodmFyIGI9aCh0KTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKWsodCk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlrKHQpLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsZihyLGIpO2Vsc2UgYnJlYWs7Yj1oKHQpfX1mdW5jdGlvbiBIKGEpe0I9ITE7RyhhKTtpZighQSlpZihudWxsIT09aChyKSlBPSEwLEkoSik7ZWxzZXt2YXIgYj1oKHQpO251bGwhPT1iJiZLKEgsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gSihhLGIpe0E9ITE7QiYmKEI9ITEsRShMKSxMPS0xKTt6PSEwO3ZhciBjPXk7dHJ5e0coYik7Zm9yKHY9aChyKTtudWxsIT09diYmKCEodi5leHBpcmF0aW9uVGltZT5iKXx8YSYmIU0oKSk7KXt2YXIgZD12LmNhbGxiYWNrO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2LmNhbGxiYWNrPW51bGw7eT12LnByaW9yaXR5TGV2ZWw7dmFyIGU9ZCh2LmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/di5jYWxsYmFjaz1lOnY9PT1oKHIpJiZrKHIpO0coYil9ZWxzZSBrKHIpO3Y9aChyKX1pZihudWxsIT09dil2YXIgdz0hMDtlbHNle3ZhciBtPWgodCk7bnVsbCE9PW0mJksoSCxtLnN0YXJ0VGltZS1iKTt3PSExfXJldHVybiB3fWZpbmFsbHl7dj1udWxsLHk9Yyx6PSExfX12YXIgTj0hMSxPPW51bGwsTD0tMSxQPTUsUT0tMTtcbmZ1bmN0aW9uIE0oKXtyZXR1cm4gZXhwb3J0cy51bnN0YWJsZV9ub3coKS1RPFA/ITE6ITB9ZnVuY3Rpb24gUigpe2lmKG51bGwhPT1PKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO1E9YTt2YXIgYj0hMDt0cnl7Yj1PKCEwLGEpfWZpbmFsbHl7Yj9TKCk6KE49ITEsTz1udWxsKX19ZWxzZSBOPSExfXZhciBTO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBGKVM9ZnVuY3Rpb24oKXtGKFIpfTtlbHNlIGlmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgTWVzc2FnZUNoYW5uZWwpe3ZhciBUPW5ldyBNZXNzYWdlQ2hhbm5lbCxVPVQucG9ydDI7VC5wb3J0MS5vbm1lc3NhZ2U9UjtTPWZ1bmN0aW9uKCl7VS5wb3N0TWVzc2FnZShudWxsKX19ZWxzZSBTPWZ1bmN0aW9uKCl7RChSLDApfTtmdW5jdGlvbiBJKGEpe089YTtOfHwoTj0hMCxTKCkpfWZ1bmN0aW9uIEsoYSxiKXtMPUQoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX1cbmV4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtBfHx6fHwoQT0hMCxJKEopKX07XG5leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKGEpezA+YXx8MTI1PGE/Y29uc29sZS5lcnJvcihcImZvcmNlRnJhbWVSYXRlIHRha2VzIGEgcG9zaXRpdmUgaW50IGJldHdlZW4gMCBhbmQgMTI1LCBmb3JjaW5nIGZyYW1lIHJhdGVzIGhpZ2hlciB0aGFuIDEyNSBmcHMgaXMgbm90IHN1cHBvcnRlZFwiKTpQPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTtleHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIHl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gaChyKX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaCh5KXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj15fXZhciBjPXk7eT1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7eT1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307XG5leHBvcnRzLnVuc3RhYmxlX3JlcXVlc3RQYWludD1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz15O3k9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e3k9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDp1KyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxmKHQsYSksbnVsbD09PWgocikmJmE9PT1oKHQpJiYoQj8oRShMKSxMPS0xKTpCPSEwLEsoSCxjLWQpKSk6KGEuc29ydEluZGV4PWUsZihyLGEpLEF8fHp8fChBPSEwLEkoSikpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPU07ZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9eTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz15O3k9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7eT1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBoYXNoKHN0cikge1xuICB2YXIgaGFzaCA9IDUzODEsXG4gICAgICBpICAgID0gc3RyLmxlbmd0aDtcblxuICB3aGlsZShpKSB7XG4gICAgaGFzaCA9IChoYXNoICogMzMpIF4gc3RyLmNoYXJDb2RlQXQoLS1pKTtcbiAgfVxuXG4gIC8qIEphdmFTY3JpcHQgZG9lcyBiaXR3aXNlIG9wZXJhdGlvbnMgKGxpa2UgWE9SLCBhYm92ZSkgb24gMzItYml0IHNpZ25lZFxuICAgKiBpbnRlZ2Vycy4gU2luY2Ugd2Ugd2FudCB0aGUgcmVzdWx0cyB0byBiZSBhbHdheXMgcG9zaXRpdmUsIGNvbnZlcnQgdGhlXG4gICAqIHNpZ25lZCBpbnQgdG8gYW4gdW5zaWduZWQgYnkgZG9pbmcgYW4gdW5zaWduZWQgYml0c2hpZnQuICovXG4gIHJldHVybiBoYXNoID4+PiAwO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc2g7XG4iLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcbiAgdmFyIHVwZGF0ZXIgPSBmdW5jdGlvbiB1cGRhdGVyKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXAgJiYgbmV3T2JqLnN1cHBvcnRzID09PSBvYmouc3VwcG9ydHMgJiYgbmV3T2JqLmxheWVyID09PSBvYmoubGF5ZXIpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gdXBkYXRlcjtcbn1cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcbiAgICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTtcblxuICAgIC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG4gICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcbiAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgfVxuICAgIH1cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydEJ5U2VsZWN0b3IoaW5zZXJ0LCBzdHlsZSkge1xuICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KGluc2VydCk7XG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRCeVNlbGVjdG9yOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoZWxlbWVudCwgb3B0aW9ucy5hdHRyaWJ1dGVzKTtcbiAgb3B0aW9ucy5pbnNlcnQoZWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXM7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IFwiXCI7XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuICB2YXIgbmVlZExheWVyID0gdHlwZW9mIG9iai5sYXllciAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuICBjc3MgKz0gb2JqLmNzcztcbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfVxuXG4gIC8vIEZvciBvbGQgSUVcbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuICBvcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xufVxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB7XG4gICAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHt9LFxuICAgICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7fVxuICAgIH07XG4gIH1cbiAgdmFyIHN0eWxlRWxlbWVudCA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGVFbGVtZW50LCBvcHRpb25zLCBvYmopO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KTtcbiAgICB9XG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHN0eWxlVGFnVHJhbnNmb3JtOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSB7XG5cdFx0XHR2YXIgaSA9IHNjcmlwdHMubGVuZ3RoIC0gMTtcblx0XHRcdHdoaWxlIChpID4gLTEgJiYgIXNjcmlwdFVybCkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiaW1wb3J0IHN0cmluZ0hhc2ggZnJvbSAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0IGFzYXAgZnJvbSAnYXNhcCc7XG5cbmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gIGlmICh0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIikge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gdHlwZW9mIG9iajtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIF90eXBlb2YgPSBmdW5jdGlvbiAob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7XG4gIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307XG4gICAgdmFyIG93bktleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuXG4gICAgaWYgKHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBvd25LZXlzID0gb3duS2V5cy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwgc3ltKS5lbnVtZXJhYmxlO1xuICAgICAgfSkpO1xuICAgIH1cblxuICAgIG93bktleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTtcbn1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfVxufVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoaXRlcikgfHwgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGl0ZXIpID09PSBcIltvYmplY3QgQXJndW1lbnRzXVwiKSByZXR1cm4gQXJyYXkuZnJvbShpdGVyKTtcbn1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIik7XG59XG5cbi8qIEBmbG93ICovXG4vKiA6OlxudHlwZSBPYmplY3RNYXAgPSB7IFtpZDpzdHJpbmddOiBhbnkgfTtcbiovXG5cbnZhciBVUFBFUkNBU0VfUkUgPSAvKFtBLVpdKS9nO1xuXG52YXIgVVBQRVJDQVNFX1JFX1RPX0tFQkFCID0gZnVuY3Rpb24gVVBQRVJDQVNFX1JFX1RPX0tFQkFCKG1hdGNoXG4vKiA6IHN0cmluZyAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBcIi1cIi5jb25jYXQobWF0Y2gudG9Mb3dlckNhc2UoKSlcbiAgKTtcbn07XG5cbnZhciBrZWJhYmlmeVN0eWxlTmFtZSA9IGZ1bmN0aW9uIGtlYmFiaWZ5U3R5bGVOYW1lKHN0cmluZ1xuLyogOiBzdHJpbmcgKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIHZhciByZXN1bHQgPSBzdHJpbmcucmVwbGFjZShVUFBFUkNBU0VfUkUsIFVQUEVSQ0FTRV9SRV9UT19LRUJBQik7XG5cbiAgaWYgKHJlc3VsdFswXSA9PT0gJ20nICYmIHJlc3VsdFsxXSA9PT0gJ3MnICYmIHJlc3VsdFsyXSA9PT0gJy0nKSB7XG4gICAgcmV0dXJuIFwiLVwiLmNvbmNhdChyZXN1bHQpO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4vKipcbiAqIENTUyBwcm9wZXJ0aWVzIHdoaWNoIGFjY2VwdCBudW1iZXJzIGJ1dCBhcmUgbm90IGluIHVuaXRzIG9mIFwicHhcIi5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cbnZhciBpc1VuaXRsZXNzTnVtYmVyID0ge1xuICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogdHJ1ZSxcbiAgYm9yZGVySW1hZ2VPdXRzZXQ6IHRydWUsXG4gIGJvcmRlckltYWdlU2xpY2U6IHRydWUsXG4gIGJvcmRlckltYWdlV2lkdGg6IHRydWUsXG4gIGJveEZsZXg6IHRydWUsXG4gIGJveEZsZXhHcm91cDogdHJ1ZSxcbiAgYm94T3JkaW5hbEdyb3VwOiB0cnVlLFxuICBjb2x1bW5Db3VudDogdHJ1ZSxcbiAgZmxleDogdHJ1ZSxcbiAgZmxleEdyb3c6IHRydWUsXG4gIGZsZXhQb3NpdGl2ZTogdHJ1ZSxcbiAgZmxleFNocmluazogdHJ1ZSxcbiAgZmxleE5lZ2F0aXZlOiB0cnVlLFxuICBmbGV4T3JkZXI6IHRydWUsXG4gIGdyaWRSb3c6IHRydWUsXG4gIGdyaWRDb2x1bW46IHRydWUsXG4gIGZvbnRXZWlnaHQ6IHRydWUsXG4gIGxpbmVDbGFtcDogdHJ1ZSxcbiAgbGluZUhlaWdodDogdHJ1ZSxcbiAgb3BhY2l0eTogdHJ1ZSxcbiAgb3JkZXI6IHRydWUsXG4gIG9ycGhhbnM6IHRydWUsXG4gIHRhYlNpemU6IHRydWUsXG4gIHdpZG93czogdHJ1ZSxcbiAgekluZGV4OiB0cnVlLFxuICB6b29tOiB0cnVlLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiB0cnVlLFxuICBmbG9vZE9wYWNpdHk6IHRydWUsXG4gIHN0b3BPcGFjaXR5OiB0cnVlLFxuICBzdHJva2VEYXNoYXJyYXk6IHRydWUsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IHRydWUsXG4gIHN0cm9rZU1pdGVybGltaXQ6IHRydWUsXG4gIHN0cm9rZU9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZVdpZHRoOiB0cnVlXG59O1xuLyoqXG4gKiBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJlZml4IHZlbmRvci1zcGVjaWZpYyBwcmVmaXgsIGVnOiBXZWJraXRcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgc3R5bGUgbmFtZSwgZWc6IHRyYW5zaXRpb25EdXJhdGlvblxuICogQHJldHVybiB7c3RyaW5nfSBzdHlsZSBuYW1lIHByZWZpeGVkIHdpdGggYHByZWZpeGAsIHByb3Blcmx5IGNhbWVsQ2FzZWQsIGVnOlxuICogV2Via2l0VHJhbnNpdGlvbkR1cmF0aW9uXG4gKi9cblxuZnVuY3Rpb24gcHJlZml4S2V5KHByZWZpeCwga2V5KSB7XG4gIHJldHVybiBwcmVmaXggKyBrZXkuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBrZXkuc3Vic3RyaW5nKDEpO1xufVxuLyoqXG4gKiBTdXBwb3J0IHN0eWxlIG5hbWVzIHRoYXQgbWF5IGNvbWUgcGFzc2VkIGluIHByZWZpeGVkIGJ5IGFkZGluZyBwZXJtdXRhdGlvbnNcbiAqIG9mIHZlbmRvciBwcmVmaXhlcy5cbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICovXG5cblxudmFyIHByZWZpeGVzID0gWydXZWJraXQnLCAnbXMnLCAnTW96JywgJ08nXTsgLy8gVXNpbmcgT2JqZWN0LmtleXMgaGVyZSwgb3IgZWxzZSB0aGUgdmFuaWxsYSBmb3ItaW4gbG9vcCBtYWtlcyBJRTggZ28gaW50byBhblxuLy8gaW5maW5pdGUgbG9vcCwgYmVjYXVzZSBpdCBpdGVyYXRlcyBvdmVyIHRoZSBuZXdseSBhZGRlZCBwcm9wcyB0b28uXG4vLyBUYWtlbiBmcm9tIFJlYWN0J3MgQ1NTUHJvcGVydHkuanNcblxuT2JqZWN0LmtleXMoaXNVbml0bGVzc051bWJlcikuZm9yRWFjaChmdW5jdGlvbiAocHJvcCkge1xuICBwcmVmaXhlcy5mb3JFYWNoKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICBpc1VuaXRsZXNzTnVtYmVyW3ByZWZpeEtleShwcmVmaXgsIHByb3ApXSA9IGlzVW5pdGxlc3NOdW1iZXJbcHJvcF07XG4gIH0pO1xufSk7XG52YXIgc3RyaW5naWZ5VmFsdWUgPSBmdW5jdGlvbiBzdHJpbmdpZnlWYWx1ZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHByb3Bcbi8qIDogYW55ICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICBpZiAodHlwZW9mIHByb3AgPT09IFwibnVtYmVyXCIpIHtcbiAgICBpZiAoaXNVbml0bGVzc051bWJlcltrZXldKSB7XG4gICAgICByZXR1cm4gXCJcIiArIHByb3A7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBwcm9wICsgXCJweFwiO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gJycgKyBwcm9wO1xuICB9XG59O1xudmFyIHN0cmluZ2lmeUFuZEltcG9ydGFudGlmeVZhbHVlID0gZnVuY3Rpb24gc3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCBwcm9wXG4vKiA6IGFueSAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBpbXBvcnRhbnRpZnkoc3RyaW5naWZ5VmFsdWUoa2V5LCBwcm9wKSlcbiAgKTtcbn07IC8vIFR1cm4gYSBzdHJpbmcgaW50byBhIGhhc2ggc3RyaW5nIG9mIGJhc2UtMzYgdmFsdWVzICh1c2luZyBsZXR0ZXJzIGFuZCBudW1iZXJzKVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5cbnZhciBoYXNoU3RyaW5nID0gZnVuY3Rpb24gaGFzaFN0cmluZyhzdHJpbmdcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiA/c3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiBzdHJpbmcgKi9cbiAgICBzdHJpbmdIYXNoKHN0cmluZykudG9TdHJpbmcoMzYpXG4gICk7XG59OyAvLyBIYXNoIGEgamF2YXNjcmlwdCBvYmplY3QgdXNpbmcgSlNPTi5zdHJpbmdpZnkuIFRoaXMgaXMgdmVyeSBmYXN0LCBhYm91dCAzXG4vLyBtaWNyb3NlY29uZHMgb24gbXkgY29tcHV0ZXIgZm9yIGEgc2FtcGxlIG9iamVjdDpcbi8vIGh0dHA6Ly9qc3BlcmYuY29tL3Rlc3QtaGFzaGZudjMyYS1oYXNoLzVcbi8vXG4vLyBOb3RlIHRoYXQgdGhpcyB1c2VzIEpTT04uc3RyaW5naWZ5IHRvIHN0cmluZ2lmeSB0aGUgb2JqZWN0cyBzbyBpbiBvcmRlciBmb3Jcbi8vIHRoaXMgdG8gcHJvZHVjZSBjb25zaXN0ZW50IGhhc2hlcyBicm93c2VycyBuZWVkIHRvIGhhdmUgYSBjb25zaXN0ZW50XG4vLyBvcmRlcmluZyBvZiBvYmplY3RzLiBCZW4gQWxwZXJ0IHNheXMgdGhhdCBGYWNlYm9vayBkZXBlbmRzIG9uIHRoaXMsIHNvIHdlXG4vLyBjYW4gcHJvYmFibHkgZGVwZW5kIG9uIHRoaXMgdG9vLlxuXG52YXIgaGFzaE9iamVjdCA9IGZ1bmN0aW9uIGhhc2hPYmplY3Qob2JqZWN0XG4vKiA6IE9iamVjdE1hcCAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBoYXNoU3RyaW5nKEpTT04uc3RyaW5naWZ5KG9iamVjdCkpXG4gICk7XG59OyAvLyBHaXZlbiBhIHNpbmdsZSBzdHlsZSB2YWx1ZSBzdHJpbmcgbGlrZSB0aGUgXCJiXCIgZnJvbSBcImE6IGI7XCIsIGFkZHMgIWltcG9ydGFudFxuLy8gdG8gZ2VuZXJhdGUgXCJiICFpbXBvcnRhbnRcIi5cblxudmFyIGltcG9ydGFudGlmeSA9IGZ1bmN0aW9uIGltcG9ydGFudGlmeShzdHJpbmdcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIC8vIEJyYWNrZXQgc3RyaW5nIGNoYXJhY3RlciBhY2Nlc3MgaXMgdmVyeSBmYXN0LCBhbmQgaW4gdGhlIGRlZmF1bHQgY2FzZSB3ZVxuICAgIC8vIG5vcm1hbGx5IGRvbid0IGV4cGVjdCB0aGVyZSB0byBiZSBcIiFpbXBvcnRhbnRcIiBhdCB0aGUgZW5kIG9mIHRoZSBzdHJpbmdcbiAgICAvLyBzbyB3ZSBjYW4gdXNlIHRoaXMgc2ltcGxlIGNoZWNrIHRvIHRha2UgYW4gb3B0aW1pemVkIHBhdGguIElmIHRoZXJlXG4gICAgLy8gaGFwcGVucyB0byBiZSBhIFwiIVwiIGluIHRoaXMgcG9zaXRpb24sIHdlIGZvbGxvdyB1cCB3aXRoIGEgbW9yZSB0aG9yb3VnaFxuICAgIC8vIGNoZWNrLlxuICAgIHN0cmluZ1tzdHJpbmcubGVuZ3RoIC0gMTBdID09PSAnIScgJiYgc3RyaW5nLnNsaWNlKC0xMSkgPT09ICcgIWltcG9ydGFudCcgPyBzdHJpbmcgOiBcIlwiLmNvbmNhdChzdHJpbmcsIFwiICFpbXBvcnRhbnRcIilcbiAgKTtcbn07XG5cbi8qIEBmbG93ICovXG52YXIgTUFQX0VYSVNUUyA9IHR5cGVvZiBNYXAgIT09ICd1bmRlZmluZWQnO1xuXG52YXIgT3JkZXJlZEVsZW1lbnRzID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgLyogOjpcbiAgZWxlbWVudHM6IHtbc3RyaW5nXTogYW55fTtcbiAga2V5T3JkZXI6IHN0cmluZ1tdO1xuICAqL1xuICBmdW5jdGlvbiBPcmRlcmVkRWxlbWVudHMoKSB7XG4gICAgdGhpcy5lbGVtZW50cyA9IHt9O1xuICAgIHRoaXMua2V5T3JkZXIgPSBbXTtcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBPcmRlcmVkRWxlbWVudHMucHJvdG90eXBlO1xuXG4gIF9wcm90by5mb3JFYWNoID0gZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja1xuICAvKiA6IChzdHJpbmcsIGFueSkgPT4gdm9pZCAqL1xuICApIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMua2V5T3JkZXIubGVuZ3RoOyBpKyspIHtcbiAgICAgIC8vICh2YWx1ZSwga2V5KSB0byBtYXRjaCBNYXAncyBBUElcbiAgICAgIGNhbGxiYWNrKHRoaXMuZWxlbWVudHNbdGhpcy5rZXlPcmRlcltpXV0sIHRoaXMua2V5T3JkZXJbaV0pO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uc2V0ID0gZnVuY3Rpb24gc2V0KGtleVxuICAvKiA6IHN0cmluZyAqL1xuICAsIHZhbHVlXG4gIC8qIDogYW55ICovXG4gICwgc2hvdWxkUmVvcmRlclxuICAvKiA6ID9ib29sZWFuICovXG4gICkge1xuICAgIGlmICghdGhpcy5lbGVtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICB0aGlzLmtleU9yZGVyLnB1c2goa2V5KTtcbiAgICB9IGVsc2UgaWYgKHNob3VsZFJlb3JkZXIpIHtcbiAgICAgIHZhciBpbmRleCA9IHRoaXMua2V5T3JkZXIuaW5kZXhPZihrZXkpO1xuICAgICAgdGhpcy5rZXlPcmRlci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgdGhpcy5rZXlPcmRlci5wdXNoKGtleSk7XG4gICAgfVxuXG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IHZhbHVlO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHZhbHVlIGluc3RhbmNlb2YgTWFwIHx8IHZhbHVlIGluc3RhbmNlb2YgT3JkZXJlZEVsZW1lbnRzKSB7XG4gICAgICAvLyBXZSBoYXZlIGZvdW5kIGEgbmVzdGVkIE1hcCwgc28gd2UgbmVlZCB0byByZWN1cnNlIHNvIHRoYXQgYWxsXG4gICAgICAvLyBvZiB0aGUgbmVzdGVkIG9iamVjdHMgYW5kIE1hcHMgYXJlIG1lcmdlZCBwcm9wZXJseS5cbiAgICAgIHZhciBuZXN0ZWQgPSB0aGlzLmVsZW1lbnRzLmhhc093blByb3BlcnR5KGtleSkgPyB0aGlzLmVsZW1lbnRzW2tleV0gOiBuZXcgT3JkZXJlZEVsZW1lbnRzKCk7XG4gICAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIG5lc3RlZC5zZXQoa2V5LCB2YWx1ZSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IG5lc3RlZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpICYmIF90eXBlb2YodmFsdWUpID09PSAnb2JqZWN0Jykge1xuICAgICAgLy8gV2UgaGF2ZSBmb3VuZCBhIG5lc3RlZCBvYmplY3QsIHNvIHdlIG5lZWQgdG8gcmVjdXJzZSBzbyB0aGF0IGFsbFxuICAgICAgLy8gb2YgdGhlIG5lc3RlZCBvYmplY3RzIGFuZCBNYXBzIGFyZSBtZXJnZWQgcHJvcGVybHkuXG4gICAgICB2YXIgX25lc3RlZCA9IHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KSA/IHRoaXMuZWxlbWVudHNba2V5XSA6IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICAgICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyh2YWx1ZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBfbmVzdGVkLnNldChrZXlzW2ldLCB2YWx1ZVtrZXlzW2ldXSwgc2hvdWxkUmVvcmRlcik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuZWxlbWVudHNba2V5XSA9IF9uZXN0ZWQ7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5lbGVtZW50c1trZXldID0gdmFsdWU7XG4gIH07XG5cbiAgX3Byb3RvLmdldCA9IGZ1bmN0aW9uIGdldChrZXlcbiAgLyogOiBzdHJpbmcgKi9cbiAgKVxuICAvKiA6IGFueSAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHNba2V5XTtcbiAgfTtcblxuICBfcHJvdG8uaGFzID0gZnVuY3Rpb24gaGFzKGtleVxuICAvKiA6IHN0cmluZyAqL1xuICApXG4gIC8qIDogYm9vbGVhbiAqL1xuICB7XG4gICAgcmV0dXJuIHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KTtcbiAgfTtcblxuICBfcHJvdG8uYWRkU3R5bGVUeXBlID0gZnVuY3Rpb24gYWRkU3R5bGVUeXBlKHN0eWxlVHlwZVxuICAvKiA6IGFueSAqL1xuICApXG4gIC8qIDogdm9pZCAqL1xuICB7XG4gICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgIGlmIChNQVBfRVhJU1RTICYmIHN0eWxlVHlwZSBpbnN0YW5jZW9mIE1hcCB8fCBzdHlsZVR5cGUgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgIHN0eWxlVHlwZS5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG4gICAgICAgIF90aGlzLnNldChrZXksIHZhbHVlLCB0cnVlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlVHlwZSk7XG5cbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLnNldChrZXlzW2ldLCBzdHlsZVR5cGVba2V5c1tpXV0sIHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICByZXR1cm4gT3JkZXJlZEVsZW1lbnRzO1xufSgpO1xuXG5mdW5jdGlvbiB1bndyYXBFeHBvcnRzICh4KSB7XG5cdHJldHVybiB4ICYmIHguX19lc01vZHVsZSAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoeCwgJ2RlZmF1bHQnKSA/IHguZGVmYXVsdCA6IHg7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZuLCBtb2R1bGUpIHtcblx0cmV0dXJuIG1vZHVsZSA9IHsgZXhwb3J0czoge30gfSwgZm4obW9kdWxlLCBtb2R1bGUuZXhwb3J0cyksIG1vZHVsZS5leHBvcnRzO1xufVxuXG5mdW5jdGlvbiBnZXRDanNFeHBvcnRGcm9tTmFtZXNwYWNlIChuKSB7XG5cdHJldHVybiBuICYmIG4uZGVmYXVsdCB8fCBuO1xufVxuXG52YXIgY2FwaXRhbGl6ZVN0cmluZ18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FwaXRhbGl6ZVN0cmluZztcbmZ1bmN0aW9uIGNhcGl0YWxpemVTdHJpbmcoc3RyKSB7XG4gIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG52YXIgcHJlZml4UHJvcGVydHlfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHByZWZpeFByb3BlcnR5O1xuXG5cblxudmFyIF9jYXBpdGFsaXplU3RyaW5nMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoY2FwaXRhbGl6ZVN0cmluZ18xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gcHJlZml4UHJvcGVydHkocHJlZml4UHJvcGVydGllcywgcHJvcGVydHksIHN0eWxlKSB7XG4gIGlmIChwcmVmaXhQcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHZhciBuZXdTdHlsZSA9IHt9O1xuICAgIHZhciByZXF1aXJlZFByZWZpeGVzID0gcHJlZml4UHJvcGVydGllc1twcm9wZXJ0eV07XG4gICAgdmFyIGNhcGl0YWxpemVkUHJvcGVydHkgPSAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KTtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHN0eWxlKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzdHlsZVByb3BlcnR5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChzdHlsZVByb3BlcnR5ID09PSBwcm9wZXJ0eSkge1xuICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHJlcXVpcmVkUHJlZml4ZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICBuZXdTdHlsZVtyZXF1aXJlZFByZWZpeGVzW2pdICsgY2FwaXRhbGl6ZWRQcm9wZXJ0eV0gPSBzdHlsZVtwcm9wZXJ0eV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIG5ld1N0eWxlW3N0eWxlUHJvcGVydHldID0gc3R5bGVbc3R5bGVQcm9wZXJ0eV07XG4gICAgfVxuICAgIHJldHVybiBuZXdTdHlsZTtcbiAgfVxuICByZXR1cm4gc3R5bGU7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhwcmVmaXhQcm9wZXJ0eV8xKTtcblxudmFyIHByZWZpeFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwcmVmaXhWYWx1ZTtcbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHBsdWdpbnMsIHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIG1ldGFEYXRhKSB7XG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwbHVnaW5zLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gcGx1Z2luc1tpXShwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBtZXRhRGF0YSk7XG5cbiAgICAvLyB3ZSBjYW4gc3RvcCBwcm9jZXNzaW5nIGlmIGEgdmFsdWUgaXMgcmV0dXJuZWRcbiAgICAvLyBhcyBhbGwgcGx1Z2luIGNyaXRlcmlhIGFyZSB1bmlxdWVcbiAgICBpZiAocHJvY2Vzc2VkVmFsdWUpIHtcbiAgICAgIHJldHVybiBwcm9jZXNzZWRWYWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKHByZWZpeFZhbHVlXzEpO1xuXG52YXIgYWRkTmV3VmFsdWVzT25seV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYWRkTmV3VmFsdWVzT25seTtcbmZ1bmN0aW9uIGFkZElmTmV3KGxpc3QsIHZhbHVlKSB7XG4gIGlmIChsaXN0LmluZGV4T2YodmFsdWUpID09PSAtMSkge1xuICAgIGxpc3QucHVzaCh2YWx1ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkTmV3VmFsdWVzT25seShsaXN0LCB2YWx1ZXMpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSB2YWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlc1tpXSk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIGFkZElmTmV3KGxpc3QsIHZhbHVlcyk7XG4gIH1cbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKGFkZE5ld1ZhbHVlc09ubHlfMSk7XG5cbnZhciBpc09iamVjdF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNPYmplY3Q7XG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBPYmplY3QgJiYgIUFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNPYmplY3RfMSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3JlYXRlUHJlZml4ZXI7XG5cblxuXG52YXIgX3ByZWZpeFByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4UHJvcGVydHlfMSk7XG5cblxuXG52YXIgX3ByZWZpeFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocHJlZml4VmFsdWVfMSk7XG5cblxuXG52YXIgX2FkZE5ld1ZhbHVlc09ubHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChhZGROZXdWYWx1ZXNPbmx5XzEpO1xuXG5cblxudmFyIF9pc09iamVjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzT2JqZWN0XzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBjcmVhdGVQcmVmaXhlcihfcmVmKSB7XG4gIHZhciBwcmVmaXhNYXAgPSBfcmVmLnByZWZpeE1hcCxcbiAgICAgIHBsdWdpbnMgPSBfcmVmLnBsdWdpbnM7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHByZWZpeChzdHlsZSkge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHN0eWxlKSB7XG4gICAgICB2YXIgdmFsdWUgPSBzdHlsZVtwcm9wZXJ0eV07XG5cbiAgICAgIC8vIGhhbmRsZSBuZXN0ZWQgb2JqZWN0c1xuICAgICAgaWYgKCgwLCBfaXNPYmplY3QyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBwcmVmaXgodmFsdWUpO1xuICAgICAgICAvLyBoYW5kbGUgYXJyYXkgdmFsdWVzXG4gICAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHZhciBjb21iaW5lZFZhbHVlID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHZhbHVlLmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgdmFyIHByb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlW2ldLCBzdHlsZSwgcHJlZml4TWFwKTtcbiAgICAgICAgICAoMCwgX2FkZE5ld1ZhbHVlc09ubHkyLmRlZmF1bHQpKGNvbWJpbmVkVmFsdWUsIHByb2Nlc3NlZFZhbHVlIHx8IHZhbHVlW2ldKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG9ubHkgbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCB3YXMgdG91Y2hlZFxuICAgICAgICAvLyBieSBhbnkgcGx1Z2luIHRvIHByZXZlbnQgdW5uZWNlc3NhcnkgbXV0YXRpb25zXG4gICAgICAgIGlmIChjb21iaW5lZFZhbHVlLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBjb21iaW5lZFZhbHVlO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX3Byb2Nlc3NlZFZhbHVlID0gKDAsIF9wcmVmaXhWYWx1ZTIuZGVmYXVsdCkocGx1Z2lucywgcHJvcGVydHksIHZhbHVlLCBzdHlsZSwgcHJlZml4TWFwKTtcblxuICAgICAgICAvLyBvbmx5IG1vZGlmeSB0aGUgdmFsdWUgaWYgaXQgd2FzIHRvdWNoZWRcbiAgICAgICAgLy8gYnkgYW55IHBsdWdpbiB0byBwcmV2ZW50IHVubmVjZXNzYXJ5IG11dGF0aW9uc1xuICAgICAgICBpZiAoX3Byb2Nlc3NlZFZhbHVlKSB7XG4gICAgICAgICAgc3R5bGVbcHJvcGVydHldID0gX3Byb2Nlc3NlZFZhbHVlO1xuICAgICAgICB9XG5cbiAgICAgICAgc3R5bGUgPSAoMCwgX3ByZWZpeFByb3BlcnR5Mi5kZWZhdWx0KShwcmVmaXhNYXAsIHByb3BlcnR5LCBzdHlsZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0eWxlO1xuICB9O1xufVxufSk7XG5cbnZhciBjcmVhdGVQcmVmaXhlciA9IHVud3JhcEV4cG9ydHMoY3JlYXRlUHJlZml4ZXJfMSk7XG5cbnZhciBiYWNrZ3JvdW5kQ2xpcF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gYmFja2dyb3VuZENsaXA7XG5cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9iYWNrZ3JvdW5kLWNsaXAjQnJvd3Nlcl9jb21wYXRpYmlsaXR5XG5mdW5jdGlvbiBiYWNrZ3JvdW5kQ2xpcChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgdmFsdWUgPT09ICd0ZXh0Jykge1xuICAgIHJldHVybiBbJy13ZWJraXQtdGV4dCcsICd0ZXh0J107XG4gIH1cbn1cbn0pO1xuXG52YXIgYmFja2dyb3VuZENsaXAgPSB1bndyYXBFeHBvcnRzKGJhY2tncm91bmRDbGlwXzEpO1xuXG52YXIgaXNQcmVmaXhlZFZhbHVlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc1ByZWZpeGVkVmFsdWU7XG52YXIgcmVnZXggPSAvLXdlYmtpdC18LW1vei18LW1zLS87XG5cbmZ1bmN0aW9uIGlzUHJlZml4ZWRWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiByZWdleC50ZXN0KHZhbHVlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG52YXIgY2FsY18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY2FsYztcblxuXG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJy1tb3otJywgJyddO1xuZnVuY3Rpb24gY2FsYyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY2FsYygnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY2FsY1xcKC9nLCBwcmVmaXggKyAnY2FsYygnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjYWxjID0gdW53cmFwRXhwb3J0cyhjYWxjXzEpO1xuXG52YXIgY3Jvc3NGYWRlXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjcm9zc0ZhZGU7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNzZWFyY2g9Y3Jvc3MtZmFkZVxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICcnXTtcbmZ1bmN0aW9uIGNyb3NzRmFkZShwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignY3Jvc3MtZmFkZSgnKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvY3Jvc3MtZmFkZVxcKC9nLCBwcmVmaXggKyAnY3Jvc3MtZmFkZSgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjcm9zc0ZhZGUgPSB1bndyYXBFeHBvcnRzKGNyb3NzRmFkZV8xKTtcblxudmFyIGN1cnNvcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gY3Vyc29yO1xudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHZhbHVlcyA9IHtcbiAgJ3pvb20taW4nOiB0cnVlLFxuICAnem9vbS1vdXQnOiB0cnVlLFxuICBncmFiOiB0cnVlLFxuICBncmFiYmluZzogdHJ1ZVxufTtcblxuZnVuY3Rpb24gY3Vyc29yKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAocHJvcGVydHkgPT09ICdjdXJzb3InICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBjdXJzb3IgPSB1bndyYXBFeHBvcnRzKGN1cnNvcl8xKTtcblxudmFyIGZpbHRlcl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmlsdGVyO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbi8vIGh0dHA6Ly9jYW5pdXNlLmNvbS8jZmVhdD1jc3MtZmlsdGVyLWZ1bmN0aW9uXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJyddO1xuZnVuY3Rpb24gZmlsdGVyKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdmaWx0ZXIoJykgPiAtMSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL2ZpbHRlclxcKC9nLCBwcmVmaXggKyAnZmlsdGVyKCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGZpbHRlciA9IHVud3JhcEV4cG9ydHMoZmlsdGVyXzEpO1xuXG52YXIgZmxleF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZmxleDtcbnZhciB2YWx1ZXMgPSB7XG4gIGZsZXg6IFsnLXdlYmtpdC1ib3gnLCAnLW1vei1ib3gnLCAnLW1zLWZsZXhib3gnLCAnLXdlYmtpdC1mbGV4JywgJ2ZsZXgnXSxcbiAgJ2lubGluZS1mbGV4JzogWyctd2Via2l0LWlubGluZS1ib3gnLCAnLW1vei1pbmxpbmUtYm94JywgJy1tcy1pbmxpbmUtZmxleGJveCcsICctd2Via2l0LWlubGluZS1mbGV4JywgJ2lubGluZS1mbGV4J11cbn07XG5cbmZ1bmN0aW9uIGZsZXgocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gdmFsdWVzW3ZhbHVlXTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4ID0gdW53cmFwRXhwb3J0cyhmbGV4XzEpO1xuXG52YXIgZmxleGJveElFXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94SUU7XG52YXIgYWx0ZXJuYXRpdmVWYWx1ZXMgPSB7XG4gICdzcGFjZS1hcm91bmQnOiAnZGlzdHJpYnV0ZScsXG4gICdzcGFjZS1iZXR3ZWVuJzogJ2p1c3RpZnknLFxuICAnZmxleC1zdGFydCc6ICdzdGFydCcsXG4gICdmbGV4LWVuZCc6ICdlbmQnXG59O1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIGFsaWduQ29udGVudDogJ21zRmxleExpbmVQYWNrJyxcbiAgYWxpZ25TZWxmOiAnbXNGbGV4SXRlbUFsaWduJyxcbiAgYWxpZ25JdGVtczogJ21zRmxleEFsaWduJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdtc0ZsZXhQYWNrJyxcbiAgb3JkZXI6ICdtc0ZsZXhPcmRlcicsXG4gIGZsZXhHcm93OiAnbXNGbGV4UG9zaXRpdmUnLFxuICBmbGV4U2hyaW5rOiAnbXNGbGV4TmVnYXRpdmUnLFxuICBmbGV4QmFzaXM6ICdtc0ZsZXhQcmVmZXJyZWRTaXplJ1xuICAvLyBGdWxsIGV4cGFuZGVkIHN5bnRheCBpcyBmbGV4LWdyb3cgfCBmbGV4LXNocmluayB8IGZsZXgtYmFzaXMuXG59O3ZhciBmbGV4U2hvcnRoYW5kTWFwcGluZ3MgPSB7XG4gIGF1dG86ICcxIDEgYXV0bycsXG4gIGluaGVyaXQ6ICdpbmhlcml0JyxcbiAgaW5pdGlhbDogJzAgMSBhdXRvJyxcbiAgbm9uZTogJzAgMCBhdXRvJyxcbiAgdW5zZXQ6ICd1bnNldCdcbn07XG52YXIgaXNVbml0bGVzc051bWJlciA9IC9eXFxkKyhcXC5cXGQrKT8kLztcblxuZnVuY3Rpb24gZmxleGJveElFKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BzW3Byb3BlcnR5XV0gPSBhbHRlcm5hdGl2ZVZhbHVlc1t2YWx1ZV0gfHwgdmFsdWU7XG4gIH1cbiAgaWYgKHByb3BlcnR5ID09PSAnZmxleCcpIHtcbiAgICAvLyBGb3IgY2VydGFpbiB2YWx1ZXMgd2UgY2FuIGRvIHN0cmFpZ2h0IG1hcHBpbmdzIGJhc2VkIG9uIHRoZSBzcGVjXG4gICAgLy8gZm9yIHRoZSBleHBhbnNpb25zLlxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZmxleFNob3J0aGFuZE1hcHBpbmdzLCB2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhTaG9ydGhhbmRNYXBwaW5nc1t2YWx1ZV07XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIEhlcmUgd2UgaGF2ZSBubyBkaXJlY3QgbWFwcGluZywgc28gd2UgZmF2b3IgbG9va2luZyBmb3IgYVxuICAgIC8vIHVuaXRsZXNzIHBvc2l0aXZlIG51bWJlciBhcyB0aGF0IHdpbGwgYmUgdGhlIG1vc3QgY29tbW9uIHVzZS1jYXNlLlxuICAgIGlmIChpc1VuaXRsZXNzTnVtYmVyLnRlc3QodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZSArICcgMSAwJSc7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVGhlIG5leHQgdGhpbmcgd2UgY2FuIGxvb2sgZm9yIGlzIGlmIHRoZXJlIGFyZSBtdWx0aXBsZSB2YWx1ZXMuXG4gICAgdmFyIGZsZXhWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvXFxzLyk7XG4gICAgLy8gSWYgd2Ugb25seSBoYXZlIGEgc2luZ2xlIHZhbHVlIHRoYXQgd2Fzbid0IGEgcG9zaXRpdmUgdW5pdGxlc3NcbiAgICAvLyBvciBhIHByZS1tYXBwZWQgdmFsdWUsIHRoZW4gd2UgY2FuIGFzc3VtZSBpdCBpcyBhIHVuaXQgdmFsdWUuXG4gICAgc3dpdGNoIChmbGV4VmFsdWVzLmxlbmd0aCkge1xuICAgICAgY2FzZSAxOlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSAnMSAxICcgKyB2YWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgY2FzZSAyOlxuICAgICAgICAvLyBJZiB3ZSBoYXZlIDIgdW5pdHMsIHRoZW4gd2UgZXhwZWN0IHRoYXQgdGhlIGZpcnN0IHdpbGxcbiAgICAgICAgLy8gYWx3YXlzIGJlIGEgdW5pdGxlc3MgbnVtYmVyIGFuZCByZXByZXNlbnRzIGZsZXgtZ3Jvdy5cbiAgICAgICAgLy8gVGhlIHNlY29uZCB1bml0IHdpbGwgcmVwcmVzZW50IGZsZXgtc2hyaW5rIGZvciBhIHVuaXRsZXNzXG4gICAgICAgIC8vIHZhbHVlLCBvciBmbGV4LWJhc2lzIG90aGVyd2lzZS5cbiAgICAgICAgaWYgKGlzVW5pdGxlc3NOdW1iZXIudGVzdChmbGV4VmFsdWVzWzFdKSkge1xuICAgICAgICAgIHN0eWxlLm1zRmxleCA9IGZsZXhWYWx1ZXNbMF0gKyAnICcgKyBmbGV4VmFsdWVzWzFdICsgJyAwJSc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3R5bGUubXNGbGV4ID0gZmxleFZhbHVlc1swXSArICcgMSAnICsgZmxleFZhbHVlc1sxXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBzdHlsZS5tc0ZsZXggPSB2YWx1ZTtcbiAgICB9XG4gIH1cbn1cbn0pO1xuXG52YXIgZmxleGJveElFID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94SUVfMSk7XG5cbnZhciBmbGV4Ym94T2xkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4Ym94T2xkO1xudmFyIGFsdGVybmF0aXZlVmFsdWVzID0ge1xuICAnc3BhY2UtYXJvdW5kJzogJ2p1c3RpZnknLFxuICAnc3BhY2UtYmV0d2Vlbic6ICdqdXN0aWZ5JyxcbiAgJ2ZsZXgtc3RhcnQnOiAnc3RhcnQnLFxuICAnZmxleC1lbmQnOiAnZW5kJyxcbiAgJ3dyYXAtcmV2ZXJzZSc6ICdtdWx0aXBsZScsXG4gIHdyYXA6ICdtdWx0aXBsZSdcbn07XG5cbnZhciBhbHRlcm5hdGl2ZVByb3BzID0ge1xuICBhbGlnbkl0ZW1zOiAnV2Via2l0Qm94QWxpZ24nLFxuICBqdXN0aWZ5Q29udGVudDogJ1dlYmtpdEJveFBhY2snLFxuICBmbGV4V3JhcDogJ1dlYmtpdEJveExpbmVzJyxcbiAgZmxleEdyb3c6ICdXZWJraXRCb3hGbGV4J1xufTtcblxuZnVuY3Rpb24gZmxleGJveE9sZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2ZsZXhEaXJlY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICBpZiAodmFsdWUuaW5kZXhPZignY29sdW1uJykgPiAtMSkge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ3ZlcnRpY2FsJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94T3JpZW50ID0gJ2hvcml6b250YWwnO1xuICAgIH1cbiAgICBpZiAodmFsdWUuaW5kZXhPZigncmV2ZXJzZScpID4gLTEpIHtcbiAgICAgIHN0eWxlLldlYmtpdEJveERpcmVjdGlvbiA9ICdyZXZlcnNlJztcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuV2Via2l0Qm94RGlyZWN0aW9uID0gJ25vcm1hbCc7XG4gICAgfVxuICB9XG4gIGlmIChhbHRlcm5hdGl2ZVByb3BzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldXSA9IGFsdGVybmF0aXZlVmFsdWVzW3ZhbHVlXSB8fCB2YWx1ZTtcbiAgfVxufVxufSk7XG5cbnZhciBmbGV4Ym94T2xkID0gdW53cmFwRXhwb3J0cyhmbGV4Ym94T2xkXzEpO1xuXG52YXIgZ3JhZGllbnRfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdyYWRpZW50O1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciB2YWx1ZXMgPSAvbGluZWFyLWdyYWRpZW50fHJhZGlhbC1ncmFkaWVudHxyZXBlYXRpbmctbGluZWFyLWdyYWRpZW50fHJlcGVhdGluZy1yYWRpYWwtZ3JhZGllbnQvZ2k7XG5cbmZ1bmN0aW9uIGdyYWRpZW50KHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZXMudGVzdCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKHZhbHVlcywgZnVuY3Rpb24gKGdyYWQpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeCArIGdyYWQ7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBncmFkaWVudCA9IHVud3JhcEV4cG9ydHMoZ3JhZGllbnRfMSk7XG5cbnZhciBncmlkXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfc2xpY2VkVG9BcnJheSA9IGZ1bmN0aW9uICgpIHsgZnVuY3Rpb24gc2xpY2VJdGVyYXRvcihhcnIsIGkpIHsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0pIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfSByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IHJldHVybiBhcnI7IH0gZWxzZSBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSB7IHJldHVybiBzbGljZUl0ZXJhdG9yKGFyciwgaSk7IH0gZWxzZSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpOyB9IH07IH0oKTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZ3JpZDtcbmZ1bmN0aW9uIGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiAhaXNOYU4odmFsdWUpO1xufVxuXG52YXIgYWxpZ25tZW50VmFsdWVzID0gWydjZW50ZXInLCAnZW5kJywgJ3N0YXJ0JywgJ3N0cmV0Y2gnXTtcblxudmFyIGRpc3BsYXlWYWx1ZXMgPSB7XG4gICdpbmxpbmUtZ3JpZCc6IFsnLW1zLWlubGluZS1ncmlkJywgJ2lubGluZS1ncmlkJ10sXG4gIGdyaWQ6IFsnLW1zLWdyaWQnLCAnZ3JpZCddXG59O1xuXG52YXIgcHJvcGVydHlDb252ZXJ0ZXJzID0ge1xuICBhbGlnblNlbGY6IGZ1bmN0aW9uIGFsaWduU2VsZih2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoYWxpZ25tZW50VmFsdWVzLmluZGV4T2YodmFsdWUpID4gLTEpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd0FsaWduID0gdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIGdyaWRDb2x1bW46IGZ1bmN0aW9uIGdyaWRDb2x1bW4odmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX3ZhbHVlJHNwbGl0JG1hcCA9IHZhbHVlLnNwbGl0KCcvJykubWFwKGZ1bmN0aW9uIChwb3NpdGlvbikge1xuICAgICAgICByZXR1cm4gK3Bvc2l0aW9uO1xuICAgICAgfSksXG4gICAgICAgICAgX3ZhbHVlJHNwbGl0JG1hcDIgPSBfc2xpY2VkVG9BcnJheShfdmFsdWUkc3BsaXQkbWFwLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXAyWzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXAyWzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtblN0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZENvbHVtbkVuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtbkVuZDogZnVuY3Rpb24gZ3JpZENvbHVtbkVuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkQ29sdW1uID0gc3R5bGUubXNHcmlkQ29sdW1uO1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZENvbHVtbikpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtblNwYW4gPSB2YWx1ZSAtIG1zR3JpZENvbHVtbjtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtblN0YXJ0OiBmdW5jdGlvbiBncmlkQ29sdW1uU3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbiA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkUm93OiBmdW5jdGlvbiBncmlkUm93KHZhbHVlLCBzdHlsZSkge1xuICAgIGlmIChpc1NpbXBsZVBvc2l0aW9uVmFsdWUodmFsdWUpKSB7XG4gICAgICBzdHlsZS5tc0dyaWRSb3cgPSB2YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIF92YWx1ZSRzcGxpdCRtYXAzID0gdmFsdWUuc3BsaXQoJy8nKS5tYXAoZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiArcG9zaXRpb247XG4gICAgICB9KSxcbiAgICAgICAgICBfdmFsdWUkc3BsaXQkbWFwNCA9IF9zbGljZWRUb0FycmF5KF92YWx1ZSRzcGxpdCRtYXAzLCAyKSxcbiAgICAgICAgICBzdGFydCA9IF92YWx1ZSRzcGxpdCRtYXA0WzBdLFxuICAgICAgICAgIGVuZCA9IF92YWx1ZSRzcGxpdCRtYXA0WzFdO1xuXG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd1N0YXJ0KHN0YXJ0LCBzdHlsZSk7XG4gICAgICBwcm9wZXJ0eUNvbnZlcnRlcnMuZ3JpZFJvd0VuZChlbmQsIHN0eWxlKTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd0VuZDogZnVuY3Rpb24gZ3JpZFJvd0VuZCh2YWx1ZSwgc3R5bGUpIHtcbiAgICB2YXIgbXNHcmlkUm93ID0gc3R5bGUubXNHcmlkUm93O1xuXG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkgJiYgaXNTaW1wbGVQb3NpdGlvblZhbHVlKG1zR3JpZFJvdykpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvd1NwYW4gPSB2YWx1ZSAtIG1zR3JpZFJvdztcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZFJvd1N0YXJ0OiBmdW5jdGlvbiBncmlkUm93U3RhcnQodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvdyA9IHZhbHVlO1xuICAgIH1cbiAgfSxcblxuICBncmlkVGVtcGxhdGVDb2x1bW5zOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVDb2x1bW5zKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZENvbHVtbnMgPSB2YWx1ZTtcbiAgfSxcblxuICBncmlkVGVtcGxhdGVSb3dzOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVSb3dzKHZhbHVlLCBzdHlsZSkge1xuICAgIHN0eWxlLm1zR3JpZFJvd3MgPSB2YWx1ZTtcbiAgfSxcblxuICBqdXN0aWZ5U2VsZjogZnVuY3Rpb24ganVzdGlmeVNlbGYodmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGFsaWdubWVudFZhbHVlcy5pbmRleE9mKHZhbHVlKSA+IC0xKSB7XG4gICAgICBzdHlsZS5tc0dyaWRDb2x1bW5BbGlnbiA9IHZhbHVlO1xuICAgIH1cbiAgfVxufTtcblxuZnVuY3Rpb24gZ3JpZChwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2Rpc3BsYXknICYmIHZhbHVlIGluIGRpc3BsYXlWYWx1ZXMpIHtcbiAgICByZXR1cm4gZGlzcGxheVZhbHVlc1t2YWx1ZV07XG4gIH1cblxuICBpZiAocHJvcGVydHkgaW4gcHJvcGVydHlDb252ZXJ0ZXJzKSB7XG4gICAgdmFyIHByb3BlcnR5Q29udmVydGVyID0gcHJvcGVydHlDb252ZXJ0ZXJzW3Byb3BlcnR5XTtcbiAgICBwcm9wZXJ0eUNvbnZlcnRlcih2YWx1ZSwgc3R5bGUpO1xuICB9XG59XG59KTtcblxudmFyIGdyaWQgPSB1bndyYXBFeHBvcnRzKGdyaWRfMSk7XG5cbnZhciBpbWFnZVNldF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaW1hZ2VTZXQ7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNmZWF0PWNzcy1pbWFnZS1zZXRcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnJ107XG5mdW5jdGlvbiBpbWFnZVNldChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgISgwLCBfaXNQcmVmaXhlZFZhbHVlMi5kZWZhdWx0KSh2YWx1ZSkgJiYgdmFsdWUuaW5kZXhPZignaW1hZ2Utc2V0KCcpID4gLTEpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9pbWFnZS1zZXRcXCgvZywgcHJlZml4ICsgJ2ltYWdlLXNldCgnKTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBpbWFnZVNldCA9IHVud3JhcEV4cG9ydHMoaW1hZ2VTZXRfMSk7XG5cbnZhciBsb2dpY2FsXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBsb2dpY2FsO1xudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIG1hcmdpbkJsb2NrU3RhcnQ6IFsnV2Via2l0TWFyZ2luQmVmb3JlJ10sXG4gIG1hcmdpbkJsb2NrRW5kOiBbJ1dlYmtpdE1hcmdpbkFmdGVyJ10sXG4gIG1hcmdpbklubGluZVN0YXJ0OiBbJ1dlYmtpdE1hcmdpblN0YXJ0JywgJ01vek1hcmdpblN0YXJ0J10sXG4gIG1hcmdpbklubGluZUVuZDogWydXZWJraXRNYXJnaW5FbmQnLCAnTW96TWFyZ2luRW5kJ10sXG4gIHBhZGRpbmdCbG9ja1N0YXJ0OiBbJ1dlYmtpdFBhZGRpbmdCZWZvcmUnXSxcbiAgcGFkZGluZ0Jsb2NrRW5kOiBbJ1dlYmtpdFBhZGRpbmdBZnRlciddLFxuICBwYWRkaW5nSW5saW5lU3RhcnQ6IFsnV2Via2l0UGFkZGluZ1N0YXJ0JywgJ01velBhZGRpbmdTdGFydCddLFxuICBwYWRkaW5nSW5saW5lRW5kOiBbJ1dlYmtpdFBhZGRpbmdFbmQnLCAnTW96UGFkZGluZ0VuZCddLFxuICBib3JkZXJCbG9ja1N0YXJ0OiBbJ1dlYmtpdEJvcmRlckJlZm9yZSddLFxuICBib3JkZXJCbG9ja1N0YXJ0Q29sb3I6IFsnV2Via2l0Qm9yZGVyQmVmb3JlQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlckJlZm9yZVN0eWxlJ10sXG4gIGJvcmRlckJsb2NrU3RhcnRXaWR0aDogWydXZWJraXRCb3JkZXJCZWZvcmVXaWR0aCddLFxuICBib3JkZXJCbG9ja0VuZDogWydXZWJraXRCb3JkZXJBZnRlciddLFxuICBib3JkZXJCbG9ja0VuZENvbG9yOiBbJ1dlYmtpdEJvcmRlckFmdGVyQ29sb3InXSxcbiAgYm9yZGVyQmxvY2tFbmRTdHlsZTogWydXZWJraXRCb3JkZXJBZnRlclN0eWxlJ10sXG4gIGJvcmRlckJsb2NrRW5kV2lkdGg6IFsnV2Via2l0Qm9yZGVyQWZ0ZXJXaWR0aCddLFxuICBib3JkZXJJbmxpbmVTdGFydDogWydXZWJraXRCb3JkZXJTdGFydCcsICdNb3pCb3JkZXJTdGFydCddLFxuICBib3JkZXJJbmxpbmVTdGFydENvbG9yOiBbJ1dlYmtpdEJvcmRlclN0YXJ0Q29sb3InLCAnTW96Qm9yZGVyU3RhcnRDb2xvciddLFxuICBib3JkZXJJbmxpbmVTdGFydFN0eWxlOiBbJ1dlYmtpdEJvcmRlclN0YXJ0U3R5bGUnLCAnTW96Qm9yZGVyU3RhcnRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVTdGFydFdpZHRoOiBbJ1dlYmtpdEJvcmRlclN0YXJ0V2lkdGgnLCAnTW96Qm9yZGVyU3RhcnRXaWR0aCddLFxuICBib3JkZXJJbmxpbmVFbmQ6IFsnV2Via2l0Qm9yZGVyRW5kJywgJ01vekJvcmRlckVuZCddLFxuICBib3JkZXJJbmxpbmVFbmRDb2xvcjogWydXZWJraXRCb3JkZXJFbmRDb2xvcicsICdNb3pCb3JkZXJFbmRDb2xvciddLFxuICBib3JkZXJJbmxpbmVFbmRTdHlsZTogWydXZWJraXRCb3JkZXJFbmRTdHlsZScsICdNb3pCb3JkZXJFbmRTdHlsZSddLFxuICBib3JkZXJJbmxpbmVFbmRXaWR0aDogWydXZWJraXRCb3JkZXJFbmRXaWR0aCcsICdNb3pCb3JkZXJFbmRXaWR0aCddXG59O1xuXG5mdW5jdGlvbiBsb2dpY2FsKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhbHRlcm5hdGl2ZVByb3BzLCBwcm9wZXJ0eSkpIHtcbiAgICB2YXIgYWx0ZXJuYXRpdmVQcm9wTGlzdCA9IGFsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldO1xuICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBhbHRlcm5hdGl2ZVByb3BMaXN0Lmxlbmd0aDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICBzdHlsZVthbHRlcm5hdGl2ZVByb3BMaXN0W2ldXSA9IHZhbHVlO1xuICAgIH1cbiAgfVxufVxufSk7XG5cbnZhciBsb2dpY2FsID0gdW53cmFwRXhwb3J0cyhsb2dpY2FsXzEpO1xuXG52YXIgcG9zaXRpb25fMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBvc2l0aW9uO1xuZnVuY3Rpb24gcG9zaXRpb24ocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ3Bvc2l0aW9uJyAmJiB2YWx1ZSA9PT0gJ3N0aWNreScpIHtcbiAgICByZXR1cm4gWyctd2Via2l0LXN0aWNreScsICdzdGlja3knXTtcbiAgfVxufVxufSk7XG5cbnZhciBwb3NpdGlvbiA9IHVud3JhcEV4cG9ydHMocG9zaXRpb25fMSk7XG5cbnZhciBzaXppbmdfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHNpemluZztcbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICBtYXhIZWlnaHQ6IHRydWUsXG4gIG1heFdpZHRoOiB0cnVlLFxuICB3aWR0aDogdHJ1ZSxcbiAgaGVpZ2h0OiB0cnVlLFxuICBjb2x1bW5XaWR0aDogdHJ1ZSxcbiAgbWluV2lkdGg6IHRydWUsXG4gIG1pbkhlaWdodDogdHJ1ZVxufTtcbnZhciB2YWx1ZXMgPSB7XG4gICdtaW4tY29udGVudCc6IHRydWUsXG4gICdtYXgtY29udGVudCc6IHRydWUsXG4gICdmaWxsLWF2YWlsYWJsZSc6IHRydWUsXG4gICdmaXQtY29udGVudCc6IHRydWUsXG4gICdjb250YWluLWZsb2F0cyc6IHRydWVcbn07XG5cbmZ1bmN0aW9uIHNpemluZyhwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpICYmIHZhbHVlcy5oYXNPd25Qcm9wZXJ0eSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiBwcmVmaXggKyB2YWx1ZTtcbiAgICB9KTtcbiAgfVxufVxufSk7XG5cbnZhciBzaXppbmcgPSB1bndyYXBFeHBvcnRzKHNpemluZ18xKTtcblxuLyogZXNsaW50LWRpc2FibGUgbm8tdmFyLCBwcmVmZXItdGVtcGxhdGUgKi9cbnZhciB1cHBlcmNhc2VQYXR0ZXJuID0gL1tBLVpdL2c7XG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xudmFyIGNhY2hlID0ge307XG5cbmZ1bmN0aW9uIHRvSHlwaGVuTG93ZXIobWF0Y2gpIHtcbiAgcmV0dXJuICctJyArIG1hdGNoLnRvTG93ZXJDYXNlKClcbn1cblxuZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKG5hbWUpIHtcbiAgaWYgKGNhY2hlLmhhc093blByb3BlcnR5KG5hbWUpKSB7XG4gICAgcmV0dXJuIGNhY2hlW25hbWVdXG4gIH1cblxuICB2YXIgaE5hbWUgPSBuYW1lLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgdG9IeXBoZW5Mb3dlcik7XG4gIHJldHVybiAoY2FjaGVbbmFtZV0gPSBtc1BhdHRlcm4udGVzdChoTmFtZSkgPyAnLScgKyBoTmFtZSA6IGhOYW1lKVxufVxuXG52YXIgaHlwaGVuYXRlU3R5bGVOYW1lJDEgPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIGRlZmF1bHQ6IGh5cGhlbmF0ZVN0eWxlTmFtZVxufSk7XG5cbnZhciBfaHlwaGVuYXRlU3R5bGVOYW1lID0gZ2V0Q2pzRXhwb3J0RnJvbU5hbWVzcGFjZShoeXBoZW5hdGVTdHlsZU5hbWUkMSk7XG5cbnZhciBoeXBoZW5hdGVQcm9wZXJ0eV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaHlwaGVuYXRlUHJvcGVydHk7XG5cblxuXG52YXIgX2h5cGhlbmF0ZVN0eWxlTmFtZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9oeXBoZW5hdGVTdHlsZU5hbWUpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBoeXBoZW5hdGVQcm9wZXJ0eShwcm9wZXJ0eSkge1xuICByZXR1cm4gKDAsIF9oeXBoZW5hdGVTdHlsZU5hbWUyLmRlZmF1bHQpKHByb3BlcnR5KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddO1xufSk7XG5cbnVud3JhcEV4cG9ydHMoaHlwaGVuYXRlUHJvcGVydHlfMSk7XG5cbnZhciB0cmFuc2l0aW9uXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0cmFuc2l0aW9uO1xuXG5cblxudmFyIF9oeXBoZW5hdGVQcm9wZXJ0eTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGh5cGhlbmF0ZVByb3BlcnR5XzEpO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cblxuXG52YXIgX2NhcGl0YWxpemVTdHJpbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG52YXIgcHJvcGVydGllcyA9IHtcbiAgdHJhbnNpdGlvbjogdHJ1ZSxcbiAgdHJhbnNpdGlvblByb3BlcnR5OiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uOiB0cnVlLFxuICBXZWJraXRUcmFuc2l0aW9uUHJvcGVydHk6IHRydWUsXG4gIE1velRyYW5zaXRpb246IHRydWUsXG4gIE1velRyYW5zaXRpb25Qcm9wZXJ0eTogdHJ1ZVxufTtcblxuXG52YXIgcHJlZml4TWFwcGluZyA9IHtcbiAgV2Via2l0OiAnLXdlYmtpdC0nLFxuICBNb3o6ICctbW96LScsXG4gIG1zOiAnLW1zLSdcbn07XG5cbmZ1bmN0aW9uIHByZWZpeFZhbHVlKHZhbHVlLCBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICBpZiAoKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIC8vIG9ubHkgc3BsaXQgbXVsdGkgdmFsdWVzLCBub3QgY3ViaWMgYmV6aWVyc1xuICB2YXIgbXVsdGlwbGVWYWx1ZXMgPSB2YWx1ZS5zcGxpdCgvLCg/IVteKCldKig/OlxcKFteKCldKlxcKSk/XFwpKS9nKTtcblxuICBmb3IgKHZhciBpID0gMCwgbGVuID0gbXVsdGlwbGVWYWx1ZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgc2luZ2xlVmFsdWUgPSBtdWx0aXBsZVZhbHVlc1tpXTtcbiAgICB2YXIgdmFsdWVzID0gW3NpbmdsZVZhbHVlXTtcbiAgICBmb3IgKHZhciBwcm9wZXJ0eSBpbiBwcm9wZXJ0eVByZWZpeE1hcCkge1xuICAgICAgdmFyIGRhc2hDYXNlUHJvcGVydHkgPSAoMCwgX2h5cGhlbmF0ZVByb3BlcnR5Mi5kZWZhdWx0KShwcm9wZXJ0eSk7XG5cbiAgICAgIGlmIChzaW5nbGVWYWx1ZS5pbmRleE9mKGRhc2hDYXNlUHJvcGVydHkpID4gLTEgJiYgZGFzaENhc2VQcm9wZXJ0eSAhPT0gJ29yZGVyJykge1xuICAgICAgICB2YXIgcHJlZml4ZXMgPSBwcm9wZXJ0eVByZWZpeE1hcFtwcm9wZXJ0eV07XG4gICAgICAgIGZvciAodmFyIGogPSAwLCBwTGVuID0gcHJlZml4ZXMubGVuZ3RoOyBqIDwgcExlbjsgKytqKSB7XG4gICAgICAgICAgLy8gam9pbiBhbGwgcHJlZml4ZXMgYW5kIGNyZWF0ZSBhIG5ldyB2YWx1ZVxuICAgICAgICAgIHZhbHVlcy51bnNoaWZ0KHNpbmdsZVZhbHVlLnJlcGxhY2UoZGFzaENhc2VQcm9wZXJ0eSwgcHJlZml4TWFwcGluZ1twcmVmaXhlc1tqXV0gKyBkYXNoQ2FzZVByb3BlcnR5KSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBtdWx0aXBsZVZhbHVlc1tpXSA9IHZhbHVlcy5qb2luKCcsJyk7XG4gIH1cblxuICByZXR1cm4gbXVsdGlwbGVWYWx1ZXMuam9pbignLCcpO1xufVxuXG5mdW5jdGlvbiB0cmFuc2l0aW9uKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gIC8vIGFsc28gY2hlY2sgZm9yIGFscmVhZHkgcHJlZml4ZWQgdHJhbnNpdGlvbnNcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgJiYgcHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkpIHtcbiAgICB2YXIgb3V0cHV0VmFsdWUgPSBwcmVmaXhWYWx1ZSh2YWx1ZSwgcHJvcGVydHlQcmVmaXhNYXApO1xuICAgIC8vIGlmIHRoZSBwcm9wZXJ0eSBpcyBhbHJlYWR5IHByZWZpeGVkXG4gICAgdmFyIHdlYmtpdE91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8tbW96LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ1dlYmtpdCcpID4gLTEpIHtcbiAgICAgIHJldHVybiB3ZWJraXRPdXRwdXQ7XG4gICAgfVxuXG4gICAgdmFyIG1vek91dHB1dCA9IG91dHB1dFZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpLmZpbHRlcihmdW5jdGlvbiAodmFsKSB7XG4gICAgICByZXR1cm4gIS8td2Via2l0LXwtbXMtLy50ZXN0KHZhbCk7XG4gICAgfSkuam9pbignLCcpO1xuXG4gICAgaWYgKHByb3BlcnR5LmluZGV4T2YoJ01veicpID4gLTEpIHtcbiAgICAgIHJldHVybiBtb3pPdXRwdXQ7XG4gICAgfVxuXG4gICAgc3R5bGVbJ1dlYmtpdCcgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSB3ZWJraXRPdXRwdXQ7XG4gICAgc3R5bGVbJ01veicgKyAoMCwgX2NhcGl0YWxpemVTdHJpbmcyLmRlZmF1bHQpKHByb3BlcnR5KV0gPSBtb3pPdXRwdXQ7XG4gICAgcmV0dXJuIG91dHB1dFZhbHVlO1xuICB9XG59XG59KTtcblxudmFyIHRyYW5zaXRpb24gPSB1bndyYXBFeHBvcnRzKHRyYW5zaXRpb25fMSk7XG5cbnZhciB3ID0gW1wiV2Via2l0XCJdO1xudmFyIG0gPSBbXCJNb3pcIl07XG52YXIgbXMgPSBbXCJtc1wiXTtcbnZhciB3bSA9IFtcIldlYmtpdFwiLCBcIk1velwiXTtcbnZhciB3bXMgPSBbXCJXZWJraXRcIiwgXCJtc1wiXTtcbnZhciB3bW1zID0gW1wiV2Via2l0XCIsIFwiTW96XCIsIFwibXNcIl07XG52YXIgc3RhdGljRGF0YSA9IHtcbiAgcGx1Z2luczogW2JhY2tncm91bmRDbGlwLCBjYWxjLCBjcm9zc0ZhZGUsIGN1cnNvciwgZmlsdGVyLCBmbGV4LCBmbGV4Ym94SUUsIGZsZXhib3hPbGQsIGdyYWRpZW50LCBncmlkLCBpbWFnZVNldCwgbG9naWNhbCwgcG9zaXRpb24sIHNpemluZywgdHJhbnNpdGlvbl0sXG4gIHByZWZpeE1hcDoge1xuICAgIFwidHJhbnNmb3JtXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpblwiOiB3bXMsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5YXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpbllcIjogd21zLFxuICAgIFwiYmFja2ZhY2VWaXNpYmlsaXR5XCI6IHcsXG4gICAgXCJwZXJzcGVjdGl2ZVwiOiB3LFxuICAgIFwicGVyc3BlY3RpdmVPcmlnaW5cIjogdyxcbiAgICBcInRyYW5zZm9ybVN0eWxlXCI6IHcsXG4gICAgXCJ0cmFuc2Zvcm1PcmlnaW5aXCI6IHcsXG4gICAgXCJhbmltYXRpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkRlbGF5XCI6IHcsXG4gICAgXCJhbmltYXRpb25EaXJlY3Rpb25cIjogdyxcbiAgICBcImFuaW1hdGlvbkZpbGxNb2RlXCI6IHcsXG4gICAgXCJhbmltYXRpb25EdXJhdGlvblwiOiB3LFxuICAgIFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdyxcbiAgICBcImFuaW1hdGlvbk5hbWVcIjogdyxcbiAgICBcImFuaW1hdGlvblBsYXlTdGF0ZVwiOiB3LFxuICAgIFwiYW5pbWF0aW9uVGltaW5nRnVuY3Rpb25cIjogdyxcbiAgICBcImFwcGVhcmFuY2VcIjogd20sXG4gICAgXCJ1c2VyU2VsZWN0XCI6IHdtbXMsXG4gICAgXCJmb250S2VybmluZ1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzUG9zaXRpb25cIjogdyxcbiAgICBcInRleHRFbXBoYXNpc1wiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzU3R5bGVcIjogdyxcbiAgICBcInRleHRFbXBoYXNpc0NvbG9yXCI6IHcsXG4gICAgXCJib3hEZWNvcmF0aW9uQnJlYWtcIjogdyxcbiAgICBcImNsaXBQYXRoXCI6IHcsXG4gICAgXCJtYXNrSW1hZ2VcIjogdyxcbiAgICBcIm1hc2tNb2RlXCI6IHcsXG4gICAgXCJtYXNrUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrUG9zaXRpb25cIjogdyxcbiAgICBcIm1hc2tDbGlwXCI6IHcsXG4gICAgXCJtYXNrT3JpZ2luXCI6IHcsXG4gICAgXCJtYXNrU2l6ZVwiOiB3LFxuICAgIFwibWFza0NvbXBvc2l0ZVwiOiB3LFxuICAgIFwibWFza1wiOiB3LFxuICAgIFwibWFza0JvcmRlclNvdXJjZVwiOiB3LFxuICAgIFwibWFza0JvcmRlck1vZGVcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJTbGljZVwiOiB3LFxuICAgIFwibWFza0JvcmRlcldpZHRoXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyT3V0c2V0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyUmVwZWF0XCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyXCI6IHcsXG4gICAgXCJtYXNrVHlwZVwiOiB3LFxuICAgIFwidGV4dERlY29yYXRpb25TdHlsZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uU2tpcFwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uTGluZVwiOiB3bSxcbiAgICBcInRleHREZWNvcmF0aW9uQ29sb3JcIjogd20sXG4gICAgXCJmaWx0ZXJcIjogdyxcbiAgICBcImZvbnRGZWF0dXJlU2V0dGluZ3NcIjogd20sXG4gICAgXCJicmVha0FmdGVyXCI6IHdtbXMsXG4gICAgXCJicmVha0JlZm9yZVwiOiB3bW1zLFxuICAgIFwiYnJlYWtJbnNpZGVcIjogd21tcyxcbiAgICBcImNvbHVtbkNvdW50XCI6IHdtLFxuICAgIFwiY29sdW1uRmlsbFwiOiB3bSxcbiAgICBcImNvbHVtbkdhcFwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlQ29sb3JcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlU3R5bGVcIjogd20sXG4gICAgXCJjb2x1bW5SdWxlV2lkdGhcIjogd20sXG4gICAgXCJjb2x1bW5zXCI6IHdtLFxuICAgIFwiY29sdW1uU3BhblwiOiB3bSxcbiAgICBcImNvbHVtbldpZHRoXCI6IHdtLFxuICAgIFwid3JpdGluZ01vZGVcIjogd21zLFxuICAgIFwiZmxleFwiOiB3bXMsXG4gICAgXCJmbGV4QmFzaXNcIjogdyxcbiAgICBcImZsZXhEaXJlY3Rpb25cIjogd21zLFxuICAgIFwiZmxleEdyb3dcIjogdyxcbiAgICBcImZsZXhGbG93XCI6IHdtcyxcbiAgICBcImZsZXhTaHJpbmtcIjogdyxcbiAgICBcImZsZXhXcmFwXCI6IHdtcyxcbiAgICBcImFsaWduQ29udGVudFwiOiB3LFxuICAgIFwiYWxpZ25JdGVtc1wiOiB3LFxuICAgIFwiYWxpZ25TZWxmXCI6IHcsXG4gICAgXCJqdXN0aWZ5Q29udGVudFwiOiB3LFxuICAgIFwib3JkZXJcIjogdyxcbiAgICBcInRyYW5zaXRpb25EZWxheVwiOiB3LFxuICAgIFwidHJhbnNpdGlvbkR1cmF0aW9uXCI6IHcsXG4gICAgXCJ0cmFuc2l0aW9uUHJvcGVydHlcIjogdyxcbiAgICBcInRyYW5zaXRpb25UaW1pbmdGdW5jdGlvblwiOiB3LFxuICAgIFwiYmFja2Ryb3BGaWx0ZXJcIjogdyxcbiAgICBcInNjcm9sbFNuYXBUeXBlXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNYXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBQb2ludHNZXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBEZXN0aW5hdGlvblwiOiB3bXMsXG4gICAgXCJzY3JvbGxTbmFwQ29vcmRpbmF0ZVwiOiB3bXMsXG4gICAgXCJzaGFwZUltYWdlVGhyZXNob2xkXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlTWFyZ2luXCI6IHcsXG4gICAgXCJzaGFwZUltYWdlT3V0c2lkZVwiOiB3LFxuICAgIFwiaHlwaGVuc1wiOiB3bW1zLFxuICAgIFwiZmxvd0ludG9cIjogd21zLFxuICAgIFwiZmxvd0Zyb21cIjogd21zLFxuICAgIFwicmVnaW9uRnJhZ21lbnRcIjogd21zLFxuICAgIFwidGV4dE9yaWVudGF0aW9uXCI6IHcsXG4gICAgXCJib3hTaXppbmdcIjogbSxcbiAgICBcInRleHRBbGlnbkxhc3RcIjogbSxcbiAgICBcInRhYlNpemVcIjogbSxcbiAgICBcIndyYXBGbG93XCI6IG1zLFxuICAgIFwid3JhcFRocm91Z2hcIjogbXMsXG4gICAgXCJ3cmFwTWFyZ2luXCI6IG1zLFxuICAgIFwidG91Y2hBY3Rpb25cIjogbXMsXG4gICAgXCJ0ZXh0U2l6ZUFkanVzdFwiOiB3bXMsXG4gICAgXCJib3JkZXJJbWFnZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VPdXRzZXRcIjogdyxcbiAgICBcImJvcmRlckltYWdlUmVwZWF0XCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNsaWNlXCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVNvdXJjZVwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VXaWR0aFwiOiB3XG4gIH1cbn07XG5cbnZhciBwcmVmaXhBbGwgPSBjcmVhdGVQcmVmaXhlcihzdGF0aWNEYXRhKTtcbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vaW5kZXguanMnO1xudHlwZSBTdHJpbmdIYW5kbGVycyA9IHsgW2lkOnN0cmluZ106IEZ1bmN0aW9uIH07XG50eXBlIFNlbGVjdG9yQ2FsbGJhY2sgPSAoc2VsZWN0b3I6IHN0cmluZykgPT4gc3RyaW5nW107XG5leHBvcnQgdHlwZSBTZWxlY3RvckhhbmRsZXIgPSAoXG4gICAgc2VsZWN0b3I6IHN0cmluZyxcbiAgICBiYXNlU2VsZWN0b3I6IHN0cmluZyxcbiAgICBjYWxsYmFjazogU2VsZWN0b3JDYWxsYmFja1xuKSA9PiBzdHJpbmdbXSB8IHN0cmluZyB8IG51bGw7XG4qL1xuXG4vKipcbiAqIGBzZWxlY3RvckhhbmRsZXJzYCBhcmUgZnVuY3Rpb25zIHdoaWNoIGhhbmRsZSBzcGVjaWFsIHNlbGVjdG9ycyB3aGljaCBhY3RcbiAqIGRpZmZlcmVudGx5IHRoYW4gbm9ybWFsIHN0eWxlIGRlZmluaXRpb25zLiBUaGVzZSBmdW5jdGlvbnMgbG9vayBhdCB0aGVcbiAqIGN1cnJlbnQgc2VsZWN0b3IgYW5kIGNhbiBnZW5lcmF0ZSBDU1MgZm9yIHRoZSBzdHlsZXMgaW4gdGhlaXIgc3VidHJlZSBieVxuICogY2FsbGluZyB0aGUgY2FsbGJhY2sgd2l0aCBhIG5ldyBzZWxlY3Rvci5cbiAqXG4gKiBGb3IgZXhhbXBsZSwgd2hlbiBnZW5lcmF0aW5nIHN0eWxlcyB3aXRoIGEgYmFzZSBzZWxlY3RvciBvZiAnLmZvbycgYW5kIHRoZVxuICogZm9sbG93aW5nIHN0eWxlcyBvYmplY3Q6XG4gKlxuICogICB7XG4gKiAgICAgJzpudGgtY2hpbGQoMm4pJzoge1xuICogICAgICAgJzpob3Zlcic6IHtcbiAqICAgICAgICAgY29sb3I6ICdyZWQnXG4gKiAgICAgICB9XG4gKiAgICAgfVxuICogICB9XG4gKlxuICogd2hlbiB3ZSByZWFjaCB0aGUgJzpob3Zlcicgc3R5bGUsIHdlIHdvdWxkIGNhbGwgb3VyIHNlbGVjdG9yIGhhbmRsZXJzIGxpa2VcbiAqXG4gKiAgIGhhbmRsZXIoJzpob3ZlcicsICcuZm9vOm50aC1jaGlsZCgybiknLCBjYWxsYmFjaylcbiAqXG4gKiBTaW5jZSBvdXIgYHBzZXVkb1NlbGVjdG9yc2AgaGFuZGxlcyAnOmhvdmVyJyBzdHlsZXMsIHRoYXQgaGFuZGxlciB3b3VsZCBjYWxsXG4gKiB0aGUgY2FsbGJhY2sgbGlrZVxuICpcbiAqICAgY2FsbGJhY2soJy5mb286bnRoLWNoaWxkKDJuKTpob3ZlcicpXG4gKlxuICogdG8gZ2VuZXJhdGUgaXRzIHN1YnRyZWUgYHsgY29sb3I6ICdyZWQnIH1gIHN0eWxlcyB3aXRoIGFcbiAqICcuZm9vOm50aC1jaGlsZCgybik6aG92ZXInIHNlbGVjdG9yLiBUaGUgY2FsbGJhY2sgd291bGQgcmV0dXJuIGFuIGFycmF5IG9mIENTU1xuICogcnVsZXMgbGlrZVxuICpcbiAqICAgWycuZm9vOm50aC1jaGlsZCgybik6aG92ZXJ7Y29sb3I6cmVkICFpbXBvcnRhbnQ7fSddXG4gKlxuICogYW5kIHRoZSBoYW5kbGVyIHdvdWxkIHRoZW4gcmV0dXJuIHRoYXQgcmVzdWx0aW5nIENTUy5cbiAqXG4gKiBgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnNgIGlzIHRoZSBsaXN0IG9mIGRlZmF1bHQgaGFuZGxlcnMgdXNlZCBpbiBhIGNhbGwgdG9cbiAqIGBnZW5lcmF0ZUNTU2AuXG4gKlxuICogQG5hbWUgU2VsZWN0b3JIYW5kbGVyXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvcjogVGhlIGN1cnJlbnRseSBpbnNwZWN0ZWQgc2VsZWN0b3IuICc6aG92ZXInIGluIHRoZVxuICogICAgIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gYmFzZVNlbGVjdG9yOiBUaGUgc2VsZWN0b3Igb2YgdGhlIHBhcmVudCBzdHlsZXMuXG4gKiAgICAgJy5mb286bnRoLWNoaWxkKDJuKScgaW4gdGhlIGV4YW1wbGUgYWJvdmUuXG4gKiBAcGFyYW0ge2Z1bmN0aW9ufSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXM6IEEgZnVuY3Rpb24gd2hpY2ggY2FuIGJlIGNhbGxlZCB0b1xuICogICAgIGdlbmVyYXRlIENTUyBmb3IgdGhlIHN1YnRyZWUgb2Ygc3R5bGVzIGNvcnJlc3BvbmRpbmcgdG8gdGhlIHNlbGVjdG9yLlxuICogICAgIEFjY2VwdHMgYSBuZXcgYmFzZVNlbGVjdG9yIHRvIHVzZSBmb3IgZ2VuZXJhdGluZyB0aG9zZSBzdHlsZXMuXG4gKiBAcmV0dXJucyB7c3RyaW5nW10gfCBzdHJpbmcgfCBudWxsfSBUaGUgZ2VuZXJhdGVkIENTUyBmb3IgdGhpcyBzZWxlY3Rvciwgb3JcbiAqICAgICBudWxsIGlmIHdlIGRvbid0IGhhbmRsZSB0aGlzIHNlbGVjdG9yLlxuICovXG5cbnZhciBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuPSBbLy8gSGFuZGxlIHBzZXVkby1zZWxlY3RvcnMsIGxpa2UgOmhvdmVyIGFuZCA6bnRoLWNoaWxkKDNuKVxuZnVuY3Rpb24gcHNldWRvU2VsZWN0b3JzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiOlwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzKGJhc2VTZWxlY3RvciArIHNlbGVjdG9yKTtcbn0sIC8vIEhhbmRsZSBtZWRpYSBxdWVyaWVzIChvciBmb250LWZhY2VzKVxuZnVuY3Rpb24gbWVkaWFRdWVyaWVzKHNlbGVjdG9yLCBiYXNlU2VsZWN0b3IsIGdlbmVyYXRlU3VidHJlZVN0eWxlcykge1xuICBpZiAoc2VsZWN0b3JbMF0gIT09IFwiQFwiKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0gLy8gR2VuZXJhdGUgdGhlIHN0eWxlcyBub3JtYWxseSwgYW5kIHRoZW4gd3JhcCB0aGVtIGluIHRoZSBtZWRpYSBxdWVyeS5cblxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZVN1YnRyZWVTdHlsZXMoYmFzZVNlbGVjdG9yKTtcbiAgcmV0dXJuIFtcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChnZW5lcmF0ZWQuam9pbignJyksIFwifVwiKV07XG59XTtcbi8qKlxuICogR2VuZXJhdGUgQ1NTIGZvciBhIHNlbGVjdG9yIGFuZCBzb21lIHN0eWxlcy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGhhbmRsZXMgdGhlIG1lZGlhIHF1ZXJpZXMgYW5kIHBzZXVkbyBzZWxlY3RvcnMgdGhhdCBjYW4gYmUgdXNlZFxuICogaW4gYXBocm9kaXRlIHN0eWxlcy5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IEEgYmFzZSBDU1Mgc2VsZWN0b3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgZ2VuZXJhdGVkXG4gKiAgICAgd2l0aC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdHlsZVR5cGVzOiBBIGxpc3Qgb2YgcHJvcGVydGllcyBvZiB0aGUgcmV0dXJuIHR5cGUgb2ZcbiAqICAgICBTdHlsZVNoZWV0LmNyZWF0ZSwgZS5nLiBbc3R5bGVzLnJlZCwgc3R5bGVzLmJsdWVdLlxuICogQHBhcmFtIHtBcnJheS48U2VsZWN0b3JIYW5kbGVyPn0gc2VsZWN0b3JIYW5kbGVyczogQSBsaXN0IG9mIHNlbGVjdG9yXG4gKiAgICAgaGFuZGxlcnMgdG8gdXNlIGZvciBoYW5kbGluZyBzcGVjaWFsIHNlbGVjdG9ycy4gU2VlXG4gKiAgICAgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYC5cbiAqIEBwYXJhbSBzdHJpbmdIYW5kbGVyczogU2VlIGBnZW5lcmF0ZUNTU1J1bGVzZXRgXG4gKiBAcGFyYW0gdXNlSW1wb3J0YW50OiBTZWUgYGdlbmVyYXRlQ1NTUnVsZXNldGBcbiAqXG4gKiBUbyBhY3R1YWxseSBnZW5lcmF0ZSB0aGUgQ1NTIHNwZWNpYWwtY29uc3RydWN0LWxlc3Mgc3R5bGVzIGFyZSBwYXNzZWQgdG9cbiAqIGBnZW5lcmF0ZUNTU1J1bGVzZXRgLlxuICpcbiAqIEZvciBpbnN0YW5jZSwgYSBjYWxsIHRvXG4gKlxuICogICAgIGdlbmVyYXRlQ1NTKFwiLmZvb1wiLCBbe1xuICogICAgICAgY29sb3I6IFwicmVkXCIsXG4gKiAgICAgICBcIkBtZWRpYSBzY3JlZW5cIjoge1xuICogICAgICAgICBoZWlnaHQ6IDIwLFxuICogICAgICAgICBcIjpob3ZlclwiOiB7XG4gKiAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCJcbiAqICAgICAgICAgfVxuICogICAgICAgfSxcbiAqICAgICAgIFwiOmFjdGl2ZVwiOiB7XG4gKiAgICAgICAgIGZvbnRXZWlnaHQ6IFwiYm9sZFwiXG4gKiAgICAgICB9XG4gKiAgICAgfV0sIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzKTtcbiAqXG4gKiB3aXRoIHRoZSBkZWZhdWx0IGBzZWxlY3RvckhhbmRsZXJzYCB3aWxsIG1ha2UgNSBjYWxscyB0b1xuICogYGdlbmVyYXRlQ1NTUnVsZXNldGA6XG4gKlxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBjb2xvcjogXCJyZWRcIiB9LCAuLi4pXG4gKiAgICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmZvbzphY3RpdmVcIiwgeyBmb250V2VpZ2h0OiBcImJvbGRcIiB9LCAuLi4pXG4gKiAgICAgLy8gVGhlc2UgMiB3aWxsIGJlIHdyYXBwZWQgaW4gQG1lZGlhIHNjcmVlbiB7fVxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb29cIiwgeyBoZWlnaHQ6IDIwIH0sIC4uLilcbiAqICAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuZm9vOmhvdmVyXCIsIHsgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCIgfSwgLi4uKVxuICovXG5cbnZhciBnZW5lcmF0ZUNTUyA9IGZ1bmN0aW9uIGdlbmVyYXRlQ1NTKHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBzdHlsZVR5cGVzXG4vKiA6IFNoZWV0RGVmaW5pdGlvbltdICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiwgc3RyaW5nSGFuZGxlcnNcbi8qIDogU3RyaW5nSGFuZGxlcnMgKi9cbiwgdXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbilcbi8qIDogc3RyaW5nW10gKi9cbntcbiAgdmFyIG1lcmdlZCA9IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlVHlwZXMubGVuZ3RoOyBpKyspIHtcbiAgICBtZXJnZWQuYWRkU3R5bGVUeXBlKHN0eWxlVHlwZXNbaV0pO1xuICB9XG5cbiAgdmFyIHBsYWluRGVjbGFyYXRpb25zID0gbmV3IE9yZGVyZWRFbGVtZW50cygpO1xuICB2YXIgZ2VuZXJhdGVkU3R5bGVzID0gW107IC8vIFRPRE8oZW1pbHkpOiBiZW5jaG1hcmsgdGhpcyB0byBzZWUgaWYgYSBwbGFpbiBmb3IgbG9vcCB3b3VsZCBiZSBmYXN0ZXIuXG5cbiAgbWVyZ2VkLmZvckVhY2goZnVuY3Rpb24gKHZhbCwga2V5KSB7XG4gICAgLy8gRm9yIGVhY2gga2V5LCBzZWUgaWYgb25lIG9mIHRoZSBzZWxlY3RvciBoYW5kbGVycyB3aWxsIGhhbmRsZSB0aGVzZVxuICAgIC8vIHN0eWxlcy5cbiAgICB2YXIgZm91bmRIYW5kbGVyID0gc2VsZWN0b3JIYW5kbGVycy5zb21lKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICB2YXIgcmVzdWx0ID0gaGFuZGxlcihrZXksIHNlbGVjdG9yLCBmdW5jdGlvbiAobmV3U2VsZWN0b3IpIHtcbiAgICAgICAgcmV0dXJuIGdlbmVyYXRlQ1NTKG5ld1NlbGVjdG9yLCBbdmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHJlc3VsdCAhPSBudWxsKSB7XG4gICAgICAgIC8vIElmIHRoZSBoYW5kbGVyIHJldHVybmVkIHNvbWV0aGluZywgYWRkIGl0IHRvIHRoZSBnZW5lcmF0ZWRcbiAgICAgICAgLy8gQ1NTIGFuZCBzdG9wIGxvb2tpbmcgZm9yIGFub3RoZXIgaGFuZGxlci5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkge1xuICAgICAgICAgIGdlbmVyYXRlZFN0eWxlcy5wdXNoLmFwcGx5KGdlbmVyYXRlZFN0eWxlcywgX3RvQ29uc3VtYWJsZUFycmF5KHJlc3VsdCkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICAgIGNvbnNvbGUud2FybignV0FSTklORzogU2VsZWN0b3IgaGFuZGxlcnMgc2hvdWxkIHJldHVybiBhbiBhcnJheSBvZiBydWxlcy4nICsgJ1JldHVybmluZyBhIHN0cmluZyBjb250YWluaW5nIG11bHRpcGxlIHJ1bGVzIGlzIGRlcHJlY2F0ZWQuJywgaGFuZGxlcik7XG4gICAgICAgICAgZ2VuZXJhdGVkU3R5bGVzLnB1c2goXCJAbWVkaWEgYWxsIHtcIi5jb25jYXQocmVzdWx0LCBcIn1cIikpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfSk7IC8vIElmIG5vbmUgb2YgdGhlIGhhbmRsZXJzIGhhbmRsZWQgaXQsIGFkZCBpdCB0byB0aGUgbGlzdCBvZiBwbGFpblxuICAgIC8vIHN0eWxlIGRlY2xhcmF0aW9ucy5cblxuICAgIGlmICghZm91bmRIYW5kbGVyKSB7XG4gICAgICBwbGFpbkRlY2xhcmF0aW9ucy5zZXQoa2V5LCB2YWwsIHRydWUpO1xuICAgIH1cbiAgfSk7XG4gIHZhciBnZW5lcmF0ZWRSdWxlc2V0ID0gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yLCBwbGFpbkRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycyk7XG5cbiAgaWYgKGdlbmVyYXRlZFJ1bGVzZXQpIHtcbiAgICBnZW5lcmF0ZWRTdHlsZXMudW5zaGlmdChnZW5lcmF0ZWRSdWxlc2V0KTtcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0ZWRTdHlsZXM7XG59O1xuLyoqXG4gKiBIZWxwZXIgbWV0aG9kIG9mIGdlbmVyYXRlQ1NTUnVsZXNldCB0byBmYWNpbGl0YXRlIGN1c3RvbSBoYW5kbGluZyBvZiBjZXJ0YWluXG4gKiBDU1MgcHJvcGVydGllcy4gVXNlZCBmb3IgZS5nLiBmb250IGZhbWlsaWVzLlxuICpcbiAqIFNlZSBnZW5lcmF0ZUNTU1J1bGVzZXQgZm9yIHVzYWdlIGFuZCBkb2N1bWVudGF0aW9uIG9mIHBhcmFtYXRlciB0eXBlcy5cbiAqL1xuXG52YXIgcnVuU3RyaW5nSGFuZGxlcnMgPSBmdW5jdGlvbiBydW5TdHJpbmdIYW5kbGVycyhkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogdm9pZCAqL1xue1xuICBpZiAoIXN0cmluZ0hhbmRsZXJzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIHN0cmluZ0hhbmRsZXJLZXlzID0gT2JqZWN0LmtleXMoc3RyaW5nSGFuZGxlcnMpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nSGFuZGxlcktleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gc3RyaW5nSGFuZGxlcktleXNbaV07XG5cbiAgICBpZiAoZGVjbGFyYXRpb25zLmhhcyhrZXkpKSB7XG4gICAgICAvLyBBIGRlY2xhcmF0aW9uIGV4aXN0cyBmb3IgdGhpcyBwYXJ0aWN1bGFyIHN0cmluZyBoYW5kbGVyLCBzbyB3ZVxuICAgICAgLy8gbmVlZCB0byBsZXQgdGhlIHN0cmluZyBoYW5kbGVyIGludGVycHJldCB0aGUgZGVjbGFyYXRpb24gZmlyc3RcbiAgICAgIC8vIGJlZm9yZSBwcm9jZWVkaW5nLlxuICAgICAgLy9cbiAgICAgIC8vIFRPRE8oZW1pbHkpOiBQYXNzIGluIGEgY2FsbGJhY2sgd2hpY2ggZ2VuZXJhdGVzIENTUywgc2ltaWxhciB0b1xuICAgICAgLy8gaG93IG91ciBzZWxlY3RvciBoYW5kbGVycyB3b3JrLCBpbnN0ZWFkIG9mIHBhc3NpbmcgaW5cbiAgICAgIC8vIGBzZWxlY3RvckhhbmRsZXJzYCBhbmQgaGF2ZSB0aGVtIG1ha2UgY2FsbHMgdG8gYGdlbmVyYXRlQ1NTYFxuICAgICAgLy8gdGhlbXNlbHZlcy4gUmlnaHQgbm93LCB0aGlzIGlzIGltcHJhY3RpY2FsIGJlY2F1c2Ugb3VyIHN0cmluZ1xuICAgICAgLy8gaGFuZGxlcnMgYXJlIHZlcnkgc3BlY2lhbGl6ZWQgYW5kIGRvIGNvbXBsZXggdGhpbmdzLlxuICAgICAgZGVjbGFyYXRpb25zLnNldChrZXksIHN0cmluZ0hhbmRsZXJzW2tleV0oZGVjbGFyYXRpb25zLmdldChrZXkpLCBzZWxlY3RvckhhbmRsZXJzKSwgLy8gUHJlc2VydmUgb3JkZXIgaGVyZSwgc2luY2Ugd2UgYXJlIHJlYWxseSByZXBsYWNpbmcgYW5cbiAgICAgIC8vIHVucHJvY2Vzc2VkIHN0eWxlIHdpdGggYSBwcm9jZXNzZWQgc3R5bGUsIG5vdCBvdmVycmlkaW5nIGFuXG4gICAgICAvLyBlYXJsaWVyIHN0eWxlXG4gICAgICBmYWxzZSk7XG4gICAgfVxuICB9XG59O1xuXG52YXIgdHJhbnNmb3JtUnVsZSA9IGZ1bmN0aW9uIHRyYW5zZm9ybVJ1bGUoa2V5XG4vKiA6IHN0cmluZyAqL1xuLCB2YWx1ZVxuLyogOiBzdHJpbmcgKi9cbiwgdHJhbnNmb3JtVmFsdWVcbi8qIDogZnVuY3Rpb24gKi9cbikge1xuICByZXR1cm4gKFxuICAgIC8qIDogc3RyaW5nICovXG4gICAgXCJcIi5jb25jYXQoa2ViYWJpZnlTdHlsZU5hbWUoa2V5KSwgXCI6XCIpLmNvbmNhdCh0cmFuc2Zvcm1WYWx1ZShrZXksIHZhbHVlKSwgXCI7XCIpXG4gICk7XG59O1xuXG52YXIgYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyID0gZnVuY3Rpb24gYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyKGFjYywgdmFsKSB7XG4gIGFjY1t2YWxdID0gdHJ1ZTtcbiAgcmV0dXJuIGFjYztcbn07XG4vKipcbiAqIEdlbmVyYXRlIGEgQ1NTIHJ1bGVzZXQgd2l0aCB0aGUgc2VsZWN0b3IgYW5kIGNvbnRhaW5pbmcgdGhlIGRlY2xhcmF0aW9ucy5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGFzc3VtZXMgdGhhdCB0aGUgZ2l2ZW4gZGVjbGFyYXRpb25zIGRvbid0IGNvbnRhaW4gYW55IHNwZWNpYWxcbiAqIGNoaWxkcmVuIChzdWNoIGFzIG1lZGlhIHF1ZXJpZXMsIHBzZXVkby1zZWxlY3RvcnMsIG9yIGRlc2NlbmRhbnQgc3R5bGVzKS5cbiAqXG4gKiBOb3RlIHRoYXQgdGhpcyBtZXRob2QgZG9lcyBub3QgZGVhbCB3aXRoIG5lc3RpbmcgdXNlZCBmb3IgZS5nLlxuICogcHN1ZWRvLXNlbGVjdG9ycyBvciBtZWRpYSBxdWVyaWVzLiBUaGF0IHJlc3BvbnNpYmlsaXR5IGlzIGxlZnQgdG8gIHRoZVxuICogYGdlbmVyYXRlQ1NTYCBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VsZWN0b3I6IHRoZSBzZWxlY3RvciBhc3NvY2lhdGVkIHdpdGggdGhlIHJ1bGVzZXRcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWNsYXJhdGlvbnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1MgcHJvcGVydHkgbmFtZSB0byBDU1NcbiAqICAgICBwcm9wZXJ0eSB2YWx1ZS5cbiAqIEBwYXJhbSB7T2JqZWN0LjxzdHJpbmcsIGZ1bmN0aW9uPn0gc3RyaW5nSGFuZGxlcnM6IGEgbWFwIGZyb20gY2FtZWxDYXNlZCBDU1NcbiAqICAgICBwcm9wZXJ0eSBuYW1lIHRvIGEgZnVuY3Rpb24gd2hpY2ggd2lsbCBtYXAgdGhlIGdpdmVuIHZhbHVlIHRvIHRoZSB2YWx1ZVxuICogICAgIHRoYXQgaXMgb3V0cHV0LlxuICogQHBhcmFtIHtib29sfSB1c2VJbXBvcnRhbnQ6IEEgYm9vbGVhbiBzYXlpbmcgd2hldGhlciB0byBhcHBlbmQgXCIhaW1wb3J0YW50XCJcbiAqICAgICB0byBlYWNoIG9mIHRoZSBDU1MgZGVjbGFyYXRpb25zLlxuICogQHJldHVybnMge3N0cmluZ30gQSBzdHJpbmcgb2YgcmF3IENTUy5cbiAqXG4gKiBFeGFtcGxlczpcbiAqXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0pXG4gKiAgICAtPiBcIi5ibGFoe2NvbG9yOiByZWQgIWltcG9ydGFudDt9XCJcbiAqICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5ibGFoXCIsIHsgY29sb3I6IFwicmVkXCIgfSwge30sIGZhbHNlKVxuICogICAgLT4gXCIuYmxhaHtjb2xvcjogcmVkfVwiXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaFwiLCB7IGNvbG9yOiBcInJlZFwiIH0sIHtjb2xvcjogYyA9PiBjLnRvVXBwZXJDYXNlfSlcbiAqICAgIC0+IFwiLmJsYWh7Y29sb3I6IFJFRH1cIlxuICogICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmJsYWg6aG92ZXJcIiwgeyBjb2xvcjogXCJyZWRcIiB9KVxuICogICAgLT4gXCIuYmxhaDpob3Zlcntjb2xvcjogcmVkfVwiXG4gKi9cblxuXG52YXIgZ2VuZXJhdGVDU1NSdWxlc2V0ID0gZnVuY3Rpb24gZ2VuZXJhdGVDU1NSdWxlc2V0KHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWNsYXJhdGlvbnNcbi8qIDogT3JkZXJlZEVsZW1lbnRzICovXG4sIHN0cmluZ0hhbmRsZXJzXG4vKiA6IFN0cmluZ0hhbmRsZXJzICovXG4sIHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIC8vIE11dGF0ZXMgZGVjbGFyYXRpb25zXG4gIHJ1blN0cmluZ0hhbmRsZXJzKGRlY2xhcmF0aW9ucywgc3RyaW5nSGFuZGxlcnMsIHNlbGVjdG9ySGFuZGxlcnMpO1xuICB2YXIgb3JpZ2luYWxFbGVtZW50cyA9IE9iamVjdC5rZXlzKGRlY2xhcmF0aW9ucy5lbGVtZW50cykucmVkdWNlKGFycmF5VG9PYmplY3RLZXlzUmVkdWNlciwgT2JqZWN0LmNyZWF0ZShudWxsKSk7IC8vIE5PVEUoZW1pbHkpOiBUaGlzIG11dGF0ZXMgaGFuZGxlZERlY2xhcmF0aW9ucy5lbGVtZW50cy5cblxuICB2YXIgcHJlZml4ZWRFbGVtZW50cyA9IHByZWZpeEFsbChkZWNsYXJhdGlvbnMuZWxlbWVudHMpO1xuICB2YXIgZWxlbWVudE5hbWVzID0gT2JqZWN0LmtleXMocHJlZml4ZWRFbGVtZW50cyk7XG5cbiAgaWYgKGVsZW1lbnROYW1lcy5sZW5ndGggIT09IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGgpIHtcbiAgICAvLyBUaGVyZSBhcmUgc29tZSBwcmVmaXhlZCB2YWx1ZXMsIHNvIHdlIG5lZWQgdG8gZmlndXJlIG91dCBob3cgdG8gc29ydFxuICAgIC8vIHRoZW0uXG4gICAgLy9cbiAgICAvLyBMb29wIHRocm91Z2ggcHJlZml4ZWRFbGVtZW50cywgbG9va2luZyBmb3IgYW55dGhpbmcgdGhhdCBpcyBub3QgaW5cbiAgICAvLyBzb3J0T3JkZXIsIHdoaWNoIG1lYW5zIGl0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIFRoaXMgbWVhbnMgdGhhdCB3ZVxuICAgIC8vIG5lZWQgdG8gZmlndXJlIG91dCB3aGVyZSBpdCBzaG91bGQgYXBwZWFyIGluIHRoZSBzb3J0T3JkZXIuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBlbGVtZW50TmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICghb3JpZ2luYWxFbGVtZW50c1tlbGVtZW50TmFtZXNbaV1dKSB7XG4gICAgICAgIC8vIFRoaXMgZWxlbWVudCBpcyBub3QgaW4gdGhlIHNvcnRPcmRlciwgd2hpY2ggbWVhbnMgaXQgaXMgYSBwcmVmaXhlZFxuICAgICAgICAvLyB2YWx1ZSB0aGF0IHdhcyBhZGRlZCBieSBwcmVmaXhBbGwuIExldCdzIHRyeSB0byBmaWd1cmUgb3V0IHdoZXJlIGl0XG4gICAgICAgIC8vIGdvZXMuXG4gICAgICAgIHZhciBvcmlnaW5hbFN0eWxlID0gdm9pZCAwO1xuXG4gICAgICAgIGlmIChlbGVtZW50TmFtZXNbaV1bMF0gPT09ICdXJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBXZWJraXQtcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJXZWJraXRUcmFuc2l0aW9uXCIuIExldCdzXG4gICAgICAgICAgLy8gZmluZCBpdHMgb3JpZ2luYWwgc3R5bGUncyBzb3J0IG9yZGVyLlxuICAgICAgICAgIG9yaWdpbmFsU3R5bGUgPSBlbGVtZW50TmFtZXNbaV1bNl0udG9Mb3dlckNhc2UoKSArIGVsZW1lbnROYW1lc1tpXS5zbGljZSg3KTtcbiAgICAgICAgfSBlbHNlIGlmIChlbGVtZW50TmFtZXNbaV1bMV0gPT09ICdvJykge1xuICAgICAgICAgIC8vIFRoaXMgaXMgYSBNb3otcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJNb3pUcmFuc2l0aW9uXCIuIFdlIGNoZWNrXG4gICAgICAgICAgLy8gdGhlIHNlY29uZCBjaGFyYWN0ZXIgdG8gYXZvaWQgY29sbGlkaW5nIHdpdGggTXMtcHJlZml4ZWRcbiAgICAgICAgICAvLyBzdHlsZXMuIExldCdzIGZpbmQgaXRzIG9yaWdpbmFsIHN0eWxlJ3Mgc29ydCBvcmRlci5cbiAgICAgICAgICBvcmlnaW5hbFN0eWxlID0gZWxlbWVudE5hbWVzW2ldWzNdLnRvTG93ZXJDYXNlKCkgKyBlbGVtZW50TmFtZXNbaV0uc2xpY2UoNCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gaWYgKGVsZW1lbnROYW1lc1tpXVsxXSA9PT0gJ3MnKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIE1zLXByZWZpeGVkIHN0eWxlLCBsaWtlIFwiTXNUcmFuc2l0aW9uXCIuXG4gICAgICAgICAgb3JpZ2luYWxTdHlsZSA9IGVsZW1lbnROYW1lc1tpXVsyXS50b0xvd2VyQ2FzZSgpICsgZWxlbWVudE5hbWVzW2ldLnNsaWNlKDMpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9yaWdpbmFsU3R5bGUgJiYgb3JpZ2luYWxFbGVtZW50c1tvcmlnaW5hbFN0eWxlXSkge1xuICAgICAgICAgIHZhciBvcmlnaW5hbEluZGV4ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyLmluZGV4T2Yob3JpZ2luYWxTdHlsZSk7XG4gICAgICAgICAgZGVjbGFyYXRpb25zLmtleU9yZGVyLnNwbGljZShvcmlnaW5hbEluZGV4LCAwLCBlbGVtZW50TmFtZXNbaV0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIFdlIGRvbid0IGtub3cgd2hhdCB0aGUgb3JpZ2luYWwgc3R5bGUgd2FzLCBzbyBzb3J0IGl0IHRvXG4gICAgICAgICAgLy8gdG9wLiBUaGlzIGNhbiBoYXBwZW4gZm9yIHN0eWxlcyB0aGF0IGFyZSBhZGRlZCB0aGF0IGRvbid0XG4gICAgICAgICAgLy8gaGF2ZSB0aGUgc2FtZSBiYXNlIG5hbWUgYXMgdGhlIG9yaWdpbmFsIHN0eWxlLlxuICAgICAgICAgIGRlY2xhcmF0aW9ucy5rZXlPcmRlci51bnNoaWZ0KGVsZW1lbnROYW1lc1tpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICB2YXIgdHJhbnNmb3JtVmFsdWUgPSB1c2VJbXBvcnRhbnQgPT09IGZhbHNlID8gc3RyaW5naWZ5VmFsdWUgOiBzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZTtcbiAgdmFyIHJ1bGVzID0gW107XG5cbiAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGRlY2xhcmF0aW9ucy5rZXlPcmRlci5sZW5ndGg7IF9pKyspIHtcbiAgICB2YXIga2V5ID0gZGVjbGFyYXRpb25zLmtleU9yZGVyW19pXTtcbiAgICB2YXIgdmFsdWUgPSBwcmVmaXhlZEVsZW1lbnRzW2tleV07XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIC8vIGlubGluZS1zdHlsZS1wcmVmaXhlciByZXR1cm5zIGFuIGFycmF5IHdoZW4gdGhlcmUgc2hvdWxkIGJlXG4gICAgICAvLyBtdWx0aXBsZSBydWxlcyBmb3IgdGhlIHNhbWUga2V5LiBIZXJlIHdlIGZsYXR0ZW4gdG8gbXVsdGlwbGVcbiAgICAgIC8vIHBhaXJzIHdpdGggdGhlIHNhbWUga2V5LlxuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCB2YWx1ZS5sZW5ndGg7IGorKykge1xuICAgICAgICBydWxlcy5wdXNoKHRyYW5zZm9ybVJ1bGUoa2V5LCB2YWx1ZVtqXSwgdHJhbnNmb3JtVmFsdWUpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgcnVsZXMucHVzaCh0cmFuc2Zvcm1SdWxlKGtleSwgdmFsdWUsIHRyYW5zZm9ybVZhbHVlKSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHJ1bGVzLmxlbmd0aCkge1xuICAgIHJldHVybiBcIlwiLmNvbmNhdChzZWxlY3RvciwgXCJ7XCIpLmNvbmNhdChydWxlcy5qb2luKFwiXCIpLCBcIn1cIik7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNoZWV0RGVmaW5pdGlvbiwgU2hlZXREZWZpbml0aW9ucyB9IGZyb20gJy4vaW5kZXguanMnO1xuaW1wb3J0IHR5cGUgeyBNYXliZVNoZWV0RGVmaW5pdGlvbiB9IGZyb20gJy4vZXhwb3J0cy5qcyc7XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuKi9cbi8vIFRoZSBjdXJyZW50IDxzdHlsZT4gdGFnIHdlIGFyZSBpbnNlcnRpbmcgaW50bywgb3IgbnVsbCBpZiB3ZSBoYXZlbid0XG4vLyBpbnNlcnRlZCBhbnl0aGluZyB5ZXQuIFdlIGNvdWxkIGZpbmQgdGhpcyBlYWNoIHRpbWUgdXNpbmdcbi8vIGBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVcIl0pYCwgYnV0IGhvbGRpbmcgb250byBpdCBpc1xuLy8gZmFzdGVyLlxuXG52YXIgc3R5bGVUYWdcbi8qIDogP0hUTUxTdHlsZUVsZW1lbnQgKi9cbj0gbnVsbDsgLy8gSW5qZWN0IGEgc2V0IG9mIHJ1bGVzIGludG8gYSA8c3R5bGU+IHRhZyBpbiB0aGUgaGVhZCBvZiB0aGUgZG9jdW1lbnQuIFRoaXNcbi8vIHdpbGwgYXV0b21hdGljYWxseSBjcmVhdGUgYSBzdHlsZSB0YWcgYW5kIHRoZW4gY29udGludWUgdG8gdXNlIGl0IGZvclxuLy8gbXVsdGlwbGUgaW5qZWN0aW9ucy4gSXQgd2lsbCBhbHNvIHVzZSBhIHN0eWxlIHRhZyB3aXRoIHRoZSBgZGF0YS1hcGhyb2RpdGVgXG4vLyB0YWcgb24gaXQgaWYgdGhhdCBleGlzdHMgaW4gdGhlIERPTS4gVGhpcyBjb3VsZCBiZSB1c2VkIGZvciBlLmcuIHJldXNpbmcgdGhlXG4vLyBzYW1lIHN0eWxlIHRhZyB0aGF0IHNlcnZlci1zaWRlIHJlbmRlcmluZyBpbnNlcnRzLlxuXG52YXIgaW5qZWN0U3R5bGVUYWcgPSBmdW5jdGlvbiBpbmplY3RTdHlsZVRhZyhjc3NSdWxlc1xuLyogOiBzdHJpbmdbXSAqL1xuKSB7XG4gIGlmIChzdHlsZVRhZyA9PSBudWxsKSB7XG4gICAgLy8gVHJ5IHRvIGZpbmQgYSBzdHlsZSB0YWcgd2l0aCB0aGUgYGRhdGEtYXBocm9kaXRlYCBhdHRyaWJ1dGUgZmlyc3QuXG4gICAgc3R5bGVUYWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwic3R5bGVbZGF0YS1hcGhyb2RpdGVdXCIpXG4gICAgLyogOiBhbnkgKi9cbiAgICA7IC8vIElmIHRoYXQgZG9lc24ndCB3b3JrLCBnZW5lcmF0ZSBhIG5ldyBzdHlsZSB0YWcuXG5cbiAgICBpZiAoc3R5bGVUYWcgPT0gbnVsbCkge1xuICAgICAgLy8gVGFrZW4gZnJvbVxuICAgICAgLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy81MjQ2OTYvaG93LXRvLWNyZWF0ZS1hLXN0eWxlLXRhZy13aXRoLWphdmFzY3JpcHRcbiAgICAgIHZhciBoZWFkID0gZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdO1xuICAgICAgc3R5bGVUYWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgc3R5bGVUYWcudHlwZSA9ICd0ZXh0L2Nzcyc7XG4gICAgICBzdHlsZVRhZy5zZXRBdHRyaWJ1dGUoXCJkYXRhLWFwaHJvZGl0ZVwiLCBcIlwiKTtcbiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVUYWcpO1xuICAgIH1cbiAgfSAvLyAkRmxvd0ZpeE1lXG5cblxuICB2YXIgc2hlZXQgPSBzdHlsZVRhZy5zdHlsZVNoZWV0IHx8IHN0eWxlVGFnLnNoZWV0XG4gIC8qIDogYW55ICovXG4gIDtcblxuICBpZiAoc2hlZXQuaW5zZXJ0UnVsZSkge1xuICAgIHZhciBudW1SdWxlcyA9IHNoZWV0LmNzc1J1bGVzLmxlbmd0aDtcbiAgICBjc3NSdWxlcy5mb3JFYWNoKGZ1bmN0aW9uIChydWxlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIG51bVJ1bGVzKTtcbiAgICAgICAgbnVtUnVsZXMgKz0gMTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsvLyBUaGUgc2VsZWN0b3IgZm9yIHRoaXMgcnVsZSB3YXNuJ3QgY29tcGF0aWJsZSB3aXRoIHRoZSBicm93c2VyXG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGVUYWcuaW5uZXJUZXh0ID0gKHN0eWxlVGFnLmlubmVyVGV4dCB8fCAnJykgKyBjc3NSdWxlcy5qb2luKCcnKTtcbiAgfVxufTsgLy8gQ3VzdG9tIGhhbmRsZXJzIGZvciBzdHJpbmdpZnlpbmcgQ1NTIHZhbHVlcyB0aGF0IGhhdmUgc2lkZSBlZmZlY3RzXG4vLyAoc3VjaCBhcyBmb250RmFtaWx5LCB3aGljaCBjYW4gY2F1c2UgQGZvbnQtZmFjZSBydWxlcyB0byBiZSBpbmplY3RlZClcblxuXG52YXIgc3RyaW5nSGFuZGxlcnMgPSB7XG4gIC8vIFdpdGggZm9udEZhbWlseSB3ZSBsb29rIGZvciBvYmplY3RzIHRoYXQgYXJlIHBhc3NlZCBpbiBhbmQgaW50ZXJwcmV0XG4gIC8vIHRoZW0gYXMgQGZvbnQtZmFjZSBydWxlcyB0aGF0IHdlIG5lZWQgdG8gaW5qZWN0LiBUaGUgdmFsdWUgb2YgZm9udEZhbWlseVxuICAvLyBjYW4gZWl0aGVyIGJlIGEgc3RyaW5nIChhcyBub3JtYWwpLCBhbiBvYmplY3QgKGEgc2luZ2xlIGZvbnQgZmFjZSksIG9yXG4gIC8vIGFuIGFycmF5IG9mIG9iamVjdHMgYW5kIHN0cmluZ3MuXG4gIGZvbnRGYW1pbHk6IGZ1bmN0aW9uIGZvbnRGYW1pbHkodmFsKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsKSkge1xuICAgICAgdmFyIG5hbWVNYXAgPSB7fTtcbiAgICAgIHZhbC5mb3JFYWNoKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIG5hbWVNYXBbZm9udEZhbWlseSh2KV0gPSB0cnVlO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gT2JqZWN0LmtleXMobmFtZU1hcCkuam9pbihcIixcIik7XG4gICAgfSBlbHNlIGlmIChfdHlwZW9mKHZhbCkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIGluamVjdFN0eWxlT25jZSh2YWwuc3JjLCBcIkBmb250LWZhY2VcIiwgW3ZhbF0sIGZhbHNlKTtcbiAgICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodmFsLmZvbnRGYW1pbHksIFwiXFxcIlwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH0sXG4gIC8vIFdpdGggYW5pbWF0aW9uTmFtZSB3ZSBsb29rIGZvciBhbiBvYmplY3QgdGhhdCBjb250YWlucyBrZXlmcmFtZXMgYW5kXG4gIC8vIGluamVjdCB0aGVtIGFzIGFuIGBAa2V5ZnJhbWVzYCBibG9jaywgcmV0dXJuaW5nIGEgdW5pcXVlbHkgZ2VuZXJhdGVkXG4gIC8vIG5hbWUuIFRoZSBrZXlmcmFtZXMgb2JqZWN0IHNob3VsZCBsb29rIGxpa2VcbiAgLy8gIGFuaW1hdGlvbk5hbWU6IHtcbiAgLy8gICAgZnJvbToge1xuICAvLyAgICAgIGxlZnQ6IDAsXG4gIC8vICAgICAgdG9wOiAwLFxuICAvLyAgICB9LFxuICAvLyAgICAnNTAlJzoge1xuICAvLyAgICAgIGxlZnQ6IDE1LFxuICAvLyAgICAgIHRvcDogNSxcbiAgLy8gICAgfSxcbiAgLy8gICAgdG86IHtcbiAgLy8gICAgICBsZWZ0OiAyMCxcbiAgLy8gICAgICB0b3A6IDIwLFxuICAvLyAgICB9XG4gIC8vICB9XG4gIC8vIFRPRE8oZW1pbHkpOiBgc3RyaW5nSGFuZGxlcnNgIGRvZXNuJ3QgbGV0IHVzIHJlbmFtZSB0aGUga2V5LCBzbyBJIGhhdmVcbiAgLy8gdG8gdXNlIGBhbmltYXRpb25OYW1lYCBoZXJlLiBJbXByb3ZlIHRoYXQgc28gd2UgY2FuIGNhbGwgdGhpc1xuICAvLyBgYW5pbWF0aW9uYCBpbnN0ZWFkIG9mIGBhbmltYXRpb25OYW1lYC5cbiAgYW5pbWF0aW9uTmFtZTogZnVuY3Rpb24gYW5pbWF0aW9uTmFtZSh2YWwsIHNlbGVjdG9ySGFuZGxlcnMpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICByZXR1cm4gdmFsLm1hcChmdW5jdGlvbiAodikge1xuICAgICAgICByZXR1cm4gYW5pbWF0aW9uTmFtZSh2LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgICAgIH0pLmpvaW4oXCIsXCIpO1xuICAgIH0gZWxzZSBpZiAoX3R5cGVvZih2YWwpID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAvLyBHZW5lcmF0ZSBhIHVuaXF1ZSBuYW1lIGJhc2VkIG9uIHRoZSBoYXNoIG9mIHRoZSBvYmplY3QuIFdlIGNhbid0XG4gICAgICAvLyBqdXN0IHVzZSB0aGUgaGFzaCBiZWNhdXNlIHRoZSBuYW1lIGNhbid0IHN0YXJ0IHdpdGggYSBudW1iZXIuXG4gICAgICAvLyBUT0RPKGVtaWx5KTogdGhpcyBwcm9iYWJseSBtYWtlcyBkZWJ1Z2dpbmcgaGFyZCwgYWxsb3cgYSBjdXN0b21cbiAgICAgIC8vIG5hbWU/XG4gICAgICB2YXIgbmFtZSA9IFwia2V5ZnJhbWVfXCIuY29uY2F0KGhhc2hPYmplY3QodmFsKSk7IC8vIFNpbmNlIGtleWZyYW1lcyBuZWVkIDMgbGF5ZXJzIG9mIG5lc3RpbmcsIHdlIHVzZSBgZ2VuZXJhdGVDU1NgIHRvXG4gICAgICAvLyBidWlsZCB0aGUgaW5uZXIgbGF5ZXJzIGFuZCB3cmFwIGl0IGluIGBAa2V5ZnJhbWVzYCBvdXJzZWx2ZXMuXG5cbiAgICAgIHZhciBmaW5hbFZhbCA9IFwiQGtleWZyYW1lcyBcIi5jb25jYXQobmFtZSwgXCJ7XCIpOyAvLyBUT0RPIHNlZSBpZiB3ZSBjYW4gZmluZCBhIHdheSB3aGVyZSBjaGVja2luZyBmb3IgT3JkZXJlZEVsZW1lbnRzXG4gICAgICAvLyBoZXJlIGlzIG5vdCBuZWNlc3NhcnkuIEFsdGVybmF0aXZlbHksIHBlcmhhcHMgd2Ugc2hvdWxkIGhhdmUgYVxuICAgICAgLy8gdXRpbGl0eSBtZXRob2QgdGhhdCBjYW4gaXRlcmF0ZSBvdmVyIGVpdGhlciBhIHBsYWluIG9iamVjdCwgYW5cbiAgICAgIC8vIGluc3RhbmNlIG9mIE9yZGVyZWRFbGVtZW50cywgb3IgYSBNYXAsIGFuZCB0aGVuIHVzZSB0aGF0IGhlcmUgYW5kXG4gICAgICAvLyBlbHNld2hlcmUuXG5cbiAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgICAgdmFsLmZvckVhY2goZnVuY3Rpb24gKHZhbFZhbCwgdmFsS2V5KSB7XG4gICAgICAgICAgZmluYWxWYWwgKz0gZ2VuZXJhdGVDU1ModmFsS2V5LCBbdmFsVmFsXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBPYmplY3Qua2V5cyh2YWwpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgIGZpbmFsVmFsICs9IGdlbmVyYXRlQ1NTKGtleSwgW3ZhbFtrZXldXSwgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIGZhbHNlKS5qb2luKCcnKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGZpbmFsVmFsICs9ICd9JztcbiAgICAgIGluamVjdEdlbmVyYXRlZENTU09uY2UobmFtZSwgW2ZpbmFsVmFsXSk7XG4gICAgICByZXR1cm4gbmFtZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gIH1cbn07IC8vIFRoaXMgaXMgYSBtYXAgZnJvbSBBcGhyb2RpdGUncyBnZW5lcmF0ZWQgY2xhc3MgbmFtZXMgdG8gYHRydWVgIChhY3RpbmcgYXMgYVxuLy8gc2V0IG9mIGNsYXNzIG5hbWVzKVxuXG52YXIgYWxyZWFkeUluamVjdGVkID0ge307IC8vIFRoaXMgaXMgdGhlIGJ1ZmZlciBvZiBzdHlsZXMgd2hpY2ggaGF2ZSBub3QgeWV0IGJlZW4gZmx1c2hlZC5cblxudmFyIGluamVjdGlvbkJ1ZmZlclxuLyogOiBzdHJpbmdbXSAqL1xuPSBbXTsgLy8gQSBmbGFnIHRvIHRlbGwgaWYgd2UgYXJlIGFscmVhZHkgYnVmZmVyaW5nIHN0eWxlcy4gVGhpcyBjb3VsZCBoYXBwZW4gZWl0aGVyXG4vLyBiZWNhdXNlIHdlIHNjaGVkdWxlZCBhIGZsdXNoIGNhbGwgYWxyZWFkeSwgc28gbmV3bHkgYWRkZWQgc3R5bGVzIHdpbGxcbi8vIGFscmVhZHkgYmUgZmx1c2hlZCwgb3IgYmVjYXVzZSB3ZSBhcmUgc3RhdGljYWxseSBidWZmZXJpbmcgb24gdGhlIHNlcnZlci5cblxudmFyIGlzQnVmZmVyaW5nID0gZmFsc2U7XG5cbnZhciBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlID0gZnVuY3Rpb24gaW5qZWN0R2VuZXJhdGVkQ1NTT25jZShrZXksIGdlbmVyYXRlZENTUykge1xuICB2YXIgX2luamVjdGlvbkJ1ZmZlcjtcblxuICBpZiAoYWxyZWFkeUluamVjdGVkW2tleV0pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoIWlzQnVmZmVyaW5nKSB7XG4gICAgLy8gV2Ugc2hvdWxkIG5ldmVyIGJlIGF1dG9tYXRpY2FsbHkgYnVmZmVyaW5nIG9uIHRoZSBzZXJ2ZXIgKG9yIGFueVxuICAgIC8vIHBsYWNlIHdpdGhvdXQgYSBkb2N1bWVudCksIHNvIGd1YXJkIGFnYWluc3QgdGhhdC5cbiAgICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYXV0b21hdGljYWxseSBidWZmZXIgd2l0aG91dCBhIGRvY3VtZW50XCIpO1xuICAgIH0gLy8gSWYgd2UncmUgbm90IGFscmVhZHkgYnVmZmVyaW5nLCBzY2hlZHVsZSBhIGNhbGwgdG8gZmx1c2ggdGhlXG4gICAgLy8gY3VycmVudCBzdHlsZXMuXG5cblxuICAgIGlzQnVmZmVyaW5nID0gdHJ1ZTtcbiAgICBhc2FwKGZsdXNoVG9TdHlsZVRhZyk7XG4gIH1cblxuICAoX2luamVjdGlvbkJ1ZmZlciA9IGluamVjdGlvbkJ1ZmZlcikucHVzaC5hcHBseShfaW5qZWN0aW9uQnVmZmVyLCBfdG9Db25zdW1hYmxlQXJyYXkoZ2VuZXJhdGVkQ1NTKSk7XG5cbiAgYWxyZWFkeUluamVjdGVkW2tleV0gPSB0cnVlO1xufTtcblxudmFyIGluamVjdFN0eWxlT25jZSA9IGZ1bmN0aW9uIGluamVjdFN0eWxlT25jZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHNlbGVjdG9yXG4vKiA6IHN0cmluZyAqL1xuLCBkZWZpbml0aW9uc1xuLyogOiBTaGVldERlZmluaXRpb25bXSAqL1xuLCB1c2VJbXBvcnRhbnRcbi8qIDogYm9vbGVhbiAqL1xuKSB7XG4gIHZhciBzZWxlY3RvckhhbmRsZXJzXG4gIC8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbiAgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IFtdO1xuXG4gIGlmIChhbHJlYWR5SW5qZWN0ZWRba2V5XSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIHZhciBnZW5lcmF0ZWQgPSBnZW5lcmF0ZUNTUyhzZWxlY3RvciwgZGVmaW5pdGlvbnMsIHNlbGVjdG9ySGFuZGxlcnMsIHN0cmluZ0hhbmRsZXJzLCB1c2VJbXBvcnRhbnQpO1xuICBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlKGtleSwgZ2VuZXJhdGVkKTtcbn07XG52YXIgcmVzZXQgPSBmdW5jdGlvbiByZXNldCgpIHtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIGFscmVhZHlJbmplY3RlZCA9IHt9O1xuICBpc0J1ZmZlcmluZyA9IGZhbHNlO1xuICBzdHlsZVRhZyA9IG51bGw7XG59O1xudmFyIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IGZ1bmN0aW9uIHJlc2V0SW5qZWN0ZWRTdHlsZShrZXlcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgZGVsZXRlIGFscmVhZHlJbmplY3RlZFtrZXldO1xufTtcbnZhciBnZXRCdWZmZXJlZFN0eWxlcyA9IGZ1bmN0aW9uIGdldEJ1ZmZlcmVkU3R5bGVzKCkge1xuICByZXR1cm4gaW5qZWN0aW9uQnVmZmVyO1xufTtcbnZhciBzdGFydEJ1ZmZlcmluZyA9IGZ1bmN0aW9uIHN0YXJ0QnVmZmVyaW5nKCkge1xuICBpZiAoaXNCdWZmZXJpbmcpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgYnVmZmVyIHdoaWxlIGFscmVhZHkgYnVmZmVyaW5nXCIpO1xuICB9XG5cbiAgaXNCdWZmZXJpbmcgPSB0cnVlO1xufTtcblxudmFyIGZsdXNoVG9BcnJheSA9IGZ1bmN0aW9uIGZsdXNoVG9BcnJheSgpIHtcbiAgaXNCdWZmZXJpbmcgPSBmYWxzZTtcbiAgdmFyIHJldCA9IGluamVjdGlvbkJ1ZmZlcjtcbiAgaW5qZWN0aW9uQnVmZmVyID0gW107XG4gIHJldHVybiByZXQ7XG59O1xuXG52YXIgZmx1c2hUb1N0cmluZyA9IGZ1bmN0aW9uIGZsdXNoVG9TdHJpbmcoKSB7XG4gIHJldHVybiBmbHVzaFRvQXJyYXkoKS5qb2luKCcnKTtcbn07XG52YXIgZmx1c2hUb1N0eWxlVGFnID0gZnVuY3Rpb24gZmx1c2hUb1N0eWxlVGFnKCkge1xuICB2YXIgY3NzUnVsZXMgPSBmbHVzaFRvQXJyYXkoKTtcblxuICBpZiAoY3NzUnVsZXMubGVuZ3RoID4gMCkge1xuICAgIGluamVjdFN0eWxlVGFnKGNzc1J1bGVzKTtcbiAgfVxufTtcbnZhciBnZXRSZW5kZXJlZENsYXNzTmFtZXMgPSBmdW5jdGlvbiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuLyogOiBzdHJpbmdbXSAqL1xue1xuICByZXR1cm4gT2JqZWN0LmtleXMoYWxyZWFkeUluamVjdGVkKTtcbn07XG52YXIgYWRkUmVuZGVyZWRDbGFzc05hbWVzID0gZnVuY3Rpb24gYWRkUmVuZGVyZWRDbGFzc05hbWVzKGNsYXNzTmFtZXNcbi8qIDogc3RyaW5nW10gKi9cbikge1xuICBjbGFzc05hbWVzLmZvckVhY2goZnVuY3Rpb24gKGNsYXNzTmFtZSkge1xuICAgIGFscmVhZHlJbmplY3RlZFtjbGFzc05hbWVdID0gdHJ1ZTtcbiAgfSk7XG59O1xuXG52YXIgaXNWYWxpZFN0eWxlRGVmaW5pdGlvbiA9IGZ1bmN0aW9uIGlzVmFsaWRTdHlsZURlZmluaXRpb24oZGVmXG4vKiA6IE9iamVjdCAqL1xuKSB7XG4gIHJldHVybiBcIl9kZWZpbml0aW9uXCIgaW4gZGVmICYmIFwiX25hbWVcIiBpbiBkZWYgJiYgXCJfbGVuXCIgaW4gZGVmO1xufTtcblxudmFyIHByb2Nlc3NTdHlsZURlZmluaXRpb25zID0gZnVuY3Rpb24gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9uc1xuLyogOiBhbnlbXSAqL1xuLCBjbGFzc05hbWVCaXRzXG4vKiA6IHN0cmluZ1tdICovXG4sIGRlZmluaXRpb25CaXRzXG4vKiA6IE9iamVjdFtdICovXG4sIGxlbmd0aFxuLyogOiBudW1iZXIgKi9cbilcbi8qIDogbnVtYmVyICovXG57XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVEZWZpbml0aW9ucy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIC8vIEZpbHRlciBvdXQgZmFsc3kgdmFsdWVzIGZyb20gdGhlIGlucHV0LCB0byBhbGxvdyBmb3JcbiAgICAvLyBgY3NzKGEsIHRlc3QgJiYgYylgXG4gICAgaWYgKHN0eWxlRGVmaW5pdGlvbnNbaV0pIHtcbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHN0eWxlRGVmaW5pdGlvbnNbaV0pKSB7XG4gICAgICAgIC8vIFdlJ3ZlIGVuY291bnRlcmVkIGFuIGFycmF5LCBzbyBsZXQncyByZWN1cnNlXG4gICAgICAgIGxlbmd0aCArPSBwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyhzdHlsZURlZmluaXRpb25zW2ldLCBjbGFzc05hbWVCaXRzLCBkZWZpbml0aW9uQml0cywgbGVuZ3RoKTtcbiAgICAgIH0gZWxzZSBpZiAoaXNWYWxpZFN0eWxlRGVmaW5pdGlvbihzdHlsZURlZmluaXRpb25zW2ldKSkge1xuICAgICAgICBjbGFzc05hbWVCaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fbmFtZSk7XG4gICAgICAgIGRlZmluaXRpb25CaXRzLnB1c2goc3R5bGVEZWZpbml0aW9uc1tpXS5fZGVmaW5pdGlvbik7XG4gICAgICAgIGxlbmd0aCArPSBzdHlsZURlZmluaXRpb25zW2ldLl9sZW47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIFN0eWxlIERlZmluaXRpb246IFN0eWxlcyBzaG91bGQgYmUgZGVmaW5lZCB1c2luZyB0aGUgU3R5bGVTaGVldC5jcmVhdGUgbWV0aG9kLlwiKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gbGVuZ3RoO1xufTtcbi8qKlxuICogSW5qZWN0IHN0eWxlcyBhc3NvY2lhdGVkIHdpdGggdGhlIHBhc3NlZCBzdHlsZSBkZWZpbml0aW9uIG9iamVjdHMsIGFuZCByZXR1cm5cbiAqIGFuIGFzc29jaWF0ZWQgQ1NTIGNsYXNzIG5hbWUuXG4gKlxuICogQHBhcmFtIHtib29sZWFufSB1c2VJbXBvcnRhbnQgSWYgdHJ1ZSwgd2lsbCBhcHBlbmQgIWltcG9ydGFudCB0byBnZW5lcmF0ZWRcbiAqICAgICBDU1Mgb3V0cHV0LiBlLmcuIHtjb2xvcjogcmVkfSAtPiBcImNvbG9yOiByZWQgIWltcG9ydGFudFwiLlxuICogQHBhcmFtIHsoT2JqZWN0fE9iamVjdFtdKVtdfSBzdHlsZURlZmluaXRpb25zIHN0eWxlIGRlZmluaXRpb24gb2JqZWN0cywgb3JcbiAqICAgICBhcmJpdHJhcmlseSBuZXN0ZWQgYXJyYXlzIG9mIHRoZW0sIGFzIHJldHVybmVkIGFzIHByb3BlcnRpZXMgb2YgdGhlXG4gKiAgICAgcmV0dXJuIHZhbHVlIG9mIFN0eWxlU2hlZXQuY3JlYXRlKCkuXG4gKi9cblxuXG52YXIgaW5qZWN0QW5kR2V0Q2xhc3NOYW1lID0gZnVuY3Rpb24gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4sIHN0eWxlRGVmaW5pdGlvbnNcbi8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuLCBzZWxlY3RvckhhbmRsZXJzXG4vKiA6IFNlbGVjdG9ySGFuZGxlcltdICovXG4pXG4vKiA6IHN0cmluZyAqL1xue1xuICB2YXIgY2xhc3NOYW1lQml0cyA9IFtdO1xuICB2YXIgZGVmaW5pdGlvbkJpdHMgPSBbXTsgLy8gTXV0YXRlcyBjbGFzc05hbWVCaXRzIGFuZCBkZWZpbml0aW9uQml0cyBhbmQgcmV0dXJucyBhIGxlbmd0aCB3aGljaCB3ZVxuICAvLyB3aWxsIGFwcGVuZCB0byB0aGUgaGFzaCB0byBkZWNyZWFzZSB0aGUgY2hhbmNlIG9mIGhhc2ggY29sbGlzaW9ucy5cblxuICB2YXIgbGVuZ3RoID0gcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMoc3R5bGVEZWZpbml0aW9ucywgY2xhc3NOYW1lQml0cywgZGVmaW5pdGlvbkJpdHMsIDApOyAvLyBCcmVhayBpZiB0aGVyZSBhcmVuJ3QgYW55IHZhbGlkIHN0eWxlcy5cblxuICBpZiAoY2xhc3NOYW1lQml0cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuXG4gIHZhciBjbGFzc05hbWU7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmxlbmd0aCA9PT0gMSA/IFwiX1wiLmNvbmNhdChjbGFzc05hbWVCaXRzWzBdKSA6IFwiX1wiLmNvbmNhdChoYXNoU3RyaW5nKGNsYXNzTmFtZUJpdHMuam9pbigpKSkuY29uY2F0KChsZW5ndGggJSAzNikudG9TdHJpbmcoMzYpKTtcbiAgfSBlbHNlIHtcbiAgICBjbGFzc05hbWUgPSBjbGFzc05hbWVCaXRzLmpvaW4oXCItb19PLVwiKTtcbiAgfVxuXG4gIGluamVjdFN0eWxlT25jZShjbGFzc05hbWUsIFwiLlwiLmNvbmNhdChjbGFzc05hbWUpLCBkZWZpbml0aW9uQml0cywgdXNlSW1wb3J0YW50LCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgcmV0dXJuIGNsYXNzTmFtZTtcbn07XG5cbi8qIDo6XG5pbXBvcnQgdHlwZSB7IFNlbGVjdG9ySGFuZGxlciB9IGZyb20gJy4vZ2VuZXJhdGUuanMnO1xuZXhwb3J0IHR5cGUgU2hlZXREZWZpbml0aW9uID0geyBbaWQ6c3RyaW5nXTogYW55IH07XG5leHBvcnQgdHlwZSBTaGVldERlZmluaXRpb25zID0gU2hlZXREZWZpbml0aW9uIHwgU2hlZXREZWZpbml0aW9uW107XG50eXBlIFJlbmRlckZ1bmN0aW9uID0gKCkgPT4gc3RyaW5nO1xudHlwZSBFeHRlbnNpb24gPSB7XG4gICAgc2VsZWN0b3JIYW5kbGVyOiBTZWxlY3RvckhhbmRsZXJcbn07XG5leHBvcnQgdHlwZSBNYXliZVNoZWV0RGVmaW5pdGlvbiA9IFNoZWV0RGVmaW5pdGlvbiB8IGZhbHNlIHwgbnVsbCB8IHZvaWRcbiovXG5cbnZhciB1bm1pbmlmaWVkSGFzaEZuID0gZnVuY3Rpb24gdW5taW5pZmllZEhhc2hGbihzdHJcbi8qIDogc3RyaW5nICovXG4sIGtleVxuLyogOiBzdHJpbmcgKi9cbikge1xuICByZXR1cm4gXCJcIi5jb25jYXQoa2V5LCBcIl9cIikuY29uY2F0KGhhc2hTdHJpbmcoc3RyKSk7XG59OyAvLyBTdHlsZVNoZWV0LmNyZWF0ZSBpcyBpbiBhIGhvdCBwYXRoIHNvIHdlIHdhbnQgdG8ga2VlcCBhcyBtdWNoIGxvZ2ljIG91dCBvZiBpdFxuLy8gYXMgcG9zc2libGUuIFNvLCB3ZSBmaWd1cmUgb3V0IHdoaWNoIGhhc2ggZnVuY3Rpb24gdG8gdXNlIG9uY2UsIGFuZCBvbmx5XG4vLyBzd2l0Y2ggaXQgb3V0IHZpYSBtaW5pZnkoKSBhcyBuZWNlc3NhcnkuXG4vL1xuLy8gVGhpcyBpcyBpbiBhbiBleHBvcnRlZCBmdW5jdGlvbiB0byBtYWtlIGl0IGVhc2llciB0byB0ZXN0LlxuXG5cbnZhciBpbml0aWFsSGFzaEZuID0gZnVuY3Rpb24gaW5pdGlhbEhhc2hGbigpIHtcbiAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyBoYXNoU3RyaW5nIDogdW5taW5pZmllZEhhc2hGbjtcbn07XG52YXIgaGFzaEZuID0gaW5pdGlhbEhhc2hGbigpO1xudmFyIFN0eWxlU2hlZXQgPSB7XG4gIGNyZWF0ZTogZnVuY3Rpb24gY3JlYXRlKHNoZWV0RGVmaW5pdGlvblxuICAvKiA6IFNoZWV0RGVmaW5pdGlvbiAqL1xuICApXG4gIC8qIDogT2JqZWN0ICovXG4gIHtcbiAgICB2YXIgbWFwcGVkU2hlZXREZWZpbml0aW9uID0ge307XG4gICAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhzaGVldERlZmluaXRpb24pO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICAgIHZhciB2YWwgPSBzaGVldERlZmluaXRpb25ba2V5XTtcbiAgICAgIHZhciBzdHJpbmdWYWwgPSBKU09OLnN0cmluZ2lmeSh2YWwpO1xuICAgICAgbWFwcGVkU2hlZXREZWZpbml0aW9uW2tleV0gPSB7XG4gICAgICAgIF9sZW46IHN0cmluZ1ZhbC5sZW5ndGgsXG4gICAgICAgIF9uYW1lOiBoYXNoRm4oc3RyaW5nVmFsLCBrZXkpLFxuICAgICAgICBfZGVmaW5pdGlvbjogdmFsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBtYXBwZWRTaGVldERlZmluaXRpb247XG4gIH0sXG4gIHJlaHlkcmF0ZTogZnVuY3Rpb24gcmVoeWRyYXRlKCkge1xuICAgIHZhciByZW5kZXJlZENsYXNzTmFtZXNcbiAgICAvKiA6IHN0cmluZ1tdICovXG4gICAgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFtdO1xuICAgIGFkZFJlbmRlcmVkQ2xhc3NOYW1lcyhyZW5kZXJlZENsYXNzTmFtZXMpO1xuICB9XG59O1xuLyoqXG4gKiBVdGlsaXRpZXMgZm9yIHVzaW5nIEFwaHJvZGl0ZSBzZXJ2ZXItc2lkZS5cbiAqXG4gKiBUaGlzIGNhbiBiZSBtaW5pZmllZCBvdXQgaW4gY2xpZW50LW9ubHkgYnVuZGxlcyBieSByZXBsYWNpbmcgYHR5cGVvZiB3aW5kb3dgXG4gKiB3aXRoIGBcIm9iamVjdFwiYCwgZS5nLiB2aWEgV2VicGFjaydzIERlZmluZVBsdWdpbjpcbiAqXG4gKiAgIG5ldyB3ZWJwYWNrLkRlZmluZVBsdWdpbih7XG4gKiAgICAgXCJ0eXBlb2Ygd2luZG93XCI6IEpTT04uc3RyaW5naWZ5KFwib2JqZWN0XCIpXG4gKiAgIH0pXG4gKi9cblxudmFyIFN0eWxlU2hlZXRTZXJ2ZXIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyA/IG51bGwgOiB7XG4gIHJlbmRlclN0YXRpYzogZnVuY3Rpb24gcmVuZGVyU3RhdGljKHJlbmRlckZ1bmNcbiAgLyogOiBSZW5kZXJGdW5jdGlvbiAqL1xuICApIHtcbiAgICByZXNldCgpO1xuICAgIHN0YXJ0QnVmZmVyaW5nKCk7XG4gICAgdmFyIGh0bWwgPSByZW5kZXJGdW5jKCk7XG4gICAgdmFyIGNzc0NvbnRlbnQgPSBmbHVzaFRvU3RyaW5nKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGh0bWw6IGh0bWwsXG4gICAgICBjc3M6IHtcbiAgICAgICAgY29udGVudDogY3NzQ29udGVudCxcbiAgICAgICAgcmVuZGVyZWRDbGFzc05hbWVzOiBnZXRSZW5kZXJlZENsYXNzTmFtZXMoKVxuICAgICAgfVxuICAgIH07XG4gIH1cbn07XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgdXNpbmcgQXBocm9kaXRlIGluIHRlc3RzLlxuICpcbiAqIE5vdCBtZWFudCB0byBiZSB1c2VkIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gbnVsbCA6IHtcbiAgLyoqXG4gICogUHJldmVudCBzdHlsZXMgZnJvbSBiZWluZyBpbmplY3RlZCBpbnRvIHRoZSBET00uXG4gICpcbiAgKiBUaGlzIGlzIHVzZWZ1bCBpbiBzaXR1YXRpb25zIHdoZXJlIHlvdSdkIGxpa2UgdG8gdGVzdCByZW5kZXJpbmcgVUlcbiAgKiBjb21wb25lbnRzIHdoaWNoIHVzZSBBcGhyb2RpdGUgd2l0aG91dCBhbnkgb2YgdGhlIHNpZGUtZWZmZWN0cyBvZlxuICAqIEFwaHJvZGl0ZSBoYXBwZW5pbmcuIFBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHRlc3RpbmcgdGhlIG91dHB1dCBvZlxuICAqIGNvbXBvbmVudHMgd2hlbiB5b3UgaGF2ZSBubyBET00sIGUuZy4gdGVzdGluZyBpbiBOb2RlIHdpdGhvdXQgYSBmYWtlIERPTS5cbiAgKlxuICAqIFNob3VsZCBiZSBwYWlyZWQgd2l0aCBhIHN1YnNlcXVlbnQgY2FsbCB0b1xuICAqIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24uXG4gICovXG4gIHN1cHByZXNzU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIHN1cHByZXNzU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgICBzdGFydEJ1ZmZlcmluZygpO1xuICB9LFxuXG4gIC8qKlxuICAqIE9wcG9zaXRlIG1ldGhvZCBvZiBwcmV2ZW50U3R5bGVJbmplY3QuXG4gICovXG4gIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb246IGZ1bmN0aW9uIGNsZWFyQnVmZmVyQW5kUmVzdW1lU3R5bGVJbmplY3Rpb24oKSB7XG4gICAgcmVzZXQoKTtcbiAgfSxcblxuICAvKipcbiAgKiBSZXR1cm5zIGEgc3RyaW5nIG9mIGJ1ZmZlcmVkIHN0eWxlcyB3aGljaCBoYXZlIG5vdCBiZWVuIGZsdXNoZWRcbiAgKlxuICAqIEByZXR1cm5zIHtzdHJpbmd9ICBCdWZmZXIgb2Ygc3R5bGVzIHdoaWNoIGhhdmUgbm90IHlldCBiZWVuIGZsdXNoZWQuXG4gICovXG4gIGdldEJ1ZmZlcmVkU3R5bGVzOiBmdW5jdGlvbiBnZXRCdWZmZXJlZFN0eWxlcyQxKCkge1xuICAgIHJldHVybiBnZXRCdWZmZXJlZFN0eWxlcygpO1xuICB9XG59O1xuLyoqXG4gKiBHZW5lcmF0ZSB0aGUgQXBocm9kaXRlIEFQSSBleHBvcnRzLCB3aXRoIGdpdmVuIGBzZWxlY3RvckhhbmRsZXJzYCBhbmRcbiAqIGB1c2VJbXBvcnRhbnRgIHN0YXRlLlxuICovXG5cbmZ1bmN0aW9uIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4pIHtcbiAgdmFyIHNlbGVjdG9ySGFuZGxlcnNcbiAgLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuICA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnM7XG4gIHJldHVybiB7XG4gICAgU3R5bGVTaGVldDogX29iamVjdFNwcmVhZCh7fSwgU3R5bGVTaGVldCwge1xuICAgICAgLyoqXG4gICAgICAgKiBSZXR1cm5zIGEgdmVyc2lvbiBvZiB0aGUgZXhwb3J0cyBvZiBBcGhyb2RpdGUgKGkuZS4gYW4gb2JqZWN0XG4gICAgICAgKiB3aXRoIGBjc3NgIGFuZCBgU3R5bGVTaGVldGAgcHJvcGVydGllcykgd2hpY2ggaGF2ZSBzb21lXG4gICAgICAgKiBleHRlbnNpb25zIGluY2x1ZGVkLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGV4dGVuc2lvbnM6IEFuIGFycmF5IG9mIGV4dGVuc2lvbnMgdG9cbiAgICAgICAqICAgICBhZGQgdG8gdGhpcyBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuIEVhY2ggb2JqZWN0IHNob3VsZCBoYXZlIGFcbiAgICAgICAqICAgICBzaW5nbGUgcHJvcGVydHkgb24gaXQsIGRlZmluaW5nIHdoaWNoIGtpbmQgb2YgZXh0ZW5zaW9uIHRvXG4gICAgICAgKiAgICAgYWRkLlxuICAgICAgICogQHBhcmFtIHtTZWxlY3RvckhhbmRsZXJ9IFtleHRlbnNpb25zW10uc2VsZWN0b3JIYW5kbGVyXTogQVxuICAgICAgICogICAgIHNlbGVjdG9yIGhhbmRsZXIgZXh0ZW5zaW9uLiBTZWUgYGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzYCBpblxuICAgICAgICogICAgIGdlbmVyYXRlLmpzLlxuICAgICAgICpcbiAgICAgICAqIEByZXR1cm5zIHtPYmplY3R9IEFuIG9iamVjdCBjb250YWluaW5nIHRoZSBleHBvcnRzIG9mIHRoZSBuZXdcbiAgICAgICAqICAgICBpbnN0YW5jZSBvZiBBcGhyb2RpdGUuXG4gICAgICAgKi9cbiAgICAgIGV4dGVuZDogZnVuY3Rpb24gZXh0ZW5kKGV4dGVuc2lvbnNcbiAgICAgIC8qIDogRXh0ZW5zaW9uW10gKi9cbiAgICAgICkge1xuICAgICAgICB2YXIgZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycyA9IGV4dGVuc2lvbnMgLy8gUHVsbCBvdXQgZXh0ZW5zaW9ucyB3aXRoIGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5XG4gICAgICAgIC5tYXAoZnVuY3Rpb24gKGV4dGVuc2lvbikge1xuICAgICAgICAgIHJldHVybiBleHRlbnNpb24uc2VsZWN0b3JIYW5kbGVyO1xuICAgICAgICB9KSAvLyBSZW1vdmUgbnVsbHMgKGkuZS4gZXh0ZW5zaW9ucyB3aXRob3V0IGEgc2VsZWN0b3JIYW5kbGVyIHByb3BlcnR5KS5cbiAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoaGFuZGxlcikge1xuICAgICAgICAgIHJldHVybiBoYW5kbGVyO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG1ha2VFeHBvcnRzKHVzZUltcG9ydGFudCwgc2VsZWN0b3JIYW5kbGVycy5jb25jYXQoZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycykpO1xuICAgICAgfVxuICAgIH0pLFxuICAgIFN0eWxlU2hlZXRTZXJ2ZXI6IFN0eWxlU2hlZXRTZXJ2ZXIsXG4gICAgU3R5bGVTaGVldFRlc3RVdGlsczogU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBtaW5pZnk6IGZ1bmN0aW9uIG1pbmlmeShzaG91bGRNaW5pZnlcbiAgICAvKiA6IGJvb2xlYW4gKi9cbiAgICApIHtcbiAgICAgIGhhc2hGbiA9IHNob3VsZE1pbmlmeSA/IGhhc2hTdHJpbmcgOiB1bm1pbmlmaWVkSGFzaEZuO1xuICAgIH0sXG4gICAgY3NzOiBmdW5jdGlvbiBjc3MoKVxuICAgIC8qIDogTWF5YmVTaGVldERlZmluaXRpb25bXSAqL1xuICAgIHtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBzdHlsZURlZmluaXRpb25zID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBzdHlsZURlZmluaXRpb25zW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gaW5qZWN0QW5kR2V0Q2xhc3NOYW1lKHVzZUltcG9ydGFudCwgc3R5bGVEZWZpbml0aW9ucywgc2VsZWN0b3JIYW5kbGVycyk7XG4gICAgfSxcbiAgICBmbHVzaFRvU3R5bGVUYWc6IGZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWU6IGluamVjdEFuZEdldENsYXNzTmFtZSxcbiAgICBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyczogZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsXG4gICAgcmVzZXQ6IHJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZTogcmVzZXRJbmplY3RlZFN0eWxlXG4gIH07XG59XG5cbmV4cG9ydCB7IG1ha2VFeHBvcnRzIGFzIGEgfTtcbiIsImltcG9ydCB7IGEgYXMgbWFrZUV4cG9ydHMgfSBmcm9tICcuL2NodW5rLWZlYmNlNDZiLmpzJztcbmltcG9ydCAnc3RyaW5nLWhhc2gnO1xuaW1wb3J0ICdhc2FwJztcblxudmFyIHVzZUltcG9ydGFudCA9IHRydWU7IC8vIEFkZCAhaW1wb3J0YW50IHRvIGFsbCBzdHlsZSBkZWZpbml0aW9uc1xuXG52YXIgQXBocm9kaXRlID0gbWFrZUV4cG9ydHModXNlSW1wb3J0YW50KTtcbnZhciBTdHlsZVNoZWV0ID0gQXBocm9kaXRlLlN0eWxlU2hlZXQsXG4gICAgU3R5bGVTaGVldFNlcnZlciA9IEFwaHJvZGl0ZS5TdHlsZVNoZWV0U2VydmVyLFxuICAgIFN0eWxlU2hlZXRUZXN0VXRpbHMgPSBBcGhyb2RpdGUuU3R5bGVTaGVldFRlc3RVdGlscyxcbiAgICBjc3MgPSBBcGhyb2RpdGUuY3NzLFxuICAgIG1pbmlmeSA9IEFwaHJvZGl0ZS5taW5pZnksXG4gICAgZmx1c2hUb1N0eWxlVGFnID0gQXBocm9kaXRlLmZsdXNoVG9TdHlsZVRhZyxcbiAgICBpbmplY3RBbmRHZXRDbGFzc05hbWUgPSBBcGhyb2RpdGUuaW5qZWN0QW5kR2V0Q2xhc3NOYW1lLFxuICAgIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzID0gQXBocm9kaXRlLmRlZmF1bHRTZWxlY3RvckhhbmRsZXJzLFxuICAgIHJlc2V0ID0gQXBocm9kaXRlLnJlc2V0LFxuICAgIHJlc2V0SW5qZWN0ZWRTdHlsZSA9IEFwaHJvZGl0ZS5yZXNldEluamVjdGVkU3R5bGU7XG5cbmV4cG9ydCB7IFN0eWxlU2hlZXQsIFN0eWxlU2hlZXRTZXJ2ZXIsIFN0eWxlU2hlZXRUZXN0VXRpbHMsIGNzcywgbWluaWZ5LCBmbHVzaFRvU3R5bGVUYWcsIGluamVjdEFuZEdldENsYXNzTmFtZSwgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsIHJlc2V0LCByZXNldEluamVjdGVkU3R5bGUgfTtcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJiNDk1N2Y0NGUxNWQ4MTY3ZjczYjQ4OTc4N2FlODk3ZC5wbmdcIjsiLCJpbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xuXG5jbGFzcyBOb3RpZmljYXRpb25JdGVtIGV4dGVuZHMgUHVyZUNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGlkLCB0eXBlLCB2YWx1ZSwgaHRtbCwgbWFya0FzUmVhZCB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCBzdHlsZSA9ICh0eXBlID09PSAndXJnZW50JykgPyBzdHlsZXMudXJnZW50IDogc3R5bGVzLmRlZmF1bHQ7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGxpXG4gICAgICBvbkNsaWNrPXsoKSA9PiBtYXJrQXNSZWFkKGlkKX1cbiAgICAgIGNsYXNzTmFtZT17Y3NzKHN0eWxlKX1cbiAgICAgIGRhdGEtbm90aWZpY2F0aW9uLXR5cGU9e3R5cGV9XG4gICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17aHRtbH0+XG4gICAgICB7dmFsdWV9XG4gICAgICA8L2xpPlxuICAgIClcbiAgfVxufVxuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGRlZmF1bHQ6IHtcbiAgICBmb250RmFtaWx5OiBcIidHYWxhbm8gR3JvdGVzcXVlIEFsdCcsIHNhbnMtc2VyaWZcIixcbiAgICBmb250V2VpZ2h0OiAnNDAwJyxcbiAgICBmb250U2l6ZTogJzAuOHJlbScsXG4gICAgY29sb3I6ICdibHVlJyxcbiAgfSxcbiAgdXJnZW50OiB7XG4gICAgZm9udEZhbWlseTogXCInR2FsYW5vIEdyb3Rlc3F1ZSBBbHQnLCBzYW5zLXNlcmlmXCIsXG4gICAgZm9udFdlaWdodDogJzQwMCcsXG4gICAgZm9udFNpemU6ICcwLjhyZW0nLFxuICAgIGNvbG9yOiAncmVkJyxcbiAgfSxcbn0pXG5cbk5vdGlmaWNhdGlvbkl0ZW0ucHJvcFR5cGVzID0ge1xuICBpZDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgaHRtbDogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBfX2h0bWw6IFByb3BUeXBlcy5zdHJpbmcsXG4gIH0pLFxuICBtYXJrQXNSZWFkOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxufTtcblxuTm90aWZpY2F0aW9uSXRlbS5kZWZhdWx0UHJvcHMgPSB7XG4gIHR5cGU6ICdkZWZhdWx0JyxcbiAgdmFsdWU6ICcnLFxuICBodG1sOiBudWxsLFxuICBtYXJrQXNSZWFkOiAoKSA9PiB7fSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbkl0ZW07XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jb25zdCBOb3RpZmljYXRpb25JdGVtU2hhcGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGlkOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICAgdHlwZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICAgIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgTm90aWZpY2F0aW9uSXRlbVNoYXBlO1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgY2xvc2VJY29uIGZyb20gJy4uL2Fzc2V0cy9jbG9zZS1pY29uLnBuZyc7XG5pbXBvcnQgTm90aWZpY2F0aW9uSXRlbSBmcm9tICcuL05vdGlmaWNhdGlvbkl0ZW0nO1xuaW1wb3J0IE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSBmcm9tICcuL05vdGlmaWNhdGlvbkl0ZW1TaGFwZSc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG5cbiAgICBub3RpZmljYXRpb25zOiB7XG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgICAgYWxpZ25JdGVtczogJ2ZsZXgtc3RhcnQnLFxuICAgICAgYm9yZGVyOiAnM3B4IGRvdHRlZCAjMDAwMDNDJyxcbiAgICAgIG1hcmdpblJpZ2h0OiAnLjVyZW0nLFxuICAgIH0sXG5cbiAgICBub3RpZmljYXRpb25zUGFyYWdyYXBoOiB7XG4gICAgICBmb250RmFtaWx5OiBcIidHYWxhbm8gR3JvdGVzcXVlIEFsdCcsIHNhbnMtc2VyaWZcIixcbiAgICAgIGZvbnRXZWlnaHQ6ICc0MDAnLFxuICAgICAgcGFkZGluZzogJzEuNXJlbSAwIC4zcmVtIC44cmVtJyxcbiAgICAgIG1hcmdpbjogJzAnLFxuICAgICAgZm9udFNpemU6ICcuOHJlbScsXG4gICAgfSxcblxuICAgIG1lbnVJdGVtOiB7XG4gICAgICBmb250RmFtaWx5OiBcIidHYWxhbm8gR3JvdGVzcXVlIEFsdCcsIHNhbnMtc2VyaWZcIixcbiAgICAgIGZvbnRXZWlnaHQ6ICc0MDAnLFxuICAgICAgZm9udFNpemU6ICcwLjhyZW0nLFxuICAgICAgbWFyZ2luUmlnaHQ6ICcxcmVtJyxcbiAgICB9LFxuXG4gICAgbm90aWZpY2F0aW9uc1Vub3JkZXJlZExpc3Q6IHtcbiAgICAgIHBhZGRpbmdMZWZ0OiAnMi4zcmVtJyxcbiAgICB9LFxuICB9KVxuXG5jbGFzcyBOb3RpZmljYXRpb25zIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLm1hcmtBc1JlYWQgPSB0aGlzLm1hcmtBc1JlYWQuYmluZCh0aGlzKTtcbiAgICB9XG5cbiAgICBtYXJrQXNSZWFkKGlkKSB7XG4gICAgY29uc29sZS5sb2coYE5vdGlmaWNhdGlvbiAke2lkfSBoYXMgYmVlbiBtYXJrZWQgYXMgcmVhZGApO1xuICAgIH1cblxuICAgIHNob3VsZENvbXBvbmVudFVwZGF0ZShuZXh0UHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIG5leHRQcm9wcy5saXN0Tm90aWZpY2F0aW9ucy5sZW5ndGggPiB0aGlzLnByb3BzLmxpc3ROb3RpZmljYXRpb25zLmxlbmd0aDtcbiAgICB9XG5cbiAgICBoYW5kbGVCdXR0b25DbGljayA9ICgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ0Nsb3NlIGJ1dHRvbiBoYXMgYmVlbiBjbGlja2VkJyk7XG4gICAgfTtcblxuICAgIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGRpc3BsYXlEcmF3ZXIsIGxpc3ROb3RpZmljYXRpb25zIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgY29uc3QgYnV0dG9uU3R5bGUgPSB7XG4gICAgICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgICAgIGJhY2tncm91bmQ6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgcGFkZGluZzogXCIwXCIsXG4gICAgICAgIGN1cnNvcjogXCJwb2ludGVyXCIsXG4gICAgfTtcblxuICAgIGNvbnN0IGljb25TdHlsZSA9IHtcbiAgICAgICAgd2lkdGg6IFwiMTVweFwiLFxuICAgICAgICBoZWlnaHQ6IFwiMTVweFwiLFxuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLm1lbnVJdGVtKX0gZGF0YS10ZXN0aWQ9XCJtZW51SXRlbVwiPlxuICAgICAgICAgICAgPHA+WW91ciBOb3RpZmljYXRpb25zPC9wPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIHtkaXNwbGF5RHJhd2VyICYmIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLm5vdGlmaWNhdGlvbnMpfSBkYXRhLXRlc3RpZD1cIm5vdGlmaWNhdGlvbnNcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJOb3RpZmljYXRpb25zLWNvbnRlbnRcIj5cbiAgICAgICAgICAgICAgICB7bGlzdE5vdGlmaWNhdGlvbnMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9e2NzcyhzdHlsZXMubm90aWZpY2F0aW9uc1BhcmFncmFwaCl9PlxuICAgICAgICAgICAgICAgICAgICBIZXJlIGlzIHRoZSBsaXN0IG9mIG5vdGlmaWNhdGlvbnNcbiAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9e2NzcyhzdHlsZXMubm90aWZpY2F0aW9uc1Vub3JkZXJlZExpc3QpfT5cbiAgICAgICAgICAgICAgICAgIHtsaXN0Tm90aWZpY2F0aW9ucy5sZW5ndGggPT09IDAgPyAoXG4gICAgICAgICAgICAgICAgICAgIDxOb3RpZmljYXRpb25JdGVtIHZhbHVlPSdObyBuZXcgbm90aWZpY2F0aW9uIGZvciBub3cnIC8+XG4gICAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgICBsaXN0Tm90aWZpY2F0aW9ucy5tYXAobm90aWZpY2F0aW9uID0+IChcbiAgICAgICAgICAgICAgICAgICAgICA8Tm90aWZpY2F0aW9uSXRlbVxuICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtub3RpZmljYXRpb24uaWR9XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPXtub3RpZmljYXRpb24udHlwZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtub3RpZmljYXRpb24udmFsdWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBodG1sPXtub3RpZmljYXRpb24uaHRtbH1cbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtBc1JlYWQ9eygpID0+IHRoaXMubWFya0FzUmVhZChub3RpZmljYXRpb24uaWQpfVxuICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICkpXG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIkNsb3NlXCJcbiAgICAgICAgICAgICAgICBzdHlsZT17YnV0dG9uU3R5bGV9XG4gICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlQnV0dG9uQ2xpY2t9PlxuICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2Nsb3NlSWNvbn0gYWx0PVwiQ2xvc2VcIiBzdHlsZT17aWNvblN0eWxlfSAvPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICl9XG4gICAgICAgIDwvPlxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuTm90aWZpY2F0aW9ucy5wcm9wVHlwZXMgPSB7XG4gICAgZGlzcGxheURyYXdlcjogUHJvcFR5cGVzLmJvb2wsXG4gICAgbGlzdE5vdGlmaWNhdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSksXG59O1xuXG5Ob3RpZmljYXRpb25zLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBkaXNwbGF5RHJhd2VyOiBmYWxzZSxcbiAgICBsaXN0Tm90aWZpY2F0aW9uczogW10sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25zO1xuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImE1OGU1Mzk2NzI3NTViYTE1ZmRmNmM5MzU1MmFkMDc5LnBuZ1wiOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgbG9nbyBmcm9tICcuLi9hc3NldHMvYXRsYXNfbG9nby5wbmcnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuXG4gICAgbG9nbzoge1xuICAgICAgICBoZWlnaHQ6ICcxMnJlbScsXG4gICAgICAgIHBvaW50ZXJFdmVudHM6ICdub25lJyxcbiAgICB9LFxuXG4gICAgaGVhZGVyTWFpbjoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2ZsZXgtc3RhcnQnLFxuICAgIH0sXG5cbiAgICBoZWFkZXJUaXRsZToge1xuICAgICAgICBmb250RmFtaWx5OiBcIidHYWxhbm8gR3JvdGVzcXVlIEFsdCcsIHNhbnMtc2VyaWZcIixcbiAgICAgICAgZm9udFNpemU6ICczLjVyZW0nLFxuICAgICAgICBjb2xvcjogJyMwMDAwM0MnLFxuICAgICAgICBmb250V2VpZ2h0OiAnODAwJyxcbiAgICB9LFxuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gSGVhZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICA8aGVhZGVyIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5oZWFkZXJNYWluKX0+XG4gICAgICAgICAgICA8aW1nIHNyYz17bG9nb30gY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmxvZ28pfSBhbHQ9XCJsb2dvXCIgLz5cbiAgICAgICAgICAgIDxoMSBjbGFzc05hbWU9e2NzcyhzdHlsZXMuaGVhZGVyVGl0bGUpfT5cbiAgICAgICAgICAgICAgICBTY2hvb2wgZGFzaGJvYXJkXG4gICAgICAgICAgICA8L2gxPlxuICAgICAgICA8L2hlYWRlcj5cbiAgICAgICAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgSGVhZGVyO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0Zvb3Rlci5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL0Zvb3Rlci5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgJy4vRm9vdGVyLmNzcyc7XG5pbXBvcnQgeyBnZXRGdWxsWWVhciwgZ2V0Rm9vdGVyQ29weSB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcblxuZnVuY3Rpb24gRm9vdGVyKCkge1xuICByZXR1cm4gKFxuICAgIDxmb290ZXIgY2xhc3NOYW1lPVwiRm9vdGVyLW1haW5cIj5cbiAgICAgICAgPHA+XG4gICAgICAgICAgQ29weXJpZ2h0IHtnZXRGdWxsWWVhcigpfSAtIHtnZXRGb290ZXJDb3B5KHRydWUpfVxuICAgICAgICA8L3A+XG4gICAgPC9mb290ZXI+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IEZvb3RlcjtcbiIsImV4cG9ydCBmdW5jdGlvbiBnZXRGdWxsWWVhcigpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEZvb3RlckNvcHkoaXNJbmRleCkge1xuICBpZiAoaXNJbmRleCkgcmV0dXJuICdIb2xiZXJ0b24gU2Nob29sJztcbiAgcmV0dXJuICdIb2xiZXJ0b24gU2Nob29sIG1haW4gZGFzaGJvYXJkJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldExhdGVzdE5vdGlmaWNhdGlvbigpIHtcbiAgcmV0dXJuICc8c3Ryb25nPlVyZ2VudCByZXF1aXJlbWVudDwvc3Ryb25nPiAtIGNvbXBsZXRlIGJ5IEVPRCc7XG59XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCB9IGZyb20gJ2FwaHJvZGl0ZSc7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcblxuICAgIGxvZ2luQm9keToge1xuICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgIGZsZXhEaXJlY3Rpb246ICdjb2x1bW4nLFxuICAgICAgICBhbGlnbkl0ZW1zOiAnZmxleC1zdGFydCcsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gICAgfSxcblxuICAgIGxvZ2luUGFyYWdyYXBoOiB7XG4gICAgICAgIGZvbnRGYW1pbHk6IFwiJ0dhbGFubyBHcm90ZXNxdWUgQWx0Jywgc2Fucy1zZXJpZlwiLFxuICAgICAgICBmb250V2VpZ2h0OiAnNDAwJyxcbiAgICAgICAgZm9udFNpemU6ICcxLjNyZW0nLFxuICAgICAgICBtYXJnaW46ICc0cmVtIDJyZW0gMXJlbSA0cmVtJyxcbiAgICB9LFxuXG4gICAgZm9ybToge1xuICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgIGZvbnRGYW1pbHk6IFwiJ0dhbGFubyBHcm90ZXNxdWUgQWx0Jywgc2Fucy1zZXJpZlwiLFxuICAgICAgICBmb250V2VpZ2h0OiAnNDAwJyxcbiAgICAgICAgZm9udFNpemU6ICcxLjNyZW0nLFxuICAgICAgICBtYXJnaW46ICcxcmVtIDJyZW0gMXJlbSA0cmVtJyxcbiAgICB9LFxuXG4gICAgbGFiZWw6IHtcbiAgICAgICAgcGFkZGluZ1JpZ2h0OiAnLjVyZW0nLFxuICAgIH0sXG5cbiAgICBpbnB1dDoge1xuICAgICAgICBtYXJnaW5SaWdodDogJzFyZW0nLFxuICAgICAgICBib3JkZXI6ICcxcHggc29saWQgIzAwMDAzQycsXG4gICAgICAgIGJvcmRlclJhZGl1czogJzhweCcsXG4gICAgICAgIGJveFNoYWRvdzogJ3JnYmEoMjEzLCAyMTcsIDIxNywgLjUpIDAgMnB4IDVweCAwJyxcbiAgICB9LFxuXG4gICAgYnV0dG9uOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJyMxRUQyQUYnLFxuICAgICAgICBib3JkZXI6ICcxcHggc29saWQgIzAwMDAzQycsXG4gICAgICAgIGJvcmRlclJhZGl1czogJzhweCcsXG4gICAgICAgIHBhZGRpbmc6ICcuNHJlbScsXG4gICAgICAgIGJveFNoYWRvdzogJ3JnYmEoMjEzLCAyMTcsIDIxNywgLjUpIDAgMnB4IDVweCAwJyxcbiAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgICAgIHRleHREZWNvcmF0aW9uOiAnbm9uZScsXG4gICAgICAgICc6Zm9jdXMnOiB7XG4gICAgICAgICAgICBib3JkZXJDb2xvcjogJyMxRUQyQUYnLFxuICAgICAgICAgICAgb3V0bGluZTogJzJweCBzb2xpZCAjMUVEMkFGJyxcbiAgICAgICAgfSxcbiAgICB9LFxufSk7XG5cbmZ1bmN0aW9uIExvZ2luKCkge1xuICAgIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMubG9naW5Cb2R5KX0+XG4gICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5sb2dpblBhcmFncmFwaCl9PlxuICAgICAgICAgICAgTG9naW4gdG8gYWNjZXNzIHRoZSBmdWxsIGRhc2hib2FyZFxuICAgICAgICA8L3A+XG4gICAgICAgIDxmb3JtIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5mb3JtKX0+XG4gICAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmxhYmVsKX0gaHRtbEZvcj1cImVtYWlsXCI+RW1haWw6PC9sYWJlbD5cbiAgICAgICAgICAgIDxpbnB1dCBjbGFzc05hbWU9e2NzcyhzdHlsZXMuaW5wdXQpfSB0eXBlPVwidGV4dFwiIGlkPVwiZW1haWxcIiBuYW1lPVwiZW1haWxcIj48L2lucHV0PlxuICAgICAgICAgICAgPGxhYmVsIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5sYWJlbCl9IGh0bWxGb3I9XCJwYXNzd29yZFwiPlBhc3N3b3JkOjwvbGFiZWw+XG4gICAgICAgICAgICA8aW5wdXQgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmlucHV0KX0gdHlwZT1cInBhc3N3b3JkXCIgaWQ9XCJwYXNzd29yZFwiIG5hbWU9XCJwYXNzd29yZFwiPjwvaW5wdXQ+XG4gICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5idXR0b24pfSB0eXBlPVwic3VibWl0XCI+T0s8L2J1dHRvbj5cbiAgICAgICAgPC9mb3JtPlxuICAgIDwvZGl2PlxuICAgICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IExvZ2luO1xuIiwiLy8gc3JjL0NvdXJzZUxpc3QvQ291cnNlU2hhcGUuanNcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNvbnN0IENvdXJzZVNoYXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBjcmVkaXQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBDb3Vyc2VTaGFwZTtcbiIsIi8vIENvdXJzZUxpc3RSb3cuanMgLSBSZWFjdCBjb21wb25lbnQgdGhhdCBhY2NlcHRzIHRocmVlIHByb3BzOiB0ZXh0Rmlyc3RDZWxsLCB0ZXh0U2Vjb25kQ2VsbCwgYW5kIGlzSGVhZGVyLlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG5cbiAgICBoZWFkZXJSb3dTcGFuMjoge1xuICAgICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgICB9LFxuXG4gICAgc2Vjb25kSGVhZGVyUm93OiB7XG4gICAgICBib3JkZXJUb3A6ICcycHggc29saWQgI2UwZTBlMCcsXG4gICAgICBib3JkZXJCb3R0b206ICcycHggc29saWQgI2UwZTBlMCcsXG4gICAgfSxcblxuICAgIHNlY29uZEhlYWRlclJvd0ZpcnN0Q2VsbDoge1xuICAgICAgdGV4dEFsaWduOiAnbGVmdCcsXG4gICAgICB3aWR0aDogJzcwJScsXG4gICAgfSxcblxuICAgIHNlY29uZEhlYWRlclJvd1NlY29uZENlbGw6IHtcbiAgICAgIHRleHRBbGlnbjogJ2xlZnQnLFxuICAgICAgd2lkdGg6ICczMCUnLFxuICAgIH0sXG5cbiAgICBib2R5Um93Q2VsbDoge1xuICAgICAgdGV4dEFsaWduOiAnbGVmdCcsXG4gICAgfSxcblxuICAgIHJvdzoge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2Y1ZjVmNWFiJyxcbiAgICB9LFxuXG4gICAgaGVhZGVyOiB7XG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjZGViNWI1NDUnLFxuICAgIH0sXG4gIH0pO1xuXG5mdW5jdGlvbiBDb3Vyc2VMaXN0Um93KHsgaXNIZWFkZXIsIHRleHRGaXJzdENlbGwsIHRleHRTZWNvbmRDZWxsIH0pIHtcbiAgICAvLyBBcHBseSBzdHlsZXMgY29uZGlvbmFsbHlcbiAgICBjb25zdCBzdHlsZSA9IGlzSGVhZGVyID8gaGVhZGVyUm93U3R5bGUgOiByb3dTdHlsZTtcblxuICAgIGlmIChpc0hlYWRlcikge1xuICAgICAgICBpZiAodGV4dFNlY29uZENlbGwgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPHRyIGNsYXNzTmFtZT17Y3NzKHN0eWxlLCBzdHlsZXMuaGVhZGVyUm93U3BhbjIpfT5cbiAgICAgICAgICAgICAgICAgICAgPHRoIGNvbFNwYW49XCIyXCI+e3RleHRGaXJzdENlbGx9PC90aD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgPHRyIGNsYXNzTmFtZT17Y3NzKHN0eWxlLCBzdHlsZXMuc2Vjb25kSGVhZGVyUm93KX0+XG4gICAgICAgICAgPHRoIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5zZWNvbmRIZWFkZXJSb3dGaXJzdENlbGwpfT57dGV4dEZpcnN0Q2VsbH08L3RoPlxuICAgICAgICAgIDx0aCBjbGFzc05hbWU9e2NzcyhzdHlsZXMuc2Vjb25kSGVhZGVyUm93U2Vjb25kQ2VsbCl9Pnt0ZXh0U2Vjb25kQ2VsbH08L3RoPlxuICAgICAgICA8L3RyPlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8dHIgY2xhc3NOYW1lPXtjc3Moc3R5bGUpfT5cbiAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYm9keVJvd0NlbGwpfT57dGV4dEZpcnN0Q2VsbH08L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5ib2R5Um93Q2VsbCl9Pnt0ZXh0U2Vjb25kQ2VsbH08L3RkPlxuICAgICAgICAgIDwvdHI+XG4gICAgICAgICk7XG4gICAgfTtcbn07XG5cbkNvdXJzZUxpc3RSb3cucHJvcFR5cGVzID0ge1xuICAgIGlzSGVhZGVyOiBQcm9wVHlwZXMuYm9vbCxcbiAgICB0ZXh0Rmlyc3RDZWxsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgdGV4dFNlY29uZENlbGw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1xuICAgICAgICBQcm9wVHlwZXMuc3RyaW5nLFxuICAgICAgICBQcm9wVHlwZXMubnVtYmVyXG4gICAgXSlcbn07XG5cbkNvdXJzZUxpc3RSb3cuZGVmYXVsdFByb3BzID0ge1xuICAgIGlzSGVhZGVyOiBmYWxzZSxcbiAgICB0ZXh0U2Vjb25kQ2VsbDogbnVsbFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ291cnNlTGlzdFJvdztcbiIsIi8vIENvdXJzZUxpc3QuanNcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IENvdXJzZVNoYXBlIGZyb20gJy4vQ291cnNlU2hhcGUnO1xuaW1wb3J0IENvdXJzZUxpc3RSb3cgZnJvbSAnLi9Db3Vyc2VMaXN0Um93JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcblxuICBjb3Vyc2VUYWJsZToge1xuICAgIHdpZHRoOiAnOTAlJyxcbiAgICBib3JkZXJDb2xsYXBzZTogJ2NvbGxhcHNlJyxcbiAgICBib3JkZXI6ICcxcHggc29saWQgI2UwZTBlMCcsXG4gICAgbWFyZ2luOiAnMXJlbSBhdXRvJyxcbiAgICBmb250RmFtaWx5OiBcIidHYWxhbm8gR3JvdGVzcXVlIEFsdCcsIHNhbnMtc2VyaWZcIixcbiAgICBmb250V2VpZ2h0OiAnNDAwJyxcbiAgfSxcblxufSk7XG5cbmZ1bmN0aW9uIENvdXJzZUxpc3QoeyBsaXN0Q291cnNlcyB9KSB7XG4gIHJldHVybiAoXG4gICAgPHRhYmxlIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5jb3Vyc2VUYWJsZSl9PlxuICAgICAgPHRoZWFkPlxuICAgICAgICA8Q291cnNlTGlzdFJvdyB0ZXh0Rmlyc3RDZWxsPSdBdmFpbGFibGUgY291cnNlcycgaXNIZWFkZXI9e3RydWV9IC8+XG4gICAgICAgIDxDb3Vyc2VMaXN0Um93IHRleHRGaXJzdENlbGw9J0NvdXJzZSBuYW1lJyB0ZXh0U2Vjb25kQ2VsbD0nQ3JlZGl0JyBpc0hlYWRlcj17dHJ1ZX0gLz5cbiAgICAgIDwvdGhlYWQ+XG4gICAgICA8dGJvZHk+XG4gICAgICAgIHtsaXN0Q291cnNlcy5sZW5ndGggPT09IDAgPyAoXG4gICAgICAgICAgPENvdXJzZUxpc3RSb3cgdGV4dEZpcnN0Q2VsbD0nTm8gY291cnNlIGF2YWlsYWJsZSB5ZXQnIGlzSGVhZGVyPXtmYWxzZX0gLz5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICBsaXN0Q291cnNlcy5tYXAoY291cnNlID0+IChcbiAgICAgICAgICAgIDxDb3Vyc2VMaXN0Um93IGtleT17Y291cnNlLmlkfSB0ZXh0Rmlyc3RDZWxsPXtjb3Vyc2UubmFtZX0gdGV4dFNlY29uZENlbGw9e2NvdXJzZS5jcmVkaXR9IGlzSGVhZGVyPXtmYWxzZX0gLz5cbiAgICAgICAgICApKVxuICAgICAgICApfVxuICAgICAgPC90Ym9keT5cbiAgICA8L3RhYmxlPlxuICApO1xufVxuXG5Db3Vyc2VMaXN0LnByb3BUeXBlcyA9IHtcbiAgbGlzdENvdXJzZXM6IFByb3BUeXBlcy5hcnJheU9mKENvdXJzZVNoYXBlKSxcbn07XG5cbkNvdXJzZUxpc3QuZGVmYXVsdFByb3BzID0ge1xuICBsaXN0Q291cnNlczogW10sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb3Vyc2VMaXN0O1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmNsYXNzIEJvZHlTZWN0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgdGl0bGUsIGNoaWxkcmVuIH0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2IGNsYXNzTmFtZT0nYm9keVNlY3Rpb24nPlxuICAgICAgICA8aDI+e3RpdGxlfTwvaDI+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuQm9keVNlY3Rpb24ucHJvcFR5cGVzID0ge1xuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBCb2R5U2VjdGlvbjtcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQm9keVNlY3Rpb24gZnJvbSAnLi9Cb2R5U2VjdGlvbic7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuXG4gIGJvZHlNYXJnaW46IHtcbiAgICBtYXJnaW46ICc0MHB4JyxcbiAgfVxufSlcblxuY2xhc3MgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgcmVuZGVyICgpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuYm9keU1hcmdpbil9PlxuICAgICAgICA8Qm9keVNlY3Rpb24gey4uLnRoaXMucHJvcHN9IC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbkJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbS5wcm9wVHlwZXMgPSB7XG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMubm9kZSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tO1xuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XG5cbi8vIGltcG9ydCBjb21wb25lbnRzXG5pbXBvcnQgTm90aWZpY2F0aW9ucyBmcm9tIFwiLi4vTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25zXCI7XG5pbXBvcnQgSGVhZGVyIGZyb20gJy4uL0hlYWRlci9IZWFkZXInO1xuaW1wb3J0IEZvb3RlciBmcm9tICcuLi9Gb290ZXIvRm9vdGVyJztcbmltcG9ydCBMb2dpbiBmcm9tICcuLi9Mb2dpbi9Mb2dpbic7XG5pbXBvcnQgQ291cnNlTGlzdCBmcm9tIFwiLi4vQ291cnNlTGlzdC9Db3Vyc2VMaXN0XCI7XG5pbXBvcnQgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIGZyb20gXCIuLi9Cb2R5U2VjdGlvbi9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b21cIjtcbmltcG9ydCBCb2R5U2VjdGlvbiBmcm9tIFwiLi4vQm9keVNlY3Rpb24vQm9keVNlY3Rpb25cIjtcblxuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG5cbiAgYm9keToge1xuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gIH0sXG5cbiAgaGVhZGVyV3JhcHBlcjoge1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgIGFsaWduSXRlbXM6ICdmbGV4LXN0YXJ0JyxcbiAgICBib3JkZXJCb3R0b206ICc1cHggc29saWQgIzAwMDAzQycsXG4gIH0sXG5cbiAgaGVhZGVyTm90aWZpY2F0aW9uczoge1xuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICBhbGlnbkl0ZW1zOiAnZmxleC1lbmQnLFxuICB9LFxuXG4gIGZvb3Rlcjoge1xuICAgIGZvbnRGYW1pbHk6IFwiJ0dhbGFubyBHcm90ZXNxdWUgQWx0Jywgc2Fucy1zZXJpZlwiLFxuICAgIGZvbnRTdHlsZTogJ2l0YWxpYycsXG4gICAgZm9udFNpemU6ICcxLjFyZW0nLFxuICAgIGJvcmRlclRvcDogJzVweCBzb2xpZCAjMDAwMDNDJyxcbiAgICB3aWR0aDogJzEwMCUnLFxuICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgYm90dG9tOiAnMCcsXG4gIH1cbn0pXG5cbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBsaXN0Q291cnNlczogW1xuICAgICAgICB7IGlkOiAxLCBuYW1lOiAnRVM2JywgY3JlZGl0OiA2MCB9LFxuICAgICAgICB7IGlkOiAyLCBuYW1lOiAnV2VicGFjaycsIGNyZWRpdDogMjAgfSxcbiAgICAgICAgeyBpZDogMywgbmFtZTogJ1JlYWN0JywgY3JlZGl0OiA0MCB9LFxuICAgICAgXSxcbiAgICAgIGxpc3ROb3RpZmljYXRpb25zOiBbXG4gICAgICAgIHsgaWQ6IDEsIHR5cGU6ICdkZWZhdWx0JywgdmFsdWU6ICdOZXcgY291cnNlIGF2YWlsYWJsZScgfSxcbiAgICAgICAgeyBpZDogMiwgdHlwZTogJ3VyZ2VudCcsIHZhbHVlOiAnTmV3IHJlc3VtZSBhdmFpbGFibGUnIH0sXG4gICAgICAgIHsgaWQ6IDMsIHR5cGU6ICd1cmdlbnQnLCBodG1sOiB7IF9faHRtbDogJzxzdHJvbmc+VXJnZW50IHJlcXVpcmVtZW50PC9zdHJvbmc+IC0gY29tcGxldGUgYnkgRU9EJyB9IH0sXG4gICAgICBdLFxuICAgIH07XG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLmhhbmRsZUtleURvd24gPSAoZXZlbnQpID0+IHtcbiAgICAgIGlmKGV2ZW50LmN0cmxLZXkgJiYgZXZlbnQua2V5ID09PSAnaCcpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgYWxlcnQoJ0xvZ2dpbmcgeW91IG91dCcpO1xuICAgICAgICB0aGlzLnByb3BzLmxvZ091dCgpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuaGFuZGxlS2V5RG93bik7XG4gIH1cblxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuaGFuZGxlS2V5RG93bik7XG4gIH1cblxuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHsgaXNMb2dnZWRJbiB9ID0gdGhpcy5wcm9wcztcbiAgICBjb25zdCB7IGxpc3RDb3Vyc2VzLCBsaXN0Tm90aWZpY2F0aW9ucyB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgICA8PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5oZWFkZXJXcmFwcGVyKX0+XG4gICAgICAgICAgPEhlYWRlciAvPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmhlYWRlck5vdGlmaWNhdGlvbnMpfT5cbiAgICAgICAgICAgIDxOb3RpZmljYXRpb25zIGxpc3ROb3RpZmljYXRpb25zPXtsaXN0Tm90aWZpY2F0aW9uc30gLz5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmJvZHkpfT5cbiAgICAgICAgICB7aXNMb2dnZWRJbiA/IChcbiAgICAgICAgICAgIDxCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gdGl0bGU9J0NvdXJzZSBMaXN0Jz5cbiAgICAgICAgICAgICAgPENvdXJzZUxpc3QgbGlzdENvdXJzZXM9e2xpc3RDb3Vyc2VzfSAvPlxuICAgICAgICAgICAgPC9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20+XG4gICAgICAgICAgKSA6IChcbiAgICAgICAgICAgIDxCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gdGl0bGU9J0xvZyBpbiB0byBjb250aW51ZSc+XG4gICAgICAgICAgICAgIDxMb2dpbiAvPlxuICAgICAgICAgICAgPC9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8Qm9keVNlY3Rpb24gdGl0bGU9J05ld3MgZnJvbSB0aGUgU2Nob29sJz5cbiAgICAgICAgICAgIDxwPk5pa2tpIGdvdCBoZXIgRFJFQU0gSk9CISE8L3A+XG4gICAgICAgICAgPC9Cb2R5U2VjdGlvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPEZvb3RlciBmb290ZXJDbGFzc05hbWU9e2NzcyhzdHlsZXMuZm9vdGVyKX0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8Lz5cbiAgICApO1xuICB9XG59XG5cbkFwcC5wcm9wVHlwZXMgPSB7XG4gIGlzTG9nZ2VkSW46IFByb3BUeXBlcy5ib29sLFxuICBsb2dPdXQ6IFByb3BUeXBlcy5mdW5jLFxufTtcblxuQXBwLmRlZmF1bHRQcm9wcyA9IHtcbiAgaXNMb2dnZWRJbjogZmFsc2UsXG4gIGxvZ091dDogKCkgPT4ge30sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbS9jbGllbnQnO1xuaW1wb3J0IEFwcCBmcm9tICcuL0FwcC9BcHAnO1xuXG5cbi8vIFJvb3QgQXBwXG5jb25zdCByb290ID0gUmVhY3RET00uY3JlYXRlUm9vdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvb3RcIikpO1xucm9vdC5yZW5kZXIoXG4gIDxSZWFjdC5TdHJpY3RNb2RlPlxuICAgIDxBcHAgLz5cbiAgPC9SZWFjdC5TdHJpY3RNb2RlPlxuKTtcbiJdLCJuYW1lcyI6WyJyYXdBc2FwIiwiZnJlZVRhc2tzIiwicGVuZGluZ0Vycm9ycyIsInJlcXVlc3RFcnJvclRocm93IiwibWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyIiwibGVuZ3RoIiwic2hpZnQiLCJhc2FwIiwidGFzayIsInJhd1Rhc2siLCJwb3AiLCJSYXdUYXNrIiwidGhpcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJwcm90b3R5cGUiLCJjYWxsIiwiZXJyb3IiLCJvbmVycm9yIiwicHVzaCIsInF1ZXVlIiwicmVxdWVzdEZsdXNoIiwiaW5kZXgiLCJmbHVzaCIsImN1cnJlbnRJbmRleCIsInNjYW4iLCJuZXdMZW5ndGgiLCJ0b2dnbGUiLCJvYnNlcnZlciIsIm5vZGUiLCJzY29wZSIsImciLCJzZWxmIiwiQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsImNhbGxiYWNrIiwidGltZW91dEhhbmRsZSIsInNldFRpbWVvdXQiLCJoYW5kbGVUaW1lciIsImludGVydmFsSGFuZGxlIiwic2V0SW50ZXJ2YWwiLCJjbGVhclRpbWVvdXQiLCJjbGVhckludGVydmFsIiwiZG9jdW1lbnQiLCJjcmVhdGVUZXh0Tm9kZSIsIm9ic2VydmUiLCJjaGFyYWN0ZXJEYXRhIiwiZGF0YSIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiaWQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzb3VyY2VNYXBwaW5nIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInJlc2V0V2FybmluZ0NhY2hlIiwic2hpbSIsInByb3BzIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwibG9jYXRpb24iLCJwcm9wRnVsbE5hbWUiLCJzZWNyZXQiLCJlcnIiLCJFcnJvciIsIm5hbWUiLCJnZXRTaGltIiwiaXNSZXF1aXJlZCIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJiaWdpbnQiLCJib29sIiwiZnVuYyIsIm51bWJlciIsIm9iamVjdCIsInN0cmluZyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJlbGVtZW50IiwiZWxlbWVudFR5cGUiLCJpbnN0YW5jZU9mIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsImFhIiwiY2EiLCJwIiwiYSIsImIiLCJjIiwiYXJndW1lbnRzIiwiZGEiLCJTZXQiLCJlYSIsImZhIiwiaGEiLCJhZGQiLCJpYSIsIndpbmRvdyIsImNyZWF0ZUVsZW1lbnQiLCJqYSIsIk9iamVjdCIsImhhc093blByb3BlcnR5Iiwia2EiLCJsYSIsIm1hIiwidiIsImQiLCJlIiwiZiIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJ0eXBlIiwic2FuaXRpemVVUkwiLCJyZW1vdmVFbXB0eVN0cmluZyIsInoiLCJzcGxpdCIsImZvckVhY2giLCJ0b0xvd2VyQ2FzZSIsInJhIiwic2EiLCJ0b1VwcGVyQ2FzZSIsInRhIiwic2xpY2UiLCJwYSIsImlzTmFOIiwicWEiLCJ0ZXN0Iiwib2EiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsInJlcGxhY2UiLCJ4bGlua0hyZWYiLCJ1YSIsIl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEIiwidmEiLCJTeW1ib2wiLCJmb3IiLCJ3YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIml0ZXJhdG9yIiwiS2EiLCJMYSIsIkEiLCJhc3NpZ24iLCJNYSIsInN0YWNrIiwidHJpbSIsIm1hdGNoIiwiTmEiLCJPYSIsInByZXBhcmVTdGFja1RyYWNlIiwiZGVmaW5lUHJvcGVydHkiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwibCIsImgiLCJkaXNwbGF5TmFtZSIsImluY2x1ZGVzIiwiUGEiLCJ0YWciLCJyZW5kZXIiLCJRYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiUmEiLCJTYSIsIlRhIiwibm9kZU5hbWUiLCJWYSIsIl92YWx1ZVRyYWNrZXIiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJjb25zdHJ1Y3RvciIsImdldCIsImNvbmZpZ3VyYWJsZSIsImVudW1lcmFibGUiLCJnZXRWYWx1ZSIsInNldFZhbHVlIiwic3RvcFRyYWNraW5nIiwiVWEiLCJXYSIsImNoZWNrZWQiLCJ2YWx1ZSIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiYWIiLCJiYiIsImNiIiwiZGIiLCJvd25lckRvY3VtZW50IiwiZWIiLCJBcnJheSIsImlzQXJyYXkiLCJmYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiZ2IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImNoaWxkcmVuIiwiaGIiLCJpYiIsImpiIiwidGV4dENvbnRlbnQiLCJrYiIsImxiIiwibWIiLCJuYiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInZhbHVlT2YiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJvYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwicGIiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImFzcGVjdFJhdGlvIiwiYm9yZGVySW1hZ2VPdXRzZXQiLCJib3JkZXJJbWFnZVNsaWNlIiwiYm9yZGVySW1hZ2VXaWR0aCIsImJveEZsZXgiLCJib3hGbGV4R3JvdXAiLCJib3hPcmRpbmFsR3JvdXAiLCJjb2x1bW5Db3VudCIsImNvbHVtbnMiLCJmbGV4IiwiZmxleEdyb3ciLCJmbGV4UG9zaXRpdmUiLCJmbGV4U2hyaW5rIiwiZmxleE5lZ2F0aXZlIiwiZmxleE9yZGVyIiwiZ3JpZEFyZWEiLCJncmlkUm93IiwiZ3JpZFJvd0VuZCIsImdyaWRSb3dTcGFuIiwiZ3JpZFJvd1N0YXJ0IiwiZ3JpZENvbHVtbiIsImdyaWRDb2x1bW5FbmQiLCJncmlkQ29sdW1uU3BhbiIsImdyaWRDb2x1bW5TdGFydCIsImZvbnRXZWlnaHQiLCJsaW5lQ2xhbXAiLCJsaW5lSGVpZ2h0Iiwib3BhY2l0eSIsIm9yZGVyIiwib3JwaGFucyIsInRhYlNpemUiLCJ3aWRvd3MiLCJ6SW5kZXgiLCJ6b29tIiwiZmlsbE9wYWNpdHkiLCJmbG9vZE9wYWNpdHkiLCJzdG9wT3BhY2l0eSIsInN0cm9rZURhc2hhcnJheSIsInN0cm9rZURhc2hvZmZzZXQiLCJzdHJva2VNaXRlcmxpbWl0Iiwic3Ryb2tlT3BhY2l0eSIsInN0cm9rZVdpZHRoIiwicWIiLCJyYiIsInNiIiwic3R5bGUiLCJpbmRleE9mIiwic2V0UHJvcGVydHkiLCJrZXlzIiwiY2hhckF0Iiwic3Vic3RyaW5nIiwidGIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwic291cmNlIiwidHJhY2siLCJ3YnIiLCJ1YiIsInZiIiwiaXMiLCJ3YiIsInhiIiwidGFyZ2V0Iiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50IiwicGFyZW50Tm9kZSIsInliIiwiemIiLCJBYiIsIkJiIiwiQ2IiLCJzdGF0ZU5vZGUiLCJEYiIsIkViIiwiRmIiLCJHYiIsIkhiIiwiSWIiLCJKYiIsIktiIiwiTGIiLCJNYiIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiTmIiLCJhcHBseSIsIm0iLCJvbkVycm9yIiwiT2IiLCJQYiIsIlFiIiwiUmIiLCJTYiIsIlRiIiwiVmIiLCJhbHRlcm5hdGUiLCJyZXR1cm4iLCJmbGFncyIsIldiIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJYYiIsIlpiIiwiY2hpbGQiLCJzaWJsaW5nIiwiY3VycmVudCIsIlliIiwiJGIiLCJhYyIsInVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2siLCJiYyIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiY2MiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsImRjIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiQiIsInVuc3RhYmxlX25vdyIsImVjIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJmYyIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiZ2MiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImhjIiwidW5zdGFibGVfTm9ybWFsUHJpb3JpdHkiLCJpYyIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiamMiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJrYyIsImxjIiwib2MiLCJNYXRoIiwiY2x6MzIiLCJwYyIsInFjIiwibG9nIiwiTE4yIiwicmMiLCJzYyIsInRjIiwidWMiLCJwZW5kaW5nTGFuZXMiLCJzdXNwZW5kZWRMYW5lcyIsInBpbmdlZExhbmVzIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwidmMiLCJ4YyIsInljIiwiemMiLCJBYyIsImV2ZW50VGltZXMiLCJDYyIsIkMiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJNYyIsIk5jIiwiT2MiLCJNYXAiLCJQYyIsIlFjIiwiUmMiLCJTYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsIlRjIiwibmF0aXZlRXZlbnQiLCJibG9ja2VkT24iLCJkb21FdmVudE5hbWUiLCJldmVudFN5c3RlbUZsYWdzIiwidGFyZ2V0Q29udGFpbmVycyIsIlZjIiwiV2MiLCJwcmlvcml0eSIsImlzRGVoeWRyYXRlZCIsImNvbnRhaW5lckluZm8iLCJYYyIsIlljIiwiZGlzcGF0Y2hFdmVudCIsIlpjIiwiJGMiLCJhZCIsImJkIiwiY2QiLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImRkIiwiZWQiLCJ0cmFuc2l0aW9uIiwiZmQiLCJnZCIsImhkIiwiVWMiLCJzdG9wUHJvcGFnYXRpb24iLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSWQiLCJjbGlwYm9hcmREYXRhIiwiSmQiLCJMZCIsIk1kIiwiRXNjIiwiU3BhY2ViYXIiLCJMZWZ0IiwiVXAiLCJSaWdodCIsIkRvd24iLCJEZWwiLCJXaW4iLCJNZW51IiwiQXBwcyIsIlNjcm9sbCIsIk1velByaW50YWJsZUtleSIsIk5kIiwiT2QiLCJBbHQiLCJDb250cm9sIiwiTWV0YSIsIlNoaWZ0IiwiUGQiLCJRZCIsImtleSIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImNvZGUiLCJyZXBlYXQiLCJsb2NhbGUiLCJ3aGljaCIsIlJkIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIllkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCJaZCIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwibWUiLCJuZSIsIm9lIiwiZXZlbnQiLCJsaXN0ZW5lcnMiLCJwZSIsInFlIiwicmUiLCJzZSIsInRlIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwib25pbnB1dCIsIkFlIiwiZGV0YWNoRXZlbnQiLCJCZSIsIkNlIiwiYXR0YWNoRXZlbnQiLCJEZSIsIkVlIiwiRmUiLCJIZSIsIkllIiwiSmUiLCJLZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTGUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTWUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiTmUiLCJjb250ZW50RWRpdGFibGUiLCJPZSIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJkb2N1bWVudEVsZW1lbnQiLCJzdGFydCIsImVuZCIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwibWluIiwiZGVmYXVsdFZpZXciLCJnZXRTZWxlY3Rpb24iLCJleHRlbmQiLCJyYW5nZUNvdW50IiwiYW5jaG9yTm9kZSIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0IiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwibGVmdCIsInNjcm9sbExlZnQiLCJ0b3AiLCJzY3JvbGxUb3AiLCJmb2N1cyIsIlBlIiwiUWUiLCJSZSIsIlNlIiwiVGUiLCJVZSIsIlZlIiwiV2UiLCJhbmltYXRpb25lbmQiLCJhbmltYXRpb25pdGVyYXRpb24iLCJhbmltYXRpb25zdGFydCIsInRyYW5zaXRpb25lbmQiLCJYZSIsIlllIiwiWmUiLCJhbmltYXRpb24iLCIkZSIsImFmIiwiYmYiLCJjZiIsImRmIiwiZWYiLCJmZiIsImdmIiwiaGYiLCJsZiIsIm1mIiwibmYiLCJVYiIsImluc3RhbmNlIiwibGlzdGVuZXIiLCJEIiwib2YiLCJoYXMiLCJwZiIsInFmIiwicmYiLCJyYW5kb20iLCJzZiIsImJpbmQiLCJjYXB0dXJlIiwicGFzc2l2ZSIsIm4iLCJ0IiwiSiIsIngiLCJ1IiwidyIsIkYiLCJ0ZiIsInVmIiwicGFyZW50V2luZG93IiwidmYiLCJ3ZiIsIm5hIiwieGEiLCIkYSIsImJhIiwiamUiLCJjaGFyIiwia2UiLCJ1bnNoaWZ0IiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkNmIiwiRGYiLCJFZiIsIl9faHRtbCIsIkZmIiwiR2YiLCJIZiIsIlByb21pc2UiLCJKZiIsInF1ZXVlTWljcm90YXNrIiwicmVzb2x2ZSIsInRoZW4iLCJjYXRjaCIsIklmIiwiS2YiLCJMZiIsIk1mIiwicHJldmlvdXNTaWJsaW5nIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJSZiIsIlNmIiwiVGYiLCJVZiIsIkUiLCJHIiwiVmYiLCJIIiwiV2YiLCJYZiIsIllmIiwiY29udGV4dFR5cGVzIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dCIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0IiwiWmYiLCJjaGlsZENvbnRleHRUeXBlcyIsIiRmIiwiYWciLCJiZyIsImdldENoaWxkQ29udGV4dCIsImNnIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJkZyIsImVnIiwiZmciLCJnZyIsImhnIiwiamciLCJrZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwic2ciLCJ0ZyIsInVnIiwidmciLCJ3ZyIsInhnIiwieWciLCJJIiwiemciLCJBZyIsIkJnIiwiZGVsZXRpb25zIiwiQ2ciLCJwZW5kaW5nUHJvcHMiLCJvdmVyZmxvdyIsInRyZWVDb250ZXh0IiwicmV0cnlMYW5lIiwiRGciLCJtb2RlIiwiRWciLCJGZyIsIkdnIiwibWVtb2l6ZWRQcm9wcyIsIkhnIiwiSWciLCJKZyIsIktnIiwiTGciLCJkZWZhdWx0UHJvcHMiLCJNZyIsIk5nIiwiT2ciLCJQZyIsIlFnIiwiUmciLCJfY3VycmVudFZhbHVlIiwiU2ciLCJjaGlsZExhbmVzIiwiVGciLCJkZXBlbmRlbmNpZXMiLCJmaXJzdENvbnRleHQiLCJsYW5lcyIsIlVnIiwiVmciLCJjb250ZXh0IiwibWVtb2l6ZWRWYWx1ZSIsIm5leHQiLCJXZyIsIlhnIiwiWWciLCJpbnRlcmxlYXZlZCIsIlpnIiwiJGciLCJhaCIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsImJoIiwiY2giLCJldmVudFRpbWUiLCJsYW5lIiwicGF5bG9hZCIsImRoIiwiSyIsImVoIiwiZmgiLCJnaCIsInEiLCJyIiwieSIsImhoIiwiaWgiLCJqaCIsIkNvbXBvbmVudCIsInJlZnMiLCJraCIsIm5oIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwiTCIsImxoIiwibWgiLCJlbnF1ZXVlUmVwbGFjZVN0YXRlIiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwib2giLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsInBoIiwiY29udGV4dFR5cGUiLCJzdGF0ZSIsInVwZGF0ZXIiLCJxaCIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsInJoIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50RGlkTW91bnQiLCJzaCIsInJlZiIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJ0aCIsInVoIiwidmgiLCJ3aCIsInhoIiwieWgiLCJpbXBsZW1lbnRhdGlvbiIsInpoIiwiQWgiLCJkb25lIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsInRhZ05hbWUiLCJKaCIsIktoIiwiTGgiLCJNIiwiTWgiLCJyZXZlYWxPcmRlciIsIk5oIiwiT2giLCJfd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeSIsIlBoIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlFoIiwiUmgiLCJOIiwiTyIsIlAiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIlEiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiYmFzZVF1ZXVlIiwiZGkiLCJlaSIsImZpIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImhhc0VhZ2VyU3RhdGUiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsImdpIiwiaGkiLCJpaSIsImppIiwia2kiLCJnZXRTbmFwc2hvdCIsImxpIiwibWkiLCJSIiwibmkiLCJsYXN0RWZmZWN0Iiwic3RvcmVzIiwib2kiLCJwaSIsInFpIiwicmkiLCJjcmVhdGUiLCJkZXN0cm95IiwiZGVwcyIsInNpIiwidGkiLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJBaSIsIkJpIiwiQ2kiLCJEaSIsIkVpIiwiRmkiLCJHaSIsIkhpIiwiSWkiLCJKaSIsInJlYWRDb250ZXh0IiwidXNlQ2FsbGJhY2siLCJ1c2VDb250ZXh0IiwidXNlRWZmZWN0IiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUluc2VydGlvbkVmZmVjdCIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwidXNlUmVmIiwidXNlU3RhdGUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VNdXRhYmxlU291cmNlIiwidXNlU3luY0V4dGVybmFsU3RvcmUiLCJ1c2VJZCIsInVuc3RhYmxlX2lzTmV3UmVjb25jaWxlciIsImlkZW50aWZpZXJQcmVmaXgiLCJLaSIsIm1lc3NhZ2UiLCJkaWdlc3QiLCJMaSIsIk1pIiwiY29uc29sZSIsIk5pIiwiV2Vha01hcCIsIk9pIiwiUGkiLCJRaSIsIlJpIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJTaSIsImNvbXBvbmVudFN0YWNrIiwiVGkiLCJwaW5nQ2FjaGUiLCJVaSIsIlZpIiwiV2kiLCJYaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiWWkiLCJaaSIsIiRpIiwiYWoiLCJiaiIsImNvbXBhcmUiLCJjaiIsImRqIiwiZWoiLCJiYXNlTGFuZXMiLCJjYWNoZVBvb2wiLCJ0cmFuc2l0aW9ucyIsImZqIiwiZ2oiLCJoaiIsImlqIiwiamoiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnREaWRVcGRhdGUiLCJraiIsImxqIiwicGVuZGluZ0NvbnRleHQiLCJtaiIsIkFqIiwiQmoiLCJDaiIsIkRqIiwibmoiLCJvaiIsInBqIiwiZmFsbGJhY2siLCJxaiIsInJqIiwidGoiLCJkYXRhc2V0IiwiZGdzdCIsInVqIiwidmoiLCJfcmVhY3RSZXRyeSIsInNqIiwic3VidHJlZUZsYWdzIiwid2oiLCJ4aiIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwibGFzdCIsInRhaWwiLCJ0YWlsTW9kZSIsInlqIiwiRWoiLCJTIiwiRmoiLCJHaiIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmciLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJhdXRvRm9jdXMiLCJUIiwiSGoiLCJJaiIsIkpqIiwiS2oiLCJVIiwiTGoiLCJXZWFrU2V0IiwiViIsIk1qIiwiVyIsIk5qIiwiT2oiLCJRaiIsIlJqIiwiU2oiLCJUaiIsIlVqIiwiVmoiLCJXaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJYaiIsIlgiLCJZaiIsIlpqIiwiYWsiLCJvbkNvbW1pdEZpYmVyVW5tb3VudCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwiYmsiLCJjayIsImRrIiwiZWsiLCJmayIsImlzSGlkZGVuIiwiZ2siLCJoayIsImRpc3BsYXkiLCJpayIsImprIiwia2siLCJsayIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwic3JjIiwiV2siLCJtayIsImNlaWwiLCJuayIsIm9rIiwicGsiLCJZIiwiWiIsInFrIiwicmsiLCJzayIsInRrIiwidWsiLCJJbmZpbml0eSIsInZrIiwid2siLCJ4ayIsInlrIiwiemsiLCJBayIsIkJrIiwiQ2siLCJEayIsIkVrIiwiY2FsbGJhY2tOb2RlIiwiZXhwaXJhdGlvblRpbWVzIiwiZXhwaXJlZExhbmVzIiwid2MiLCJjYWxsYmFja1ByaW9yaXR5IiwiaWciLCJGayIsIkdrIiwiSGsiLCJJayIsIkprIiwiS2siLCJMayIsIk1rIiwiTmsiLCJPayIsIlBrIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRMYW5lcyIsIlFrIiwiUmsiLCJTayIsIlRrIiwiVWsiLCJWayIsIm11dGFibGVSZWFkTGFuZXMiLCJCYyIsIlBqIiwib25Db21taXRGaWJlclJvb3QiLCJtYyIsIm9uUmVjb3ZlcmFibGVFcnJvciIsIlhrIiwib25Qb3N0Q29tbWl0RmliZXJSb290IiwiWWsiLCJaayIsImFsIiwiaXNSZWFjdENvbXBvbmVudCIsInBlbmRpbmdDaGlsZHJlbiIsImJsIiwibXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YSIsImNsIiwiY2FjaGUiLCJwZW5kaW5nU3VzcGVuc2VCb3VuZGFyaWVzIiwiZWwiLCJmbCIsImdsIiwiaGwiLCJpbCIsImpsIiwiemoiLCIkayIsImxsIiwicmVwb3J0RXJyb3IiLCJtbCIsIl9pbnRlcm5hbFJvb3QiLCJubCIsIm9sIiwicGwiLCJxbCIsInNsIiwicmwiLCJ1bm1vdW50IiwidW5zdGFibGVfc2NoZWR1bGVIeWRyYXRpb24iLCJzcGxpY2UiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsInRsIiwidXNpbmdDbGllbnRFbnRyeVBvaW50IiwiRXZlbnRzIiwidWwiLCJmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSIsImJ1bmRsZVR5cGUiLCJ2ZXJzaW9uIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsInZsIiwicmVuZGVyZXJDb25maWciLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aCIsIm92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aCIsIm92ZXJyaWRlUHJvcHMiLCJvdmVycmlkZVByb3BzRGVsZXRlUGF0aCIsIm92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoIiwic2V0RXJyb3JIYW5kbGVyIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJyZWNvbmNpbGVyVmVyc2lvbiIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsIndsIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJjcmVhdGVQb3J0YWwiLCJkbCIsImNyZWF0ZVJvb3QiLCJ1bnN0YWJsZV9zdHJpY3RNb2RlIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJoeWRyYXRlIiwiaHlkcmF0ZVJvb3QiLCJoeWRyYXRlZFNvdXJjZXMiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwic2V0U3RhdGUiLCJmb3JjZVVwZGF0ZSIsIl9fc2VsZiIsIl9fc291cmNlIiwiZXNjYXBlIiwiX3N0YXR1cyIsIl9yZXN1bHQiLCJkZWZhdWx0IiwiQ2hpbGRyZW4iLCJjb3VudCIsInRvQXJyYXkiLCJvbmx5IiwiRnJhZ21lbnQiLCJQcm9maWxlciIsIlB1cmVDb21wb25lbnQiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVDb250ZXh0IiwiX2N1cnJlbnRWYWx1ZTIiLCJfdGhyZWFkQ291bnQiLCJQcm92aWRlciIsIkNvbnN1bWVyIiwiX2RlZmF1bHRWYWx1ZSIsIl9nbG9iYWxOYW1lIiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImZvcndhcmRSZWYiLCJpc1ZhbGlkRWxlbWVudCIsImxhenkiLCJtZW1vIiwic3RhcnRUcmFuc2l0aW9uIiwidW5zdGFibGVfYWN0Iiwic29ydEluZGV4IiwicGVyZm9ybWFuY2UiLCJzZXRJbW1lZGlhdGUiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJuYXZpZ2F0b3IiLCJzY2hlZHVsaW5nIiwiaXNJbnB1dFBlbmRpbmciLCJNZXNzYWdlQ2hhbm5lbCIsInBvcnQyIiwicG9ydDEiLCJvbm1lc3NhZ2UiLCJwb3N0TWVzc2FnZSIsInVuc3RhYmxlX1Byb2ZpbGluZyIsInVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uIiwidW5zdGFibGVfZm9yY2VGcmFtZVJhdGUiLCJmbG9vciIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJzdHIiLCJoYXNoIiwiY2hhckNvZGVBdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsImluc2VydCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJnZXRUYXJnZXQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsIm8iLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImN1cnJlbnRTY3JpcHQiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJuYyIsIl90eXBlb2YiLCJfZGVmaW5lUHJvcGVydHkiLCJ3cml0YWJsZSIsIl9vYmplY3RTcHJlYWQiLCJvd25LZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiZmlsdGVyIiwic3ltIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwiYXJyIiwiYXJyMiIsIl9hcnJheVdpdGhvdXRIb2xlcyIsIml0ZXIiLCJmcm9tIiwiX2l0ZXJhYmxlVG9BcnJheSIsIlR5cGVFcnJvciIsIl9ub25JdGVyYWJsZVNwcmVhZCIsIlVQUEVSQ0FTRV9SRSIsIlVQUEVSQ0FTRV9SRV9UT19LRUJBQiIsImlzVW5pdGxlc3NOdW1iZXIiLCJwcmVmaXhlcyIsInByZWZpeCIsInByZWZpeEtleSIsInN0cmluZ2lmeVZhbHVlIiwic3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUiLCJpbXBvcnRhbnRpZnkiLCJoYXNoU3RyaW5nIiwiTUFQX0VYSVNUUyIsIk9yZGVyZWRFbGVtZW50cyIsImVsZW1lbnRzIiwia2V5T3JkZXIiLCJfcHJvdG8iLCJzaG91bGRSZW9yZGVyIiwibmVzdGVkIiwiX25lc3RlZCIsImFkZFN0eWxlVHlwZSIsInN0eWxlVHlwZSIsIl90aGlzIiwidW53cmFwRXhwb3J0cyIsImNyZWF0ZUNvbW1vbmpzTW9kdWxlIiwiZm4iLCJjYXBpdGFsaXplU3RyaW5nXzEiLCJwcmVmaXhQcm9wZXJ0eV8xIiwicHJlZml4UHJvcGVydGllcyIsInByb3BlcnR5IiwibmV3U3R5bGUiLCJyZXF1aXJlZFByZWZpeGVzIiwiY2FwaXRhbGl6ZWRQcm9wZXJ0eSIsIl9jYXBpdGFsaXplU3RyaW5nMiIsInN0eWxlUHJvcGVydHkiLCJqIiwicHJlZml4VmFsdWVfMSIsInBsdWdpbnMiLCJtZXRhRGF0YSIsImxlbiIsInByb2Nlc3NlZFZhbHVlIiwiYWRkTmV3VmFsdWVzT25seV8xIiwiYWRkSWZOZXciLCJ2YWx1ZXMiLCJpc09iamVjdF8xIiwiY3JlYXRlUHJlZml4ZXIiLCJfcmVmIiwicHJlZml4TWFwIiwiX2lzT2JqZWN0MiIsImNvbWJpbmVkVmFsdWUiLCJfcHJlZml4VmFsdWUyIiwiX2FkZE5ld1ZhbHVlc09ubHkyIiwiX3Byb2Nlc3NlZFZhbHVlIiwiX3ByZWZpeFByb3BlcnR5MiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJiYWNrZ3JvdW5kQ2xpcCIsImlzUHJlZml4ZWRWYWx1ZV8xIiwicmVnZXgiLCJjYWxjXzEiLCJfaXNQcmVmaXhlZFZhbHVlMiIsImNhbGMiLCJjcm9zc0ZhZGVfMSIsImNyb3NzRmFkZSIsImN1cnNvcl8xIiwiZ3JhYiIsImdyYWJiaW5nIiwiY3Vyc29yIiwiZmlsdGVyXzEiLCJmbGV4Ym94SUVfMSIsImFsdGVybmF0aXZlUHJvcHMiLCJhbHRlcm5hdGl2ZVZhbHVlcyIsImZsZXhTaG9ydGhhbmRNYXBwaW5ncyIsIm1zRmxleCIsImZsZXhWYWx1ZXMiLCJhbGlnbkNvbnRlbnQiLCJhbGlnblNlbGYiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJmbGV4QmFzaXMiLCJhdXRvIiwiaW5oZXJpdCIsImluaXRpYWwiLCJub25lIiwidW5zZXQiLCJmbGV4Ym94SUUiLCJmbGV4Ym94T2xkIiwiV2Via2l0Qm94T3JpZW50IiwiV2Via2l0Qm94RGlyZWN0aW9uIiwid3JhcCIsImZsZXhXcmFwIiwiZ3JhZGllbnRfMSIsImdyYWQiLCJncmFkaWVudCIsImdyaWRfMSIsIl9zbGljZWRUb0FycmF5IiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsIl9zIiwic2xpY2VJdGVyYXRvciIsImlzU2ltcGxlUG9zaXRpb25WYWx1ZSIsImRpc3BsYXlWYWx1ZXMiLCJwcm9wZXJ0eUNvbnZlcnRlcnMiLCJwcm9wZXJ0eUNvbnZlcnRlciIsImFsaWdubWVudFZhbHVlcyIsImdyaWQiLCJtc0dyaWRSb3dBbGlnbiIsIm1zR3JpZENvbHVtbiIsIl92YWx1ZSRzcGxpdCRtYXAiLCJwb3NpdGlvbiIsIl92YWx1ZSRzcGxpdCRtYXAyIiwibXNHcmlkQ29sdW1uU3BhbiIsIm1zR3JpZFJvdyIsIl92YWx1ZSRzcGxpdCRtYXAzIiwiX3ZhbHVlJHNwbGl0JG1hcDQiLCJtc0dyaWRSb3dTcGFuIiwiZ3JpZFRlbXBsYXRlQ29sdW1ucyIsIm1zR3JpZENvbHVtbnMiLCJncmlkVGVtcGxhdGVSb3dzIiwibXNHcmlkUm93cyIsImp1c3RpZnlTZWxmIiwibXNHcmlkQ29sdW1uQWxpZ24iLCJpbWFnZVNldF8xIiwiaW1hZ2VTZXQiLCJsb2dpY2FsIiwiYWx0ZXJuYXRpdmVQcm9wTGlzdCIsIm1hcmdpbkJsb2NrU3RhcnQiLCJtYXJnaW5CbG9ja0VuZCIsIm1hcmdpbklubGluZVN0YXJ0IiwibWFyZ2luSW5saW5lRW5kIiwicGFkZGluZ0Jsb2NrU3RhcnQiLCJwYWRkaW5nQmxvY2tFbmQiLCJwYWRkaW5nSW5saW5lU3RhcnQiLCJwYWRkaW5nSW5saW5lRW5kIiwiYm9yZGVyQmxvY2tTdGFydCIsImJvcmRlckJsb2NrU3RhcnRDb2xvciIsImJvcmRlckJsb2NrU3RhcnRTdHlsZSIsImJvcmRlckJsb2NrU3RhcnRXaWR0aCIsImJvcmRlckJsb2NrRW5kIiwiYm9yZGVyQmxvY2tFbmRDb2xvciIsImJvcmRlckJsb2NrRW5kU3R5bGUiLCJib3JkZXJCbG9ja0VuZFdpZHRoIiwiYm9yZGVySW5saW5lU3RhcnQiLCJib3JkZXJJbmxpbmVTdGFydENvbG9yIiwiYm9yZGVySW5saW5lU3RhcnRTdHlsZSIsImJvcmRlcklubGluZVN0YXJ0V2lkdGgiLCJib3JkZXJJbmxpbmVFbmQiLCJib3JkZXJJbmxpbmVFbmRDb2xvciIsImJvcmRlcklubGluZUVuZFN0eWxlIiwiYm9yZGVySW5saW5lRW5kV2lkdGgiLCJzaXppbmdfMSIsInByb3BlcnRpZXMiLCJtYXhIZWlnaHQiLCJtYXhXaWR0aCIsImNvbHVtbldpZHRoIiwibWluV2lkdGgiLCJtaW5IZWlnaHQiLCJzaXppbmciLCJ1cHBlcmNhc2VQYXR0ZXJuIiwibXNQYXR0ZXJuIiwidG9IeXBoZW5Mb3dlciIsIl9oeXBoZW5hdGVTdHlsZU5hbWUiLCJmcmVlemUiLCJoTmFtZSIsImh5cGhlbmF0ZVByb3BlcnR5XzEiLCJfaHlwaGVuYXRlU3R5bGVOYW1lMiIsInRyYW5zaXRpb25fMSIsInByb3BlcnR5UHJlZml4TWFwIiwib3V0cHV0VmFsdWUiLCJtdWx0aXBsZVZhbHVlcyIsInNpbmdsZVZhbHVlIiwiZGFzaENhc2VQcm9wZXJ0eSIsIl9oeXBoZW5hdGVQcm9wZXJ0eTIiLCJwTGVuIiwicHJlZml4TWFwcGluZyIsInByZWZpeFZhbHVlIiwid2Via2l0T3V0cHV0IiwidmFsIiwibW96T3V0cHV0IiwidHJhbnNpdGlvblByb3BlcnR5IiwiV2Via2l0VHJhbnNpdGlvbiIsIldlYmtpdFRyYW5zaXRpb25Qcm9wZXJ0eSIsIk1velRyYW5zaXRpb24iLCJNb3pUcmFuc2l0aW9uUHJvcGVydHkiLCJXZWJraXQiLCJNb3oiLCJtcyIsIndtIiwid21zIiwid21tcyIsInByZWZpeEFsbCIsImRlZmF1bHRTZWxlY3RvckhhbmRsZXJzIiwic2VsZWN0b3IiLCJiYXNlU2VsZWN0b3IiLCJnZW5lcmF0ZVN1YnRyZWVTdHlsZXMiLCJnZW5lcmF0ZWQiLCJnZW5lcmF0ZUNTUyIsInN0eWxlVHlwZXMiLCJzZWxlY3RvckhhbmRsZXJzIiwic3RyaW5nSGFuZGxlcnMiLCJ1c2VJbXBvcnRhbnQiLCJtZXJnZWQiLCJwbGFpbkRlY2xhcmF0aW9ucyIsImdlbmVyYXRlZFN0eWxlcyIsInNvbWUiLCJoYW5kbGVyIiwibmV3U2VsZWN0b3IiLCJ3YXJuIiwiZ2VuZXJhdGVkUnVsZXNldCIsImdlbmVyYXRlQ1NTUnVsZXNldCIsInRyYW5zZm9ybVJ1bGUiLCJ0cmFuc2Zvcm1WYWx1ZSIsImFycmF5VG9PYmplY3RLZXlzUmVkdWNlciIsImFjYyIsImRlY2xhcmF0aW9ucyIsInN0cmluZ0hhbmRsZXJLZXlzIiwicnVuU3RyaW5nSGFuZGxlcnMiLCJvcmlnaW5hbEVsZW1lbnRzIiwicmVkdWNlIiwicHJlZml4ZWRFbGVtZW50cyIsImVsZW1lbnROYW1lcyIsIm9yaWdpbmFsU3R5bGUiLCJvcmlnaW5hbEluZGV4IiwicnVsZXMiLCJzdHlsZVRhZyIsImZvbnRGYW1pbHkiLCJuYW1lTWFwIiwiaW5qZWN0U3R5bGVPbmNlIiwiZmluYWxWYWwiLCJ2YWxWYWwiLCJ2YWxLZXkiLCJpbmplY3RHZW5lcmF0ZWRDU1NPbmNlIiwiYWxyZWFkeUluamVjdGVkIiwiaW5qZWN0aW9uQnVmZmVyIiwiaXNCdWZmZXJpbmciLCJnZW5lcmF0ZWRDU1MiLCJfaW5qZWN0aW9uQnVmZmVyIiwiZmx1c2hUb1N0eWxlVGFnIiwiZGVmaW5pdGlvbnMiLCJyZXNldEluamVjdGVkU3R5bGUiLCJmbHVzaFRvQXJyYXkiLCJyZXQiLCJjc3NSdWxlcyIsInNoZWV0IiwiaW5zZXJ0UnVsZSIsIm51bVJ1bGVzIiwicnVsZSIsImlubmVyVGV4dCIsImluamVjdFN0eWxlVGFnIiwicHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMiLCJzdHlsZURlZmluaXRpb25zIiwiY2xhc3NOYW1lQml0cyIsImRlZmluaXRpb25CaXRzIiwiZGVmIiwiX25hbWUiLCJfZGVmaW5pdGlvbiIsIl9sZW4iLCJpbmplY3RBbmRHZXRDbGFzc05hbWUiLCJjbGFzc05hbWUiLCJ1bm1pbmlmaWVkSGFzaEZuIiwiaGFzaEZuIiwiU3R5bGVTaGVldCIsInNoZWV0RGVmaW5pdGlvbiIsIm1hcHBlZFNoZWV0RGVmaW5pdGlvbiIsInN0cmluZ1ZhbCIsInJlaHlkcmF0ZSIsIlN0eWxlU2hlZXRTZXJ2ZXIiLCJyZW5kZXJTdGF0aWMiLCJyZW5kZXJGdW5jIiwic3RhcnRCdWZmZXJpbmciLCJodG1sIiwicmVuZGVyZWRDbGFzc05hbWVzIiwiQXBocm9kaXRlIiwibWFrZUV4cG9ydHMiLCJleHRlbnNpb25zIiwiZXh0ZW5zaW9uU2VsZWN0b3JIYW5kbGVycyIsImV4dGVuc2lvbiIsInNlbGVjdG9ySGFuZGxlciIsIlN0eWxlU2hlZXRUZXN0VXRpbHMiLCJtaW5pZnkiLCJzaG91bGRNaW5pZnkiLCJfa2V5IiwicmVzZXQiLCJOb3RpZmljYXRpb25JdGVtIiwiX1B1cmVDb21wb25lbnQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY2FsbFN1cGVyIiwiX2luaGVyaXRzIiwiX3RoaXMkcHJvcHMiLCJtYXJrQXNSZWFkIiwic3R5bGVzIiwidXJnZW50IiwiUmVhY3QiLCJmb250U2l6ZSIsInByb3BUeXBlcyIsIm5vdGlmaWNhdGlvbnMiLCJib3JkZXIiLCJtYXJnaW5SaWdodCIsIm5vdGlmaWNhdGlvbnNQYXJhZ3JhcGgiLCJwYWRkaW5nIiwibWFyZ2luIiwibWVudUl0ZW0iLCJub3RpZmljYXRpb25zVW5vcmRlcmVkTGlzdCIsInBhZGRpbmdMZWZ0IiwiTm90aWZpY2F0aW9ucyIsIl9Db21wb25lbnQiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwibmV4dFByb3BzIiwibGlzdE5vdGlmaWNhdGlvbnMiLCJfdGhpczIiLCJkaXNwbGF5RHJhd2VyIiwibm90aWZpY2F0aW9uIiwiYmFja2dyb3VuZCIsImhhbmRsZUJ1dHRvbkNsaWNrIiwiY2xvc2VJY29uIiwiYWx0IiwiTm90aWZpY2F0aW9uSXRlbVNoYXBlIiwibG9nbyIsInBvaW50ZXJFdmVudHMiLCJoZWFkZXJNYWluIiwiYmFja2dyb3VuZENvbG9yIiwiZmxleERpcmVjdGlvbiIsImhlYWRlclRpdGxlIiwibG9jYWxzIiwiZ2V0RnVsbFllYXIiLCJsb2dpbkJvZHkiLCJsb2dpblBhcmFncmFwaCIsImxhYmVsIiwicGFkZGluZ1JpZ2h0IiwiYm9yZGVyUmFkaXVzIiwiYm94U2hhZG93IiwidGV4dEFsaWduIiwidGV4dERlY29yYXRpb24iLCJib3JkZXJDb2xvciIsIm91dGxpbmUiLCJodG1sRm9yIiwiY3JlZGl0IiwiaGVhZGVyUm93U3BhbjIiLCJzZWNvbmRIZWFkZXJSb3ciLCJib3JkZXJUb3AiLCJib3JkZXJCb3R0b20iLCJzZWNvbmRIZWFkZXJSb3dGaXJzdENlbGwiLCJzZWNvbmRIZWFkZXJSb3dTZWNvbmRDZWxsIiwiYm9keVJvd0NlbGwiLCJyb3ciLCJoZWFkZXIiLCJDb3Vyc2VMaXN0Um93IiwiaXNIZWFkZXIiLCJ0ZXh0Rmlyc3RDZWxsIiwidGV4dFNlY29uZENlbGwiLCJoZWFkZXJSb3dTdHlsZSIsInJvd1N0eWxlIiwiY29sU3BhbiIsImNvdXJzZVRhYmxlIiwiYm9yZGVyQ29sbGFwc2UiLCJDb3Vyc2VMaXN0IiwibGlzdENvdXJzZXMiLCJjb3Vyc2UiLCJDb3Vyc2VTaGFwZSIsIkJvZHlTZWN0aW9uIiwidGl0bGUiLCJib2R5TWFyZ2luIiwiQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIiwiaGVhZGVyV3JhcHBlciIsImhlYWRlck5vdGlmaWNhdGlvbnMiLCJmb290ZXIiLCJmb250U3R5bGUiLCJib3R0b20iLCJBcHAiLCJoYW5kbGVLZXlEb3duIiwiYWxlcnQiLCJsb2dPdXQiLCJpc0xvZ2dlZEluIiwiX3RoaXMkc3RhdGUiLCJIZWFkZXIiLCJMb2dpbiIsIkZvb3RlciIsImZvb3RlckNsYXNzTmFtZSIsIlJlYWN0RE9NIiwiZ2V0RWxlbWVudEJ5SWQiXSwic291cmNlUm9vdCI6IiJ9